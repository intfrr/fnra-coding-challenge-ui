import { QueryList, AfterContentInit } from '@angular/core';
import { IgxSplitterPaneComponent } from './splitter-pane/splitter-pane.component';
/**
 * An enumeration that defines the `SplitterComponent` panes orientation.
 */
export declare enum SplitterType {
    Horizontal = 0,
    Vertical = 1
}
/**
 * Provides a framework for a simple layout, splitting the view horizontally or vertically
 * into multiple smaller resizable and collapsible areas.
 * @igxModule IgxSplitterModule
 *
 * @igxParent Layouts
 *
 * @igxTheme igx-splitter-theme
 *
 * @igxKeywords splitter panes layout
 *
 * @igxGroup presentation
 *
 * @example
 * ```html
 * <igx-splitter>
 *  <igx-splitter-pane>
 *      ...
 *  </igx-splitter-pane>
 *  <igx-splitter-pane>
 *      ...
 *  </igx-splitter-pane>
 * </igx-splitter>
 * ```
 */
export declare class IgxSplitterComponent implements AfterContentInit {
    private _type;
    /**
     * Gets/Sets the splitter orientation.
     * @example
     * ```html
     * <igx-splitter [type]="type">...</igx-splitter>
     * ```
     */
    get type(): SplitterType;
    set type(value: SplitterType);
    /**
     * Gets the list of splitter panes.
     * @example
     * ```typescript
     * const panes = this.splitter.panes;
     * ```
     */
    panes: QueryList<IgxSplitterPaneComponent>;
    /**
     * @hidden @internal
     * Gets the `flex-direction` property of the current `SplitterComponent`.
     */
    get direction(): string;
    /**
     * @hidden @internal
     * Gets/Sets the `overflow` property of the current splitter.
     */
    overflow: string;
    /**
     * @hidden @internal
     * Sets/Gets the `display` property of the current splitter.
     */
    display: string;
    /**
     * @hidden @internal
     * A field that holds the initial size of the main `IgxSplitterPaneComponent` in each pair of panes divided by a splitter bar.
     */
    private initialPaneSize;
    /**
     * @hidden @internal
     * A field that holds the initial size of the sibling pane in each pair of panes divided by a gripper.
     * @memberof SplitterComponent
     */
    private initialSiblingSize;
    /**
     * @hidden @internal
     * The main pane in each pair of panes divided by a gripper.
     */
    private pane;
    /**
     * The sibling pane in each pair of panes divided by a splitter bar.
     */
    private sibling;
    /** @hidden @internal */
    ngAfterContentInit(): void;
    /**
     * @hidden @internal
     * This method performs  initialization logic when the user starts dragging the splitter bar between each pair of panes.
     * @param pane - the main pane associated with the currently dragged bar.
     */
    onMoveStart(pane: IgxSplitterPaneComponent): void;
    /**
     * @hidden @internal
     * This method performs calculations concerning the sizes of each pair of panes when the bar between them is dragged.
     * @param delta - The difference along the X (or Y) axis between the initial and the current point when dragging the bar.
     */
    onMoving(delta: number): void;
    /**
     * @hidden @internal
     * This method assigns the order of each pane.
     */
    private assignFlexOrder;
    /** @hidden @internal */
    getPaneSiblingsByOrder(order: number, barIndex: number): Array<IgxSplitterPaneComponent>;
}
