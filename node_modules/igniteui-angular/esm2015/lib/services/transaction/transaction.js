export var TransactionType;
(function (TransactionType) {
    TransactionType["ADD"] = "add";
    TransactionType["DELETE"] = "delete";
    TransactionType["UPDATE"] = "update";
})(TransactionType || (TransactionType = {}));
export var TransactionEventOrigin;
(function (TransactionEventOrigin) {
    TransactionEventOrigin["UNDO"] = "undo";
    TransactionEventOrigin["REDO"] = "redo";
    TransactionEventOrigin["CLEAR"] = "clear";
    TransactionEventOrigin["ADD"] = "add";
    TransactionEventOrigin["END"] = "endPending";
})(TransactionEventOrigin || (TransactionEventOrigin = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvc2VydmljZXMvdHJhbnNhY3Rpb24vdHJhbnNhY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFOLElBQVksZUFJWDtBQUpELFdBQVksZUFBZTtJQUN2Qiw4QkFBVyxDQUFBO0lBQ1gsb0NBQWlCLENBQUE7SUFDakIsb0NBQWlCLENBQUE7QUFDckIsQ0FBQyxFQUpXLGVBQWUsS0FBZixlQUFlLFFBSTFCO0FBRUQsTUFBTSxDQUFOLElBQVksc0JBTVg7QUFORCxXQUFZLHNCQUFzQjtJQUM5Qix1Q0FBYSxDQUFBO0lBQ2IsdUNBQWEsQ0FBQTtJQUNiLHlDQUFlLENBQUE7SUFDZixxQ0FBVyxDQUFBO0lBQ1gsNENBQWtCLENBQUE7QUFDdEIsQ0FBQyxFQU5XLHNCQUFzQixLQUF0QixzQkFBc0IsUUFNakMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGVudW0gVHJhbnNhY3Rpb25UeXBlIHtcbiAgICBBREQgPSAnYWRkJyxcbiAgICBERUxFVEUgPSAnZGVsZXRlJyxcbiAgICBVUERBVEUgPSAndXBkYXRlJ1xufVxuXG5leHBvcnQgZW51bSBUcmFuc2FjdGlvbkV2ZW50T3JpZ2luIHtcbiAgICBVTkRPID0gJ3VuZG8nLFxuICAgIFJFRE8gPSAncmVkbycsXG4gICAgQ0xFQVIgPSAnY2xlYXInLFxuICAgIEFERCA9ICdhZGQnLFxuICAgIEVORCA9ICdlbmRQZW5kaW5nJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRyYW5zYWN0aW9uIHtcbiAgICBpZDogYW55O1xuICAgIHR5cGU6IFRyYW5zYWN0aW9uVHlwZTtcbiAgICBuZXdWYWx1ZTogYW55O1xufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBIaWVyYXJjaGljYWxUcmFuc2FjdGlvbiBleHRlbmRzIFRyYW5zYWN0aW9uIHtcbiAgICBwYXRoPzogYW55W107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xuICAgIHZhbHVlOiBhbnk7XG4gICAgcmVjb3JkUmVmOiBhbnk7XG4gICAgdHlwZTogVHJhbnNhY3Rpb25UeXBlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbjxUIGV4dGVuZHMgVHJhbnNhY3Rpb24+IHtcbiAgICB0cmFuc2FjdGlvbjogVDtcbiAgICByZWNvcmRSZWY6IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGF0ZVVwZGF0ZUV2ZW50IHtcbiAgICBvcmlnaW46IFRyYW5zYWN0aW9uRXZlbnRPcmlnaW47XG4gICAgYWN0aW9uczogQWN0aW9uPFRyYW5zYWN0aW9uPltdO1xufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBIaWVyYXJjaGljYWxTdGF0ZSBleHRlbmRzIFN0YXRlIHtcbiAgICBwYXRoOiBhbnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUcmFuc2FjdGlvblNlcnZpY2U8VCBleHRlbmRzIFRyYW5zYWN0aW9uLCBTIGV4dGVuZHMgU3RhdGU+IHtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHdoZXRoZXIgdHJhbnNhY3Rpb24gaXMgZW5hYmxlZCBmb3IgdGhpcyBzZXJ2aWNlXG4gICAgICovXG4gICAgcmVhZG9ubHkgZW5hYmxlZDogYm9vbGVhbjtcblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGZpcmVkIHdoZW4gdHJhbnNhY3Rpb24gc3RhdGUgaGFzIGNoYW5nZWQgLSBhZGQgdHJhbnNhY3Rpb24sIGNvbW1pdCBhbGwgdHJhbnNhY3Rpb25zLCB1bmRvIGFuZCByZWRvXG4gICAgICovXG4gICAgb25TdGF0ZVVwZGF0ZT86IEV2ZW50RW1pdHRlcjxTdGF0ZVVwZGF0ZUV2ZW50PjtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIGlmIHRoZXJlIGFyZSBhbnkgdHJhbnNhY3Rpb25zIGluIHRoZSBVbmRvIHN0YWNrXG4gICAgICovXG4gICAgY2FuVW5kbzogYm9vbGVhbjtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIGlmIHRoZXJlIGFyZSBhbnkgdHJhbnNhY3Rpb25zIGluIHRoZSBSZWRvIHN0YWNrXG4gICAgICovXG4gICAgY2FuUmVkbzogYm9vbGVhbjtcblxuICAgIC8qKlxuICAgICAqIEFkZHMgcHJvdmlkZWQgIHRyYW5zYWN0aW9uIHdpdGggcmVjb3JkUmVmIGlmIGFueVxuICAgICAqIEBwYXJhbSB0cmFuc2FjdGlvbiBUcmFuc2FjdGlvbiB0byBiZSBhZGRlZFxuICAgICAqIEBwYXJhbSByZWNvcmRSZWYgUmVmZXJlbmNlIHRvIHRoZSB2YWx1ZSBvZiB0aGUgcmVjb3JkIGluIHRoZSBkYXRhIHNvdXJjZSByZWxhdGVkIHRvIHRoZSBjaGFuZ2VkIGl0ZW1cbiAgICAgKi9cbiAgICBhZGQodHJhbnNhY3Rpb246IFQsIHJlY29yZFJlZj86IGFueSk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFsbCByZWNvcmRlZCB0cmFuc2FjdGlvbnMgaW4gY2hyb25vbG9naWNhbCBvcmRlclxuICAgICAqIEBwYXJhbSBpZCBPcHRpb25hbCByZWNvcmQgaWQgdG8gZ2V0IHRyYW5zYWN0aW9ucyBmb3JcbiAgICAgKiBAcmV0dXJucyBBbGwgdHJhbnNhY3Rpb24gaW4gdGhlIHNlcnZpY2Ugb3IgZm9yIHRoZSBzcGVjaWZpZWQgcmVjb3JkXG4gICAgICovXG4gICAgZ2V0VHJhbnNhY3Rpb25Mb2coaWQ/OiBhbnkpOiBUW107XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIGxhc3QgdHJhbnNhY3Rpb24gaWYgYW55XG4gICAgICovXG4gICAgdW5kbygpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyB0aGUgbGFzdCB1bmRvbmUgdHJhbnNhY3Rpb24gaWYgYW55XG4gICAgICovXG4gICAgcmVkbygpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhZ2dyZWdhdGVkIGNoYW5nZXMgZnJvbSBhbGwgdHJhbnNhY3Rpb25zXG4gICAgICogQHBhcmFtIG1lcmdlQ2hhbmdlcyBJZiBzZXQgdG8gdHJ1ZSB3aWxsIG1lcmdlIGVhY2ggc3RhdGUncyB2YWx1ZSBvdmVyIHJlbGF0ZSByZWNvcmRSZWZcbiAgICAgKiBhbmQgd2lsbCByZWNvcmQgcmVzdWx0aW5nIHZhbHVlIGluIHRoZSByZWxhdGVkIHRyYW5zYWN0aW9uXG4gICAgICogQHJldHVybnMgQ29sbGVjdGlvbiBvZiBhZ2dyZWdhdGVkIHRyYW5zYWN0aW9ucyBmb3IgZWFjaCBjaGFuZ2VkIHJlY29yZFxuICAgICAqL1xuICAgIGdldEFnZ3JlZ2F0ZWRDaGFuZ2VzKG1lcmdlQ2hhbmdlczogYm9vbGVhbik6IFRbXTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHN0YXRlIG9mIHRoZSByZWNvcmQgd2l0aCBwcm92aWRlZCBpZFxuICAgICAqIEBwYXJhbSBpZCBUaGUgaWQgb2YgdGhlIHJlY29yZFxuICAgICAqIEBwYXJhbSBwZW5kaW5nIFNob3VsZCBnZXQgcGVuZGluZyBzdGF0ZVxuICAgICAqIEByZXR1cm5zIFN0YXRlIG9mIHRoZSByZWNvcmQgaWYgYW55XG4gICAgICovXG4gICAgZ2V0U3RhdGUoaWQ6IGFueSwgcGVuZGluZz86IGJvb2xlYW4pOiBTO1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB2YWx1ZSBvZiB0aGUgcmVxdWlyZWQgaWQgaW5jbHVkaW5nIGFsbCB1bmNvbW1pdHRlZCBjaGFuZ2VzXG4gICAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgcmVjb3JkIHRvIHJldHVybiB2YWx1ZSBmb3JcbiAgICAgKiBAcGFyYW0gbWVyZ2VDaGFuZ2VzIElmIHNldCB0byB0cnVlIHdpbGwgbWVyZ2Ugc3RhdGUncyB2YWx1ZSBvdmVyIHJlbGF0ZSByZWNvcmRSZWZcbiAgICAgKiBhbmQgd2lsbCByZXR1cm4gbWVyZ2VkIHZhbHVlXG4gICAgICogQHJldHVybnMgVmFsdWUgd2l0aCBjaGFuZ2VzIG9yICoqbnVsbCoqXG4gICAgICovXG4gICAgZ2V0QWdncmVnYXRlZFZhbHVlKGlkOiBhbnksIG1lcmdlQ2hhbmdlczogYm9vbGVhbik6IGFueTtcblxuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgYWxsIHRyYW5zYWN0aW9ucyBvdmVyIHRoZSBwcm92aWRlZCBkYXRhXG4gICAgICogQHBhcmFtIGRhdGEgRGF0YSBzb3VyY2UgdG8gdXBkYXRlXG4gICAgICogQHBhcmFtIGlkIE9wdGlvbmFsIHJlY29yZCBpZCB0byBjb21taXQgdHJhbnNhY3Rpb25zIGZvclxuICAgICAqL1xuICAgIGNvbW1pdChkYXRhOiBhbnlbXSwgaWQ/OiBhbnkpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQ2xlYXJzIGFsbCB0cmFuc2FjdGlvbnNcbiAgICAgKiBAcGFyYW0gaWQgT3B0aW9uYWwgcmVjb3JkIGlkIHRvIGNsZWFyIHRyYW5zYWN0aW9ucyBmb3JcbiAgICAgKi9cbiAgICBjbGVhcihpZD86IGFueSk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBTdGFydHMgcGVuZGluZyB0cmFuc2FjdGlvbnMuIEFsbCB0cmFuc2FjdGlvbnMgcGFzc2VkIGFmdGVyIGNhbGwgdG8gc3RhcnRQZW5kaW5nXG4gICAgICogd2lsbCBub3QgYmUgYWRkZWQgdG8gdHJhbnNhY3Rpb24gbG9nXG4gICAgICovXG4gICAgc3RhcnRQZW5kaW5nKCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBDbGVhcnMgYWxsIHBlbmRpbmcgdHJhbnNhY3Rpb25zIGFuZCBhZ2dyZWdhdGVkIHBlbmRpbmcgc3RhdGUuIElmIGNvbW1pdCBpcyBzZXQgdG8gdHJ1ZVxuICAgICAqIGNvbW1pdHMgcGVuZGluZyBzdGF0ZXMgYXMgc2luZ2xlIHRyYW5zYWN0aW9uXG4gICAgICogQHBhcmFtIGNvbW1pdCBTaG91bGQgY29tbWl0IHRoZSBwZW5kaW5nIHN0YXRlc1xuICAgICAqL1xuICAgIGVuZFBlbmRpbmcoY29tbWl0OiBib29sZWFuKTogdm9pZDtcbn1cbiJdfQ==