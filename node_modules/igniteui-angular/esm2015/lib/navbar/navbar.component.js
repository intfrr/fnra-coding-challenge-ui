import { CommonModule } from '@angular/common';
import { Component, EventEmitter, HostBinding, Input, NgModule, Output, Directive, ContentChild } from '@angular/core';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxIconModule } from '../icon/public_api';
/**
 * IgxActionIcon is a container for the action nav icon of the IgxNavbar.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../icon/icon.component';

function IgxNavbarComponent_igx_icon_2_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-icon", 5);
    ɵngcc0.ɵɵlistener("click", function IgxNavbarComponent_igx_icon_2_Template_igx_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._triggerAction(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.actionButtonIcon, " ");
} }
function IgxNavbarComponent_h1_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h1", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("id", ctx_r1.titleId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.title, " ");
} }
const _c0 = [[["igx-navbar-action"], ["", "igxNavbarAction", ""]], [["igx-navbar-title"], ["", "igxNavbarTitle", ""]], "*"];
const _c1 = ["igx-navbar-action, [igxNavbarAction]", "igx-navbar-title, [igxNavbarTitle]", "*"];
export class IgxNavbarActionDirective {
}
IgxNavbarActionDirective.ɵfac = function IgxNavbarActionDirective_Factory(t) { return new (t || IgxNavbarActionDirective)(); };
IgxNavbarActionDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxNavbarActionDirective, selectors: [["igx-navbar-action"], ["", "igxNavbarAction", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxNavbarActionDirective, [{
        type: Directive,
        args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'igx-navbar-action,[igxNavbarAction]'
            }]
    }], null, null); })();
export class IgxNavbarTitleDirective {
}
IgxNavbarTitleDirective.ɵfac = function IgxNavbarTitleDirective_Factory(t) { return new (t || IgxNavbarTitleDirective)(); };
IgxNavbarTitleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxNavbarTitleDirective, selectors: [["igx-navbar-title"], ["", "igxNavbarTitle", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxNavbarTitleDirective, [{
        type: Directive,
        args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'igx-navbar-title,[igxNavbarTitle]'
            }]
    }], null, null); })();
let NEXT_ID = 0;
/**
 * **Ignite UI for Angular Navbar** -
 * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/navbar.html)
 *
 * The Ignite UI Navbar is most commonly used to provide an app header with a hamburger menu and navigation
 * state such as a "Go Back" button. It also supports other actions represented by icons.
 *
 * Example:
 * ```html
 * <igx-navbar title="Sample App" actionButtonIcon="menu">
 *   <igx-icon>search</igx-icon>
 *   <igx-icon>favorite</igx-icon>
 *   <igx-icon>more_vert</igx-icon>
 * </igx-navbar>
 * ```
 */
export class IgxNavbarComponent {
    constructor() {
        this.isVisible = true;
        /**
         * An @Input property that sets the value of the `id` attribute. If not provided it will be automatically generated.
         * ```html
         * <igx-navbar [id]="'igx-navbar-12'" title="Sample App" actionButtonIcon="menu">
         * ```
         */
        this.id = `igx-navbar-${NEXT_ID++}`;
        /**
         * The event that will be thrown when the action is executed,
         * provides reference to the `IgxNavbar` component as argument
         * ```typescript
         * public actionExc(event){
         *     alert("Action Execute!");
         * }
         *  //..
         * ```
         * ```html
         * <igx-navbar (onAction)="actionExc($event)" title="Sample App" actionButtonIcon="menu">
         * ```
         */
        this.onAction = new EventEmitter();
        /**
         * An @Input property that sets the titleId of the `IgxNavbarComponent`. If not set it will be automatically generated.
         * ```html
         * <igx-navbar [titleId]="'igx-navbar-7'" title="Sample App" actionButtonIcon="menu">
         * ```
         */
        this.titleId = `igx-navbar-${IgxNavbarComponent.NEXT_ID++}`;
    }
    /**
     * Returns whether the `IgxNavbarComponent` action button is visible, true/false.
     * ```typescript
     *  @ViewChild("MyChild")
     * public navBar: IgxNavbarComponent;
     * ngAfterViewInit(){
     *     let actionButtonVisibile = this.navBar.isActionButtonVisible;
     * }
     * ```
     */
    get isActionButtonVisible() {
        if (this.actionIconTemplate || !this.actionButtonIcon) {
            return false;
        }
        return this.isVisible;
    }
    get isTitleContentVisible() {
        return this.titleContent ? true : false;
    }
    /**
     * Sets whether the action button of the `IgxNavbarComponent` is visible.
     * ```html
     * <igx-navbar [title]="currentView" [isActionButtonVisible]="'false'"></igx-navbar>
     * ```
     */
    set isActionButtonVisible(value) {
        this.isVisible = value;
    }
    /**
     * @hidden
     */
    _triggerAction() {
        this.onAction.emit(this);
    }
}
IgxNavbarComponent.ɵfac = function IgxNavbarComponent_Factory(t) { return new (t || IgxNavbarComponent)(); };
IgxNavbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxNavbarComponent, selectors: [["igx-navbar"]], contentQueries: function IgxNavbarComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, IgxNavbarActionDirective, true, IgxNavbarActionDirective);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IgxNavbarTitleDirective, true, IgxNavbarTitleDirective);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.actionIconTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleContent = _t.first);
    } }, hostVars: 1, hostBindings: function IgxNavbarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("id", ctx.id);
    } }, inputs: { id: "id", titleId: "titleId", isActionButtonVisible: "isActionButtonVisible", actionButtonIcon: "actionButtonIcon", title: "title" }, outputs: { onAction: "onAction" }, ngContentSelectors: _c1, decls: 8, vars: 3, consts: [["role", "navigation", 1, "igx-navbar"], [1, "igx-navbar__left"], ["fontSet", "material", 3, "click", 4, "ngIf"], ["class", "igx-navbar__title", 4, "ngIf"], [1, "igx-navbar__right"], ["fontSet", "material", 3, "click"], [1, "igx-navbar__title"]], template: function IgxNavbarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, IgxNavbarComponent_igx_icon_2_Template, 2, 1, "igx-icon", 2);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵtemplate(4, IgxNavbarComponent_h1_4_Template, 2, 2, "h1", 3);
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵprojection(7, 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.titleId);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isActionButtonVisible);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isTitleContentVisible);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.IgxIconComponent], styles: ["[_nghost-%COMP%] {\n            display: block;\n        }"] });
IgxNavbarComponent.NEXT_ID = 1;
IgxNavbarComponent.propDecorators = {
    id: [{ type: HostBinding, args: ['attr.id',] }, { type: Input }],
    isActionButtonVisible: [{ type: Input }],
    actionButtonIcon: [{ type: Input }],
    title: [{ type: Input }],
    onAction: [{ type: Output }],
    titleId: [{ type: Input }],
    actionIconTemplate: [{ type: ContentChild, args: [IgxNavbarActionDirective, { read: IgxNavbarActionDirective },] }],
    titleContent: [{ type: ContentChild, args: [IgxNavbarTitleDirective, { read: IgxNavbarTitleDirective },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxNavbarComponent, [{
        type: Component,
        args: [{
                selector: 'igx-navbar',
                template: "<nav class=\"igx-navbar\" role=\"navigation\" [attr.aria-labelledby]=\"titleId\">\n    <div class=\"igx-navbar__left\">\n        <igx-icon\n            (click)=\"_triggerAction()\"\n            fontSet=\"material\"\n            *ngIf=\"isActionButtonVisible\">\n            {{actionButtonIcon}}\n        </igx-icon>\n        <ng-content select=\"igx-navbar-action, [igxNavbarAction]\"></ng-content>\n        <h1\n            *ngIf=\"!isTitleContentVisible\"\n            class=\"igx-navbar__title\"\n            [attr.id]=\"titleId\">\n            {{ title }}\n        </h1>\n        <ng-content select=\"igx-navbar-title, [igxNavbarTitle]\"></ng-content>\n    </div>\n    <div class=\"igx-navbar__right\">\n        <ng-content></ng-content>\n    </div>\n</nav>\n",
                styles: [`
        :host {
            display: block;
        }
    `]
            }]
    }], function () { return []; }, { id: [{
            type: HostBinding,
            args: ['attr.id']
        }, {
            type: Input
        }], onAction: [{
            type: Output
        }], titleId: [{
            type: Input
        }], isActionButtonVisible: [{
            type: Input
        }], actionButtonIcon: [{
            type: Input
        }], title: [{
            type: Input
        }], actionIconTemplate: [{
            type: ContentChild,
            args: [IgxNavbarActionDirective, { read: IgxNavbarActionDirective }]
        }], titleContent: [{
            type: ContentChild,
            args: [IgxNavbarTitleDirective, { read: IgxNavbarTitleDirective }]
        }] }); })();
/**
 * @hidden
 */
export class IgxNavbarModule {
}
IgxNavbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxNavbarModule });
IgxNavbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxNavbarModule_Factory(t) { return new (t || IgxNavbarModule)(); }, imports: [[IgxButtonModule, IgxIconModule, CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxNavbarModule, { declarations: function () { return [IgxNavbarComponent, IgxNavbarActionDirective, IgxNavbarTitleDirective]; }, imports: function () { return [IgxButtonModule, IgxIconModule, CommonModule]; }, exports: function () { return [IgxNavbarComponent, IgxNavbarActionDirective, IgxNavbarTitleDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxNavbarModule, [{
        type: NgModule,
        args: [{
                declarations: [IgxNavbarComponent, IgxNavbarActionDirective, IgxNavbarTitleDirective],
                exports: [IgxNavbarComponent, IgxNavbarActionDirective, IgxNavbarTitleDirective],
                imports: [IgxButtonModule, IgxIconModule, CommonModule]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,