import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Component, Input, Output, NgModule, Optional, Inject, EventEmitter, HostBinding } from '@angular/core';
import { CurrentResourceStrings } from '../core/i18n/resources';
import { DisplayDensityToken, DisplayDensityBase, DisplayDensity } from '../core/displayDensity';
import { IgxSelectModule } from '../select/public_api';
import { IgxIconModule } from '../icon/public_api';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxRippleModule } from '../directives/ripple/ripple.directive';
import { IgxInputGroupModule } from '../input-group/public_api';
import { DeprecateProperty } from '../core/deprecateDecorators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../select/select.component';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '../directives/label/label.directive';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../directives/button/button.directive';
import * as ɵngcc6 from '../directives/ripple/ripple.directive';
import * as ɵngcc7 from '../icon/icon.component';
import * as ɵngcc8 from '../select/select-item.component';

function IgxPaginatorComponent_igx_select_item_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-select-item", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const val_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", val_r1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", val_r1, " ");
} }
export class IgxPaginatorComponent extends DisplayDensityBase {
    constructor(_displayDensityOptions) {
        super(_displayDensityOptions);
        this._displayDensityOptions = _displayDensityOptions;
        this._resourceStrings = CurrentResourceStrings.PaginatorResStrings;
        this._overlaySettings = {};
        this._page = 0;
        this.defaultSelectValues = [5, 10, 15, 25, 50, 100, 500];
        this._perPage = 15;
        /**
         * An @Input property that sets if the pager in the paginator should be enabled.
         * ```html
         * <igx-paginator [pagerEnabled]="true"></igx-paginator>
         * ```
         * @memberof IgxPaginatorComponent
         */
        this.pagerEnabled = true;
        /**
         * An @Input property that sets if the pager in the paginator should be hidden.
         * ```html
         * <igx-paginator [pagerHidden]="true"></igx-paginator>
         * ```
         * @memberof IgxPaginatorComponent
         */
        this.pagerHidden = false;
        /**
         * An @Input property that sets if the dropdown in the paginator should be enabled.
         * ```html
         * <igx-paginator [dropdownEnabled]="true"></igx-paginator>
         * ```
         * @memberof IgxPaginatorComponent
         */
        this.dropdownEnabled = true;
        /**
         * An @Input property that sets if the dropdown in the paginator should be hidden.
         * ```html
         * <igx-paginator [dropdownHidden]="true"></igx-paginator>
         * ```
         * @memberof IgxPaginatorComponent
         */
        this.dropdownHidden = false;
        /**
         * @deprecated Use 'resourceStrings' instead.
         * An @Input property, sets number of label of the select.
         * The default is 'Items per page' localized string.
         * ```html
         * <igx-paginator label="My custom label"></igx-paginator>
         * ```
         * @memberof IgxPaginatorComponent
         */
        this.selectLabel = CurrentResourceStrings.PaginatorResStrings.igx_paginator_label;
        /**
         * @deprecated Use 'resourceStrings' instead.
         * An @Input property, sets a preposition between the current page and total pages.
         * The default is 'of' localized string.
         * @memberof IgxPaginatorComponent
         */
        this.prepositionPage = CurrentResourceStrings.PaginatorResStrings.igx_paginator_pager_text;
        /**
         * Emitted when `perPage` property value of the paginator is changed.
         * @example
         * ```html
         * <igx-paginator (perPageChange)="onPerPageChange($event)"></igx-paginator>
         * ```
         * ```typescript
         * public onPerPageChange(perPage: number) {
         *   this.perPage = perPage;
         * }
         * ```
         */
        this.perPageChange = new EventEmitter();
        /**
         * Emitted after the current page is changed.
         * @example
         * ```html
         * <igx-paginator (pageChange)="onPageChange($event)"></igx-paginator>
         * ```
         * ```typescript
         * public onPageChange(page: number) {
         *   this.currentPage = page;
         * }
         * ```
         */
        this.pageChange = new EventEmitter();
    }
    /**
     * Sets the class of the IgxPaginatorComponent based
     * on the provided displayDensity.
     */
    get classCosy() {
        return this.displayDensity === DisplayDensity.cosy;
    }
    get classCompact() {
        return this.displayDensity === DisplayDensity.compact;
    }
    get classComfortable() {
        return this.displayDensity === DisplayDensity.comfortable;
    }
    /**
     * An @Input property, sets current page of the `IgxPaginatorComponent`.
     * The default is 0.
     * ```typescript
     * let page = this.paginator.page;
     * ```
     * @memberof IgxPaginatorComponent
     */
    get page() {
        return this._page;
    }
    set page(value) {
        this._page = value;
        this.pageChange.emit(this._page);
    }
    /**
     * An @Input property, sets number of visible items per page in the `IgxPaginatorComponent`.
     * The default is 15.
     * ```typescript
     * let itemsPerPage = this.paginator.perPage;
     * ```
     * @memberof IgxPaginatorComponent
     */
    get perPage() {
        return this._perPage;
    }
    set perPage(value) {
        this._perPage = Number(value);
        this.perPageChange.emit(this._perPage);
        this._selectOptions = this.sortUniqueOptions(this.defaultSelectValues, this._perPage);
        this.totalPages = Math.ceil(this.totalRecords / this._perPage);
        if (this.totalPages !== 0 && this.page >= this.totalPages) {
            this.page = this.totalPages - 1;
        }
    }
    /**
     * An @Input property that sets the total records.
     * ```typescript
     * let totalRecords = this.paginator.totalRecords;
     * ```
     * @memberof IgxPaginatorComponent
     */
    get totalRecords() {
        return this._totalRecords;
    }
    set totalRecords(value) {
        this._totalRecords = value;
        this.totalPages = Math.ceil(this.totalRecords / this.perPage);
    }
    /**
     * An @Input property that sets custom options in the select of the paginator
     * ```typescript
     * let options = this.paginator.selectOptions;
     * ```
     * @memberof IgxPaginatorComponent
     */
    get selectOptions() {
        return this._selectOptions;
    }
    set selectOptions(value) {
        this._selectOptions = this.sortUniqueOptions(value, this._perPage);
        this.defaultSelectValues = [...value];
    }
    /**
     * An @Input property that sets custom OverlaySettings.
     * ```html
     * <igx-paginator [overlaySettings] = "customOverlaySettings"></igx-paginator>
     * ```
     */
    get overlaySettings() {
        return this._overlaySettings;
    }
    set overlaySettings(value) {
        this._overlaySettings = Object.assign({}, this._overlaySettings, value);
    }
    /**
     * An accessor that sets the resource strings.
     * By default it uses EN resources.
     */
    set resourceStrings(value) {
        this._resourceStrings = Object.assign({}, this._resourceStrings, value);
    }
    /**
     * An accessor that returns the resource strings.
     */
    get resourceStrings() {
        return this._resourceStrings;
    }
    /**
     * Returns if the current page is the last page.
     * ```typescript
     * const lastPage = this.paginator.isLastPage;
     * ```
     */
    get isLastPage() {
        return this.page + 1 >= this.totalPages;
    }
    /**
     * Returns if the current page is the first page.
     * ```typescript
     * const lastPage = this.paginator.isFirstPage;
     * ```
     */
    get isFirstPage() {
        return this.page === 0;
    }
    /**
     * Returns if the first pager buttons should be disabled
     */
    get isFirstPageDisabled() {
        return this.isFirstPage || !this.pagerEnabled;
    }
    /**
     * Returns if the last pager buttons should be disabled
     */
    get isLastPageDisabled() {
        return this.isLastPage || !this.pagerEnabled;
    }
    sortUniqueOptions(values, newOption) {
        return Array.from(new Set([...values, newOption])).sort((a, b) => a - b);
    }
    /**
     * Sets DisplayDensity for the <select> inside the paginator
     * @hidden
     */
    paginatorSelectDisplayDensity() {
        if (this.displayDensity === DisplayDensity.comfortable) {
            return DisplayDensity.cosy;
        }
        return DisplayDensity.compact;
    }
    /**
     * Goes to the next page of the `IgxPaginatorComponent`, if the paginator is not already at the last page.
     * ```typescript
     * this.paginator.nextPage();
     * ```
     * @memberof IgxPaginatorComponent
     */
    nextPage() {
        if (!this.isLastPage) {
            this.page += 1;
        }
    }
    /**
     * Goes to the previous page of the `IgxPaginatorComponent`, if the paginator is not already at the first page.
     * ```typescript
     * this.paginator.previousPage();
     * ```
     * @memberof IgxPaginatorComponent
     */
    previousPage() {
        if (!this.isFirstPage) {
            this.page -= 1;
        }
    }
    /**
     * Goes to the desired page index.
     * ```typescript
     * this.paginator.paginate(1);
     * ```
     * @param val
     * @memberof IgxPaginatorComponent
     */
    paginate(val) {
        if (val < 0 || val > this.totalPages - 1) {
            return;
        }
        this.page = val;
    }
}
IgxPaginatorComponent.ɵfac = function IgxPaginatorComponent_Factory(t) { return new (t || IgxPaginatorComponent)(ɵngcc0.ɵɵdirectiveInject(DisplayDensityToken, 8)); };
IgxPaginatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxPaginatorComponent, selectors: [["igx-paginator"]], hostVars: 6, hostBindings: function IgxPaginatorComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("igx-paginator--cosy", ctx.classCosy)("igx-paginator--compact", ctx.classCompact)("igx-paginator", ctx.classComfortable);
    } }, inputs: { pagerEnabled: "pagerEnabled", pagerHidden: "pagerHidden", dropdownEnabled: "dropdownEnabled", dropdownHidden: "dropdownHidden", selectLabel: "selectLabel", prepositionPage: "prepositionPage", page: "page", perPage: "perPage", totalRecords: "totalRecords", selectOptions: "selectOptions", overlaySettings: "overlaySettings", resourceStrings: "resourceStrings" }, outputs: { perPageChange: "perPageChange", pageChange: "pageChange" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 28, vars: 25, consts: [[1, "igx-paginator__select", 3, "hidden"], [1, "igx-paginator__label"], [1, "igx-paginator__select-input"], ["type", "border", 3, "overlaySettings", "ngModel", "displayDensity", "disabled", "ngModelChange"], ["igxLabel", "", 3, "hidden"], [3, "value", 4, "ngFor", "ngForOf"], ["role", "navigation", 1, "igx-paginator__pager", 3, "hidden"], ["igxButton", "icon", "igxRipple", "", "igxRippleCentered", "true", 3, "title", "disabled", "click"], ["fontSet", "material"], ["aria-current", "page", 1, "igx-paginator__pager-text"], ["igxRipple", "", "igxRippleCentered", "true", "igxButton", "icon", 3, "title", "disabled", "click"], [3, "value"]], template: function IgxPaginatorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "igx-select", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function IgxPaginatorComponent_Template_igx_select_ngModelChange_4_listener($event) { return ctx.perPage = $event; });
        ɵngcc0.ɵɵelementStart(5, "label", 4);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, IgxPaginatorComponent_igx_select_item_7_Template, 2, 2, "igx-select-item", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 6);
        ɵngcc0.ɵɵelementStart(9, "button", 7);
        ɵngcc0.ɵɵlistener("click", function IgxPaginatorComponent_Template_button_click_9_listener() { return ctx.paginate(0); });
        ɵngcc0.ɵɵelementStart(10, "igx-icon", 8);
        ɵngcc0.ɵɵtext(11, "first_page");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "button", 7);
        ɵngcc0.ɵɵlistener("click", function IgxPaginatorComponent_Template_button_click_12_listener() { return ctx.previousPage(); });
        ɵngcc0.ɵɵelementStart(13, "igx-icon", 8);
        ɵngcc0.ɵɵtext(14, "chevron_left");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(15, "div", 9);
        ɵngcc0.ɵɵelementStart(16, "span");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "span");
        ɵngcc0.ɵɵtext(19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(20, "span");
        ɵngcc0.ɵɵtext(21);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "button", 10);
        ɵngcc0.ɵɵlistener("click", function IgxPaginatorComponent_Template_button_click_22_listener() { return ctx.nextPage(); });
        ɵngcc0.ɵɵelementStart(23, "igx-icon", 8);
        ɵngcc0.ɵɵtext(24, "chevron_right");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "button", 7);
        ɵngcc0.ɵɵlistener("click", function IgxPaginatorComponent_Template_button_click_25_listener() { return ctx.paginate(ctx.totalPages - 1); });
        ɵngcc0.ɵɵelementStart(26, "igx-icon", 8);
        ɵngcc0.ɵɵtext(27, "last_page");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("hidden", ctx.dropdownHidden);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.resourceStrings.igx_paginator_label);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("overlaySettings", ctx.overlaySettings)("ngModel", ctx.perPage)("displayDensity", ctx.paginatorSelectDisplayDensity())("disabled", !ctx.dropdownEnabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.resourceStrings.igx_paginator_label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.selectOptions);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", ctx.pagerHidden);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("title", ctx.resourceStrings.igx_paginator_first_page_button_text)("disabled", ctx.isFirstPageDisabled);
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isFirstPageDisabled);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("title", ctx.resourceStrings.igx_paginator_previous_page_button_text)("disabled", ctx.isFirstPageDisabled);
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isFirstPageDisabled);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ctx.page + 1);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1("\u00A0", ctx.resourceStrings.igx_paginator_pager_text, "\u00A0");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.totalPages);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("title", ctx.resourceStrings.igx_paginator_next_page_button_text)("disabled", ctx.isLastPageDisabled);
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isLastPageDisabled);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("title", ctx.resourceStrings.igx_paginator_last_page_button_text)("disabled", ctx.isLastPageDisabled);
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isLastPageDisabled);
    } }, directives: [ɵngcc1.IgxSelectComponent, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc3.IgxLabelDirective, ɵngcc4.NgForOf, ɵngcc5.IgxButtonDirective, ɵngcc6.IgxRippleDirective, ɵngcc7.IgxIconComponent, ɵngcc8.IgxSelectItemComponent], encapsulation: 2 });
IgxPaginatorComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DisplayDensityToken,] }] }
];
IgxPaginatorComponent.propDecorators = {
    classCosy: [{ type: HostBinding, args: ['class.igx-paginator--cosy',] }],
    classCompact: [{ type: HostBinding, args: ['class.igx-paginator--compact',] }],
    classComfortable: [{ type: HostBinding, args: ['class.igx-paginator',] }],
    page: [{ type: Input }],
    perPage: [{ type: Input }],
    totalRecords: [{ type: Input }],
    selectOptions: [{ type: Input }],
    pagerEnabled: [{ type: Input }],
    pagerHidden: [{ type: Input }],
    dropdownEnabled: [{ type: Input }],
    dropdownHidden: [{ type: Input }],
    overlaySettings: [{ type: Input }],
    resourceStrings: [{ type: Input }],
    selectLabel: [{ type: Input }],
    prepositionPage: [{ type: Input }],
    perPageChange: [{ type: Output }],
    pageChange: [{ type: Output }]
};
__decorate([
    DeprecateProperty(`'selectLabel' property is deprecated. Use 'resourceStrings' instead.`)
], IgxPaginatorComponent.prototype, "selectLabel", void 0);
__decorate([
    DeprecateProperty(`'prepositionPage' property is deprecated. Use 'resourceStrings' instead.`)
], IgxPaginatorComponent.prototype, "prepositionPage", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxPaginatorComponent, [{
        type: Component,
        args: [{
                selector: 'igx-paginator',
                template: "<div class=\"igx-paginator__select\" [hidden]=\"dropdownHidden\">\n    <label class=\"igx-paginator__label\">{{ resourceStrings.igx_paginator_label }}</label>\n    <div class=\"igx-paginator__select-input\">\n        <igx-select [overlaySettings]=\"overlaySettings\" [(ngModel)]=\"perPage\" [displayDensity]=\"paginatorSelectDisplayDensity()\" type=\"border\"\n            [disabled]=\"!dropdownEnabled\">\n            <label igxLabel [hidden]=\"true\">{{ resourceStrings.igx_paginator_label }}</label>\n            <igx-select-item [value]=\"val\" *ngFor=\"let val of selectOptions\">\n                {{val}}\n            </igx-select-item>\n        </igx-select>\n    </div>\n</div>\n<div class=\"igx-paginator__pager\" [hidden]=\"pagerHidden\" role=\"navigation\">\n    <button [title]=\"resourceStrings.igx_paginator_first_page_button_text\" [disabled]=\"isFirstPageDisabled\" [attr.aria-disabled]=\"isFirstPageDisabled\" (click)=\"paginate(0)\" igxButton=\"icon\" igxRipple igxRippleCentered=\"true\">\n        <igx-icon fontSet=\"material\">first_page</igx-icon>\n    </button>\n    <button [title]=\"resourceStrings.igx_paginator_previous_page_button_text\" [disabled]=\"isFirstPageDisabled\" [attr.aria-disabled]=\"isFirstPageDisabled\" (click)=\"previousPage()\" igxButton=\"icon\" igxRipple igxRippleCentered=\"true\">\n        <igx-icon fontSet=\"material\">chevron_left</igx-icon>\n    </button>\n    <div class='igx-paginator__pager-text' aria-current=\"page\">\n        <span>{{ page + 1 }}</span>\n        <span>&nbsp;{{ resourceStrings.igx_paginator_pager_text }}&nbsp;</span>\n        <span>{{ totalPages }}</span>\n    </div>\n    <button [title]=\"resourceStrings.igx_paginator_next_page_button_text\" [disabled]=\"isLastPageDisabled\" [attr.aria-disabled]=\"isLastPageDisabled\" (click)=\"nextPage()\" igxRipple igxRippleCentered=\"true\" igxButton=\"icon\">\n        <igx-icon fontSet=\"material\">chevron_right</igx-icon>\n    </button>\n    <button [title]=\"resourceStrings.igx_paginator_last_page_button_text\" [disabled]=\"isLastPageDisabled\" [attr.aria-disabled]=\"isLastPageDisabled\" (click)=\"paginate(totalPages - 1)\" igxButton=\"icon\" igxRipple\n        igxRippleCentered=\"true\">\n        <igx-icon fontSet=\"material\">last_page</igx-icon>\n    </button>\n</div>\n"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [DisplayDensityToken]
            }] }]; }, { pagerEnabled: [{
            type: Input
        }], pagerHidden: [{
            type: Input
        }], dropdownEnabled: [{
            type: Input
        }], dropdownHidden: [{
            type: Input
        }], selectLabel: [{
            type: Input
        }], prepositionPage: [{
            type: Input
        }], perPageChange: [{
            type: Output
        }], pageChange: [{
            type: Output
        }], classCosy: [{
            type: HostBinding,
            args: ['class.igx-paginator--cosy']
        }], classCompact: [{
            type: HostBinding,
            args: ['class.igx-paginator--compact']
        }], classComfortable: [{
            type: HostBinding,
            args: ['class.igx-paginator']
        }], page: [{
            type: Input
        }], perPage: [{
            type: Input
        }], totalRecords: [{
            type: Input
        }], selectOptions: [{
            type: Input
        }], overlaySettings: [{
            type: Input
        }], resourceStrings: [{
            type: Input
        }] }); })();
export class IgxPaginatorModule {
}
IgxPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxPaginatorModule });
IgxPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxPaginatorModule_Factory(t) { return new (t || IgxPaginatorModule)(); }, imports: [[CommonModule, IgxSelectModule, FormsModule, IgxIconModule, IgxButtonModule, IgxRippleModule, IgxInputGroupModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxPaginatorModule, { declarations: function () { return [IgxPaginatorComponent]; }, imports: function () { return [CommonModule, IgxSelectModule, FormsModule, IgxIconModule, IgxButtonModule, IgxRippleModule, IgxInputGroupModule]; }, exports: function () { return [IgxPaginatorComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxPaginatorModule, [{
        type: NgModule,
        args: [{
                declarations: [IgxPaginatorComponent],
                exports: [IgxPaginatorComponent],
                imports: [CommonModule, IgxSelectModule, FormsModule, IgxIconModule, IgxButtonModule, IgxRippleModule, IgxInputGroupModule]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,