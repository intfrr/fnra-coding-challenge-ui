import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { IgxIconModule } from '../icon/public_api';
import { IgxDropDownModule } from '../drop-down/public_api';
import { IgxToggleModule } from './../directives/toggle/toggle.directive';
import { IgxRippleModule } from '../directives/ripple/ripple.directive';
import { IgxInputGroupModule } from '../input-group/input-group.component';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxSelectComponent, IgxSelectToggleIconDirective, IgxSelectHeaderDirective, IgxSelectFooterDirective } from './select.component';
import { IgxSelectItemComponent } from './select-item.component';
import { IgxSelectItemNavigationDirective } from './select-navigation.directive';
import { IgxSelectGroupComponent } from './select-group.component';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export class IgxSelectModule {
}
IgxSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxSelectModule });
IgxSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxSelectModule_Factory(t) { return new (t || IgxSelectModule)(); }, providers: [], imports: [[
            CommonModule,
            FormsModule,
            IgxButtonModule,
            IgxDropDownModule,
            IgxIconModule,
            IgxInputGroupModule,
            IgxRippleModule,
            IgxToggleModule,
            ReactiveFormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxSelectModule, { declarations: function () { return [IgxSelectComponent,
        IgxSelectFooterDirective,
        IgxSelectGroupComponent,
        IgxSelectHeaderDirective,
        IgxSelectItemComponent,
        IgxSelectItemNavigationDirective,
        IgxSelectToggleIconDirective]; }, imports: function () { return [CommonModule,
        FormsModule,
        IgxButtonModule,
        IgxDropDownModule,
        IgxIconModule,
        IgxInputGroupModule,
        IgxRippleModule,
        IgxToggleModule,
        ReactiveFormsModule]; }, exports: function () { return [IgxSelectComponent,
        IgxSelectFooterDirective,
        IgxSelectGroupComponent,
        IgxSelectHeaderDirective,
        IgxSelectItemComponent,
        IgxSelectItemNavigationDirective,
        IgxSelectToggleIconDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxSelectModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxSelectComponent,
                    IgxSelectFooterDirective,
                    IgxSelectGroupComponent,
                    IgxSelectHeaderDirective,
                    IgxSelectItemComponent,
                    IgxSelectItemNavigationDirective,
                    IgxSelectToggleIconDirective
                ],
                exports: [
                    IgxSelectComponent,
                    IgxSelectFooterDirective,
                    IgxSelectGroupComponent,
                    IgxSelectHeaderDirective,
                    IgxSelectItemComponent,
                    IgxSelectItemNavigationDirective,
                    IgxSelectToggleIconDirective
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    IgxButtonModule,
                    IgxDropDownModule,
                    IgxIconModule,
                    IgxInputGroupModule,
                    IgxRippleModule,
                    IgxToggleModule,
                    ReactiveFormsModule
                ],
                providers: []
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL3NlbGVjdC9zZWxlY3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFFeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLDRCQUE0QixFQUFFLHdCQUF3QixFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDMUksT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDakYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFbkUsY0FBYzs7QUFpQ2QsTUFBTSxPQUFPLGVBQWU7QUFBRzsyQ0FoQzlCLFFBQVEsU0FBQztHQUNOLFlBQVksRUFBRSxzQkFDVixrQkFBa0Isc0JBQ2xCLHdCQUF3QixzQkFDeEIsdUJBQXVCO09BQ3ZCO0tBQXdCO0VBQ3hCLHNCQUFzQjtpQkFDdEI7a0JBQWdDO2FBQ2hDO1FBQTRCLGtCQUMvQjtlQUNELE9BQU8sRUFBRTtpQkFDTDtHQUFrQjtVQUNsQix3QkFBd0Isc0JBQ3hCLHVCQUF1QixzQkFDdkIsd0JBQXdCLHNCQUN4QjtFQUFzQixzQkFDdEI7c0JBQWdDO1dBQ2hDO0tBQTRCLGtCQUMvQjtTQUNELE9BQU8sRUFBRSxzQkFDTDtVQUFZLHNCQUNaLFdBQVcsc0JBQ1gsZUFBZTtlQUNmO1dBQWlCO1FBQ2pCLGFBQWE7Z0JBQ2I7WUFBbUI7S0FDbkIsZUFBZTtpQkFDZjtPQUFlLHNCQUNmLG1CQUFtQixrQkFDdEI7QUFDRCxTQUFTLEVBQUUsRUFBRSxjQUNoQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IElneEljb25Nb2R1bGUgfSBmcm9tICcuLi9pY29uL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSWd4RHJvcERvd25Nb2R1bGUgfSBmcm9tICcuLi9kcm9wLWRvd24vcHVibGljX2FwaSc7XG5pbXBvcnQgeyBJZ3hUb2dnbGVNb2R1bGUgfSBmcm9tICcuLy4uL2RpcmVjdGl2ZXMvdG9nZ2xlL3RvZ2dsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4UmlwcGxlTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9yaXBwbGUvcmlwcGxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnLi4vaW5wdXQtZ3JvdXAvaW5wdXQtZ3JvdXAuY29tcG9uZW50JztcbmltcG9ydCB7IElneEJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvYnV0dG9uL2J1dHRvbi5kaXJlY3RpdmUnO1xuXG5pbXBvcnQgeyBJZ3hTZWxlY3RDb21wb25lbnQsIElneFNlbGVjdFRvZ2dsZUljb25EaXJlY3RpdmUsIElneFNlbGVjdEhlYWRlckRpcmVjdGl2ZSwgSWd4U2VsZWN0Rm9vdGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9zZWxlY3QuY29tcG9uZW50JztcbmltcG9ydCB7IElneFNlbGVjdEl0ZW1Db21wb25lbnQgfSBmcm9tICcuL3NlbGVjdC1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hTZWxlY3RJdGVtTmF2aWdhdGlvbkRpcmVjdGl2ZSB9IGZyb20gJy4vc2VsZWN0LW5hdmlnYXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IElneFNlbGVjdEdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3QtZ3JvdXAuY29tcG9uZW50JztcblxuLyoqIEBoaWRkZW4gKi9cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIElneFNlbGVjdENvbXBvbmVudCxcbiAgICAgICAgSWd4U2VsZWN0Rm9vdGVyRGlyZWN0aXZlLFxuICAgICAgICBJZ3hTZWxlY3RHcm91cENvbXBvbmVudCxcbiAgICAgICAgSWd4U2VsZWN0SGVhZGVyRGlyZWN0aXZlLFxuICAgICAgICBJZ3hTZWxlY3RJdGVtQ29tcG9uZW50LFxuICAgICAgICBJZ3hTZWxlY3RJdGVtTmF2aWdhdGlvbkRpcmVjdGl2ZSxcbiAgICAgICAgSWd4U2VsZWN0VG9nZ2xlSWNvbkRpcmVjdGl2ZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBJZ3hTZWxlY3RDb21wb25lbnQsXG4gICAgICAgIElneFNlbGVjdEZvb3RlckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4U2VsZWN0R3JvdXBDb21wb25lbnQsXG4gICAgICAgIElneFNlbGVjdEhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4U2VsZWN0SXRlbUNvbXBvbmVudCxcbiAgICAgICAgSWd4U2VsZWN0SXRlbU5hdmlnYXRpb25EaXJlY3RpdmUsXG4gICAgICAgIElneFNlbGVjdFRvZ2dsZUljb25EaXJlY3RpdmVcbiAgICBdLFxuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgSWd4QnV0dG9uTW9kdWxlLFxuICAgICAgICBJZ3hEcm9wRG93bk1vZHVsZSxcbiAgICAgICAgSWd4SWNvbk1vZHVsZSxcbiAgICAgICAgSWd4SW5wdXRHcm91cE1vZHVsZSxcbiAgICAgICAgSWd4UmlwcGxlTW9kdWxlLFxuICAgICAgICBJZ3hUb2dnbGVNb2R1bGUsXG4gICAgICAgIFJlYWN0aXZlRm9ybXNNb2R1bGVcbiAgICBdLFxuICAgIHByb3ZpZGVyczogW11cbn0pXG5leHBvcnQgY2xhc3MgSWd4U2VsZWN0TW9kdWxlIHsgfVxuIl19