import { Directive, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class IgxProcessBarTextTemplateDirective {
    constructor(template) {
        this.template = template;
    }
}
IgxProcessBarTextTemplateDirective.ɵfac = function IgxProcessBarTextTemplateDirective_Factory(t) { return new (t || IgxProcessBarTextTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
IgxProcessBarTextTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxProcessBarTextTemplateDirective, selectors: [["", "igxProcessBarText", ""]] });
IgxProcessBarTextTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxProcessBarTextTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[igxProcessBarText]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
export class IgxProgressBarGradientDirective {
    constructor(template) {
        this.template = template;
    }
}
IgxProgressBarGradientDirective.ɵfac = function IgxProgressBarGradientDirective_Factory(t) { return new (t || IgxProgressBarGradientDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
IgxProgressBarGradientDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxProgressBarGradientDirective, selectors: [["", "igxProgressBarGradient", ""]] });
IgxProgressBarGradientDirective.ctorParameters = () => [
    { type: TemplateRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxProgressBarGradientDirective, [{
        type: Directive,
        args: [{
                selector: '[igxProgressBarGradient]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NiYXIuY29tbW9uLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3NiYXIuY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUt2RCxNQUFNLE9BQU8sa0NBQWtDO0FBQy9DLElBQUksWUFBbUIsUUFBMEI7QUFBSSxRQUE5QixhQUFRLEdBQVIsUUFBUSxDQUFrQjtBQUFDLElBQUcsQ0FBQztBQUN0RDs4REFMQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHFCQUFxQixjQUNsQzs2SkFDSTtBQUFDO0FBQ1UsWUFOSSxXQUFXO0FBQUc7Ozs7Ozs0RUFBRTtBQVlwQyxNQUFNLE9BQU8sK0JBQStCO0FBQzVDLElBQUksWUFBbUIsUUFBMEI7QUFBSSxRQUE5QixhQUFRLEdBQVIsUUFBUSxDQUFrQjtBQUFDLElBQUcsQ0FBQztBQUN0RDsyREFMQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLDBCQUEwQixjQUN2Qzs0SkFDSTtBQUFDO0FBQ1UsWUFiSSxXQUFXO0FBQUc7Ozs7Ozs0RUFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hQcm9jZXNzQmFyVGV4dF0nXG59KVxuZXhwb3J0IGNsYXNzIElneFByb2Nlc3NCYXJUZXh0VGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PikgeyB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2lneFByb2dyZXNzQmFyR3JhZGllbnRdJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hQcm9ncmVzc0JhckdyYWRpZW50RGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHsgfVxufVxuIl19