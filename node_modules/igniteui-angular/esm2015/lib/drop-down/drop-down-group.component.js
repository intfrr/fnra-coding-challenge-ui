import { Component, Input, HostBinding } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = [[["igx-drop-down-item"]]];
const _c1 = ["igx-drop-down-item"];
let NEXT_ID = 0;
/**
 * The `<igx-drop-down-item>` is a container intended for row items in
 * a `<igx-drop-down>` container.
 */
export class IgxDropDownGroupComponent {
    constructor() {
        this._id = NEXT_ID++;
        /**
         * @hidden @internal
         */
        this.role = 'group';
        /** @hidden @internal */
        this.groupClass = true;
        /**
         * Sets/gets if the item group is disabled
         *
         * ```typescript
         * const myDropDownGroup: IgxDropDownGroupComponent = this.dropdownGroup;
         * // get
         * ...
         * const groupState: boolean = myDropDownGroup.disabled;
         * ...
         * //set
         * ...
         * myDropDownGroup,disabled = false;
         * ...
         * ```
         *
         * ```html
         * <igx-drop-down-item-group [label]="'My Items'" [disabled]="true">
         *     <igx-drop-down-item *ngFor="let item of items[index]" [value]="item.value">
         *         {{ item.text }}
         *     </igx-drop-down-item>
         * </igx-drop-down-item-group>
         * ```
         *
         * **NOTE:** All items inside of a disabled drop down group will be treated as disabled
         */
        this.disabled = false;
    }
    /**
     * @hidden @internal
     */
    get labelId() {
        return `igx-item-group-label-${this._id}`;
    }
    get labelledBy() {
        return this.labelId;
    }
}
IgxDropDownGroupComponent.ɵfac = function IgxDropDownGroupComponent_Factory(t) { return new (t || IgxDropDownGroupComponent)(); };
IgxDropDownGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxDropDownGroupComponent, selectors: [["igx-drop-down-item-group"]], hostVars: 7, hostBindings: function IgxDropDownGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role)("aria-disabled", ctx.disabled)("aria-labelledby", ctx.labelledBy);
        ɵngcc0.ɵɵclassProp("igx-drop-down__group", ctx.groupClass)("igx-drop-down__group--disabled", ctx.disabled);
    } }, inputs: { disabled: "disabled", label: "label" }, ngContentSelectors: _c1, decls: 3, vars: 2, consts: [[3, "id"]], template: function IgxDropDownGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("id", ctx.labelId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.label);
    } }, encapsulation: 2 });
IgxDropDownGroupComponent.propDecorators = {
    labelledBy: [{ type: HostBinding, args: [`attr.aria-labelledby`,] }],
    role: [{ type: HostBinding, args: ['attr.role',] }],
    groupClass: [{ type: HostBinding, args: ['class.igx-drop-down__group',] }],
    disabled: [{ type: Input }, { type: HostBinding, args: [`attr.aria-disabled`,] }, { type: HostBinding, args: ['class.igx-drop-down__group--disabled',] }],
    label: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxDropDownGroupComponent, [{
        type: Component,
        args: [{
                selector: 'igx-drop-down-item-group',
                template: `
        <label id="{{labelId}}">{{ label }}</label>
        <ng-content select="igx-drop-down-item"></ng-content>
    `
            }]
    }], function () { return []; }, { role: [{
            type: HostBinding,
            args: ['attr.role']
        }], groupClass: [{
            type: HostBinding,
            args: ['class.igx-drop-down__group']
        }], disabled: [{
            type: Input
        }, {
            type: HostBinding,
            args: [`attr.aria-disabled`]
        }, {
            type: HostBinding,
            args: ['class.igx-drop-down__group--disabled']
        }], labelledBy: [{
            type: HostBinding,
            args: [`attr.aria-labelledby`]
        }], label: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcC1kb3duLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2Ryb3AtZG93bi9kcm9wLWRvd24tZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFFOUQsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFRSCxNQUFNLE9BQU8seUJBQXlCO0FBQ3RDLElBUkE7QUFDRyxRQU9TLFFBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUM1QixRQWFJO0FBQ0o7QUFDSSxXQUFHO0FBQ1AsUUFDVyxTQUFJLEdBQUcsT0FBTyxDQUFDO0FBQzFCLFFBQ0ksd0JBQXdCO0FBQzVCLFFBQ1csZUFBVSxHQUFHLElBQUksQ0FBQztBQUM3QixRQUFJO0FBQ0o7QUFDSTtBQUNJO0FBQ0k7QUFFVjtBQUNPO0FBQWU7QUFHcEI7QUFDSTtBQUFpQjtBQUFlO0FBS3hDO0FBQWU7QUFBZTtBQUFXO0FBQW1CO0FBQ0k7QUFHNUQ7QUFDQTtBQUVtQjtBQUF1QztBQUFlO0FBQVc7QUFJeEQsV0FIekI7QUFDUCxRQUdXLGFBQVEsR0FBRyxLQUFLLENBQUM7QUFDNUIsSUF3QkEsQ0FBQztBQUNELElBM0VJO0FBQ0o7QUFDQSxPQUFPO0FBQ1AsSUFBSSxJQUFXLE9BQU87QUFBSyxRQUNuQixPQUFPLHdCQUF3QixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDbEQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUNXLFVBQVU7QUFBSyxRQUN0QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDNUIsSUFBSSxDQUFDO0FBQ0w7cURBckJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsMEJBQTBCO1lBQ3BDLFFBQVEsRUFBRSx5SEFHVCxjQUNKOzs7Ozs7Ozs7Ozs7OzZCQUNJO0FBQUM7QUFDSSx5QkFTTCxXQUFXLFNBQUMsc0JBQXNCO0FBQ2xDLG1CQU9BLFdBQVcsU0FBQyxXQUFXO0FBQ3ZCLHlCQUdBLFdBQVcsU0FBQyw0QkFBNEI7QUFDeEMsdUJBMEJBLEtBQUssWUFDTCxXQUFXLFNBQUMsb0JBQW9CLGNBQ2hDLFdBQVcsU0FBQyxzQ0FBc0M7QUFDbEQsb0JBdUJBLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmxldCBORVhUX0lEID0gMDtcbi8qKlxuICogVGhlIGA8aWd4LWRyb3AtZG93bi1pdGVtPmAgaXMgYSBjb250YWluZXIgaW50ZW5kZWQgZm9yIHJvdyBpdGVtcyBpblxuICogYSBgPGlneC1kcm9wLWRvd24+YCBjb250YWluZXIuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWRyb3AtZG93bi1pdGVtLWdyb3VwJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bGFiZWwgaWQ9XCJ7e2xhYmVsSWR9fVwiPnt7IGxhYmVsIH19PC9sYWJlbD5cbiAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiaWd4LWRyb3AtZG93bi1pdGVtXCI+PC9uZy1jb250ZW50PlxuICAgIGBcbn0pXG5leHBvcnQgY2xhc3MgSWd4RHJvcERvd25Hcm91cENvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBfaWQgPSBORVhUX0lEKys7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXQgbGFiZWxJZCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYGlneC1pdGVtLWdyb3VwLWxhYmVsLSR7dGhpcy5faWR9YDtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoYGF0dHIuYXJpYS1sYWJlbGxlZGJ5YClcbiAgICBwdWJsaWMgZ2V0IGxhYmVsbGVkQnkoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGFiZWxJZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnYXR0ci5yb2xlJylcbiAgICBwdWJsaWMgcm9sZSA9ICdncm91cCc7XG5cbiAgICAvKiogQGhpZGRlbiBAaW50ZXJuYWwgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1kcm9wLWRvd25fX2dyb3VwJylcbiAgICBwdWJsaWMgZ3JvdXBDbGFzcyA9IHRydWU7XG4gICAgLyoqXG4gICAgICogU2V0cy9nZXRzIGlmIHRoZSBpdGVtIGdyb3VwIGlzIGRpc2FibGVkXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3QgbXlEcm9wRG93bkdyb3VwOiBJZ3hEcm9wRG93bkdyb3VwQ29tcG9uZW50ID0gdGhpcy5kcm9wZG93bkdyb3VwO1xuICAgICAqIC8vIGdldFxuICAgICAqIC4uLlxuICAgICAqIGNvbnN0IGdyb3VwU3RhdGU6IGJvb2xlYW4gPSBteURyb3BEb3duR3JvdXAuZGlzYWJsZWQ7XG4gICAgICogLi4uXG4gICAgICogLy9zZXRcbiAgICAgKiAuLi5cbiAgICAgKiBteURyb3BEb3duR3JvdXAsZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgKiAuLi5cbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIGBgYGh0bWxcbiAgICAgKiA8aWd4LWRyb3AtZG93bi1pdGVtLWdyb3VwIFtsYWJlbF09XCInTXkgSXRlbXMnXCIgW2Rpc2FibGVkXT1cInRydWVcIj5cbiAgICAgKiAgICAgPGlneC1kcm9wLWRvd24taXRlbSAqbmdGb3I9XCJsZXQgaXRlbSBvZiBpdGVtc1tpbmRleF1cIiBbdmFsdWVdPVwiaXRlbS52YWx1ZVwiPlxuICAgICAqICAgICAgICAge3sgaXRlbS50ZXh0IH19XG4gICAgICogICAgIDwvaWd4LWRyb3AtZG93bi1pdGVtPlxuICAgICAqIDwvaWd4LWRyb3AtZG93bi1pdGVtLWdyb3VwPlxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogKipOT1RFOioqIEFsbCBpdGVtcyBpbnNpZGUgb2YgYSBkaXNhYmxlZCBkcm9wIGRvd24gZ3JvdXAgd2lsbCBiZSB0cmVhdGVkIGFzIGRpc2FibGVkXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoYGF0dHIuYXJpYS1kaXNhYmxlZGApXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZHJvcC1kb3duX19ncm91cC0tZGlzYWJsZWQnKVxuICAgIHB1YmxpYyBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogU2V0cy9nZXRzIHRoZSBsYWJlbCBvZiB0aGUgaXRlbSBncm91cFxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IG15RHJvcERvd25Hcm91cDogSWd4RHJvcERvd25Hcm91cENvbXBvbmVudCA9IHRoaXMuZHJvcGRvd25Hcm91cDtcbiAgICAgKiAvLyBnZXRcbiAgICAgKiAuLi5cbiAgICAgKiBjb25zdCBteUxhYmVsOiBzdHJpbmcgPSBteURyb3BEb3duR3JvdXAubGFiZWw7XG4gICAgICogLi4uXG4gICAgICogLy8gc2V0XG4gICAgICogLi4uXG4gICAgICogbXlEcm9wRG93bkdyb3VwLmxhYmVsID0gJ015IE5ldyBMYWJlbCc7XG4gICAgICogLi4uXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBgYGBodG1sXG4gICAgICogPGlneC1kcm9wLWRvd24taXRlbS1ncm91cCBbbGFiZWxdPVwiJ015IG5ldyBMYWJlbCdcIj5cbiAgICAgKiAgICAgIC4uLlxuICAgICAqIDwvaWd4LWRyb3AtZG93bi1pdGVtLWdyb3VwPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGxhYmVsOiBzdHJpbmc7XG59XG4iXX0=