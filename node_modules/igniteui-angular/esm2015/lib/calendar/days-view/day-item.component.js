import { Component, Input, Output, EventEmitter, HostBinding, ElementRef, HostListener } from '@angular/core';
import { isDateInRanges } from '../calendar';
import { CalendarSelection } from '../calendar-base';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class IgxDayItemComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.hideOutsideDays = false;
        this.isLastInRange = false;
        this.isFirstInRange = false;
        this.isWithinRange = false;
        this.onDateSelection = new EventEmitter();
        this._selected = false;
    }
    /**
     * Returns boolean indicating if the day is selected
     *
     */
    get selected() {
        return this._selected;
    }
    /**
     * Selects the day
     */
    set selected(value) {
        this._selected = value;
    }
    get isCurrentMonth() {
        return this.date.isCurrentMonth;
    }
    get isPreviousMonth() {
        return this.date.isPrevMonth;
    }
    get isNextMonth() {
        return this.date.isNextMonth;
    }
    get nativeElement() {
        return this.elementRef.nativeElement;
    }
    get isSelectedCSS() {
        return (!this.isDisabled && this.selected);
    }
    get isInactive() {
        return this.date.isNextMonth || this.date.isPrevMonth;
    }
    get isHidden() {
        return this.hideOutsideDays && this.isInactive;
    }
    get isToday() {
        const today = new Date(Date.now());
        const date = this.date.date;
        return (date.getFullYear() === today.getFullYear() &&
            date.getMonth() === today.getMonth() &&
            date.getDate() === today.getDate());
    }
    get isWeekend() {
        const day = this.date.date.getDay();
        return day === 0 || day === 6;
    }
    get isDisabled() {
        if (this.disabledDates === null) {
            return false;
        }
        return isDateInRanges(this.date.date, this.disabledDates);
    }
    get isOutOfRange() {
        if (!this.outOfRangeDates) {
            return false;
        }
        return isDateInRanges(this.date.date, this.outOfRangeDates);
    }
    get isFocusable() {
        return this.isCurrentMonth && !this.isHidden && !this.isDisabled && !this.isOutOfRange;
    }
    get isWithinRangeCSS() {
        return !this.isSingleSelection && this.isWithinRange;
    }
    get isSpecial() {
        if (this.specialDates === null) {
            return false;
        }
        return isDateInRanges(this.date.date, this.specialDates);
    }
    get defaultCSS() {
        return this.date.isCurrentMonth && !(this.isWeekend && this.selected);
    }
    get isDisabledCSS() {
        return this.isHidden || this.isDisabled || this.isOutOfRange;
    }
    get isSingleSelection() {
        return this.selection !== CalendarSelection.RANGE;
    }
    onSelect(event) {
        event.stopPropagation();
        this.onDateSelection.emit(this.date);
    }
}
IgxDayItemComponent.ɵfac = function IgxDayItemComponent_Factory(t) { return new (t || IgxDayItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
IgxDayItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxDayItemComponent, selectors: [["igx-day-item"]], hostVars: 24, hostBindings: function IgxDayItemComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function IgxDayItemComponent_click_HostBindingHandler($event) { return ctx.onSelect($event); })("keydown.enter", function IgxDayItemComponent_keydown_enter_HostBindingHandler($event) { return ctx.onSelect($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("igx-calendar__date--last", ctx.isLastInRange)("igx-calendar__date--first", ctx.isFirstInRange)("igx-calendar__date--selected", ctx.isSelectedCSS)("igx-calendar__date--inactive", ctx.isInactive)("igx-calendar__date--hidden", ctx.isHidden)("igx-calendar__date--current", ctx.isToday)("igx-calendar__date--weekend", ctx.isWeekend)("igx-calendar__date--range", ctx.isWithinRangeCSS)("igx-calendar__date--special", ctx.isSpecial)("igx-calendar__date", ctx.defaultCSS)("igx-calendar__date--disabled", ctx.isDisabledCSS)("igx-calendar__date--single", ctx.isSingleSelection);
    } }, inputs: { hideOutsideDays: "hideOutsideDays", isLastInRange: "isLastInRange", isFirstInRange: "isFirstInRange", isWithinRange: "isWithinRange", selected: "selected", date: "date", selection: "selection", disabledDates: "disabledDates", outOfRangeDates: "outOfRangeDates", specialDates: "specialDates" }, outputs: { onDateSelection: "onDateSelection" }, ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "igx-calendar__date-content"]], template: function IgxDayItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
IgxDayItemComponent.ctorParameters = () => [
    { type: ElementRef }
];
IgxDayItemComponent.propDecorators = {
    date: [{ type: Input }],
    selection: [{ type: Input }],
    selected: [{ type: Input }],
    disabledDates: [{ type: Input }],
    outOfRangeDates: [{ type: Input }],
    specialDates: [{ type: Input }],
    hideOutsideDays: [{ type: Input }],
    isLastInRange: [{ type: Input }, { type: HostBinding, args: ['class.igx-calendar__date--last',] }],
    isFirstInRange: [{ type: Input }, { type: HostBinding, args: ['class.igx-calendar__date--first',] }],
    isWithinRange: [{ type: Input }],
    onDateSelection: [{ type: Output }],
    isSelectedCSS: [{ type: HostBinding, args: ['class.igx-calendar__date--selected',] }],
    isInactive: [{ type: HostBinding, args: ['class.igx-calendar__date--inactive',] }],
    isHidden: [{ type: HostBinding, args: ['class.igx-calendar__date--hidden',] }],
    isToday: [{ type: HostBinding, args: ['class.igx-calendar__date--current',] }],
    isWeekend: [{ type: HostBinding, args: ['class.igx-calendar__date--weekend',] }],
    isWithinRangeCSS: [{ type: HostBinding, args: ['class.igx-calendar__date--range',] }],
    isSpecial: [{ type: HostBinding, args: ['class.igx-calendar__date--special',] }],
    defaultCSS: [{ type: HostBinding, args: ['class.igx-calendar__date',] }],
    isDisabledCSS: [{ type: HostBinding, args: ['class.igx-calendar__date--disabled',] }],
    isSingleSelection: [{ type: HostBinding, args: ['class.igx-calendar__date--single',] }],
    onSelect: [{ type: HostListener, args: ['click', ['$event'],] }, { type: HostListener, args: ['keydown.enter', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxDayItemComponent, [{
        type: Component,
        args: [{
                selector: 'igx-day-item',
                template: "<span class=\"igx-calendar__date-content\">\n    <ng-content></ng-content>\n</span>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { hideOutsideDays: [{
            type: Input
        }], isLastInRange: [{
            type: Input
        }, {
            type: HostBinding,
            args: ['class.igx-calendar__date--last']
        }], isFirstInRange: [{
            type: Input
        }, {
            type: HostBinding,
            args: ['class.igx-calendar__date--first']
        }], isWithinRange: [{
            type: Input
        }], onDateSelection: [{
            type: Output
        }], selected: [{
            type: Input
        }], isSelectedCSS: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--selected']
        }], isInactive: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--inactive']
        }], isHidden: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--hidden']
        }], isToday: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--current']
        }], isWeekend: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--weekend']
        }], isWithinRangeCSS: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--range']
        }], isSpecial: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--special']
        }], defaultCSS: [{
            type: HostBinding,
            args: ['class.igx-calendar__date']
        }], isDisabledCSS: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--disabled']
        }], isSingleSelection: [{
            type: HostBinding,
            args: ['class.igx-calendar__date--single']
        }], onSelect: [{
            type: HostListener,
            args: ['click', ['$event']]
        }, {
            type: HostListener,
            args: ['keydown.enter', ['$event']]
        }], date: [{
            type: Input
        }], selection: [{
            type: Input
        }], disabledDates: [{
            type: Input
        }], outOfRangeDates: [{
            type: Input
        }], specialDates: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,