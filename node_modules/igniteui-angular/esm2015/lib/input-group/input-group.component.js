import { __decorate } from "tslib";
import { CommonModule, DOCUMENT } from '@angular/common';
import { Component, ContentChild, ContentChildren, ElementRef, HostBinding, HostListener, Input, NgModule, Inject, Optional } from '@angular/core';
import { IgxHintDirective } from '../directives/hint/hint.directive';
import { IgxInputDirective, IgxInputState, } from '../directives/input/input.directive';
import { IgxLabelDirective } from '../directives/label/label.directive';
import { IgxPrefixModule } from '../directives/prefix/prefix.directive';
import { IgxSuffixModule } from '../directives/suffix/suffix.directive';
import { DisplayDensity, DisplayDensityToken, DisplayDensityBase, } from '../core/displayDensity';
import { IgxInputGroupBase } from './input-group.common';
import { DeprecateProperty } from '../core/deprecateDecorators';
import { IGX_INPUT_GROUP_TYPE } from './inputGroupType';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function IgxInputGroupComponent_div_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_div_0_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r16 = ɵngcc0.ɵɵreference(19);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r16);
} }
function IgxInputGroupComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 13);
} }
function IgxInputGroupComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 1);
} }
function IgxInputGroupComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2);
} }
function IgxInputGroupComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 3);
} }
function IgxInputGroupComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 4);
} }
function IgxInputGroupComponent_ng_template_12_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_12_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_12_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_12_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_ng_template_12_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementStart(2, "div", 15);
    ɵngcc0.ɵɵtemplate(3, IgxInputGroupComponent_ng_template_12_ng_container_3_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵtemplate(4, IgxInputGroupComponent_ng_template_12_ng_container_4_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, IgxInputGroupComponent_ng_template_12_ng_container_5_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(9);
    const _r2 = ɵngcc0.ɵɵreference(5);
    const _r4 = ɵngcc0.ɵɵreference(7);
    const _r8 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function IgxInputGroupComponent_ng_template_14_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_14_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_14_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_14_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxInputGroupComponent_ng_template_14_ng_container_0_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵtemplate(2, IgxInputGroupComponent_ng_template_14_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementStart(3, "div", 15);
    ɵngcc0.ɵɵtemplate(4, IgxInputGroupComponent_ng_template_14_ng_container_4_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, IgxInputGroupComponent_ng_template_14_ng_container_5_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r2 = ɵngcc0.ɵɵreference(5);
    const _r6 = ɵngcc0.ɵɵreference(9);
    const _r4 = ɵngcc0.ɵɵreference(7);
    const _r8 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function IgxInputGroupComponent_ng_template_16_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_16_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_16_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_16_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxInputGroupComponent_ng_template_16_ng_container_0_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵtemplate(2, IgxInputGroupComponent_ng_template_16_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵtemplate(3, IgxInputGroupComponent_ng_template_16_ng_container_3_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵtemplate(4, IgxInputGroupComponent_ng_template_16_ng_container_4_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r2 = ɵngcc0.ɵɵreference(5);
    const _r6 = ɵngcc0.ɵɵreference(9);
    const _r4 = ɵngcc0.ɵɵreference(7);
    const _r8 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_ng_template_18_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r14 = ɵngcc0.ɵɵreference(17);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r14);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_ng_template_18_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r12 = ɵngcc0.ɵɵreference(15);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r12);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_ng_template_18_ng_container_3_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r12 = ɵngcc0.ɵɵreference(15);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r12);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxInputGroupComponent_ng_template_18_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_ng_template_18_ng_container_4_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r10 = ɵngcc0.ɵɵreference(13);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r10);
} }
function IgxInputGroupComponent_ng_template_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 16);
    ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_ng_template_18_ng_container_1_Template, 2, 1, "ng-container", 17);
    ɵngcc0.ɵɵtemplate(2, IgxInputGroupComponent_ng_template_18_ng_container_2_Template, 2, 1, "ng-container", 17);
    ɵngcc0.ɵɵtemplate(3, IgxInputGroupComponent_ng_template_18_ng_container_3_Template, 2, 1, "ng-container", 17);
    ɵngcc0.ɵɵtemplate(4, IgxInputGroupComponent_ng_template_18_ng_container_4_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r17.theme);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "bootstrap");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "fluent");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "indigo-design");
} }
const _c0 = [[["igx-hint"], ["", "igxHint", ""]], [["", "igxLabel", ""]], [["", "igxInput", ""]], [["igx-prefix"], ["", "igxPrefix", ""]], [["igx-suffix"], ["", "igxSuffix", ""]]];
const _c1 = ["igx-hint, [igxHint]", "[igxLabel]", "[igxInput]", "igx-prefix, [igxPrefix]", "igx-suffix, [igxSuffix]"];
let NEXT_ID = 0;
var IgxInputGroupThemeEnum;
(function (IgxInputGroupThemeEnum) {
    IgxInputGroupThemeEnum[IgxInputGroupThemeEnum["material"] = 0] = "material";
    IgxInputGroupThemeEnum[IgxInputGroupThemeEnum["fluent"] = 1] = "fluent";
    IgxInputGroupThemeEnum[IgxInputGroupThemeEnum["bootstrap"] = 2] = "bootstrap";
    IgxInputGroupThemeEnum[IgxInputGroupThemeEnum["indigo-design"] = 3] = "indigo-design";
})(IgxInputGroupThemeEnum || (IgxInputGroupThemeEnum = {}));
export class IgxInputGroupComponent extends DisplayDensityBase {
    constructor(element, _displayDensityOptions, _inputGroupType, document) {
        super(_displayDensityOptions);
        this.element = element;
        this._displayDensityOptions = _displayDensityOptions;
        this._inputGroupType = _inputGroupType;
        this.document = document;
        this._type = null;
        this._filled = false;
        this._variant = 'material';
        /**
         * An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.
         * ```html
         * <igx-input-group [id]="'igx-input-group-55'"></igx-input-group>
         * ```
         */
        this.id = `igx-input-group-${NEXT_ID++}`;
        /**
         * Property that enables/disables the autogenerated class of the `IgxInputGroupComponent`.
         * By default applied the class is applied.
         * ```typescript
         *  @ViewChild("MyInputGroup")
         *  public inputGroup: IgxInputGroupComponent;
         *  ngAfterViewInit(){
         *  this.inputGroup.defaultClass = false;
         * ```
         * }
         */
        this.defaultClass = true;
        /** @hidden */
        this.hasPlaceholder = false;
        /** @hidden */
        this.isRequired = false;
        /** @hidden */
        this.isFocused = false;
        /**
         * An @Input property that disables the `IgxInputGroupComponent`.
         * ```html
         * <igx-input-group [disabled]="'true'"></igx-input-group>
         * ```
         */
        this.disabled = false;
        /**
         * Prevents automatically focusing the input when clicking on other elements in the input group (e.g. prefix or suffix).
         * @remarks Automatic focus causes software keyboard to show on mobile devices.
         *
         * @example
         * ```html
         * <igx-input-group [suppressInputAutofocus]="true"></igx-input-group>
         * ```
         */
        this.suppressInputAutofocus = false;
        /** @hidden */
        this.hasWarning = false;
    }
    /** @hidden */
    get validClass() {
        return this.input.valid === IgxInputState.VALID;
    }
    /** @hidden */
    get invalidClass() {
        return this.input.valid === IgxInputState.INVALID;
    }
    /** @hidden */
    get isFilled() {
        return this._filled || (this.input && this.input.value);
    }
    /** @hidden */
    get isDisplayDensityCosy() {
        return this.displayDensity === DisplayDensity.cosy;
    }
    /** @hidden */
    get isDisplayDensityComfortable() {
        return this.displayDensity === DisplayDensity.comfortable;
    }
    /** @hidden */
    get isDisplayDensityCompact() {
        return this.displayDensity === DisplayDensity.compact;
    }
    /** @hidden */
    onClick(event) {
        if (!this.isFocused &&
            event.target !== this.input.nativeElement &&
            !this.suppressInputAutofocus) {
            this.input.focus();
        }
    }
    /** @hidden */
    onPointerDown(event) {
        if (this.isFocused && event.target !== this.input.nativeElement) {
            event.preventDefault();
        }
    }
    hintClickHandler(event) {
        event.stopPropagation();
    }
    /**
     * An @Input property that sets how the input will be styled.
     * Allowed values of type IgxInputGroupType.
     * ```html
     * <igx-input-group [type]="'search'">
     * ```
     */
    set type(value) {
        this._type = value;
    }
    /**
     * Returns the type of the `IgxInputGroupComponent`. How the input is styled.
     * The default is `line`.
     * ```typescript
     * @ViewChild("MyInputGroup")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let inputType = this.inputGroup.type;
     * }
     * ```
     */
    get type() {
        return this._type || this._inputGroupType || 'line';
    }
    /** @hidden @internal */
    get theme() {
        return this._variant;
    }
    /**
     * @hidden
     * @deprecated Use 'suppressInputAutofocus' instead.
     */
    get supressInputAutofocus() {
        return this.suppressInputAutofocus;
    }
    /**
     * @hidden
     * @deprecated Use 'suppressInputAutofocus' instead.
     */
    set supressInputAutofocus(value) {
        this.suppressInputAutofocus = value;
    }
    ngAfterContentInit() {
        const variant = this.document.defaultView
            .getComputedStyle(this.element.nativeElement)
            .getPropertyValue('--igx-input-group-variant')
            .trim();
        this._variant = variant;
    }
    /**
     * Returns whether the `IgxInputGroupComponent` has hints.
     * ```typescript
     * @ViewChild("MyInputGroup")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let inputHints = this.inputGroup.hasHints;
     * }
     * ```
     */
    get hasHints() {
        return this.hints.length > 0;
    }
    /**
     * Returns whether the `IgxInputGroupComponent` has border.
     * ```typescript
     * @ViewChild("MyInputGroup")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let inputBorder = this.inputGroup.hasBorder;
     * }
     * ```
     */
    get hasBorder() {
        return ((this.type === 'line' || this.type === 'box') &&
            this._variant === 'material');
    }
    /**
     * Returns whether the `IgxInputGroupComponent` type is line.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeLine = this.inputGroup.isTypeLine;
     * }
     * ```
     */
    get isTypeLine() {
        return this.type === 'line' && this._variant === 'material';
    }
    /**
     * Returns whether the `IgxInputGroupComponent` type is box.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeBox = this.inputGroup.isTypeBox;
     * }
     * ```
     */
    get isTypeBox() {
        return this.type === 'box' && this._variant === 'material';
    }
    /**
     * Returns whether the `IgxInputGroupComponent` type is border.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeBorder = this.inputGroup.isTypeBorder;
     * }
     * ```
     */
    get isTypeBorder() {
        return this.type === 'border' && this._variant === 'material';
    }
    /**
     * Returns true if the `IgxInputGroupComponent` theme is Fluent.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeFluent = this.inputGroup.isTypeFluent;
     * }
     * ```
     */
    get isTypeFluent() {
        return this._variant === 'fluent';
    }
    /**
     * Returns true if the `IgxInputGroupComponent` theme is Bootstrap.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeBootstrap = this.inputGroup.isTypeBootstrap;
     * }
     * ```
     */
    get isTypeBootstrap() {
        return this._variant === 'bootstrap';
    }
    /**
     * Returns true if the `IgxInputGroupComponent` theme is Indigo.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeIndigo = this.inputGroup.isTypeIndigo;
     * }
     * ```
     */
    get isTypeIndigo() {
        return this._variant === 'indigo-design';
    }
    /**
     * Returns whether the `IgxInputGroupComponent` type is search.
     * ```typescript
     * @ViewChild("MyInputGroup1")
     * public inputGroup: IgxInputGroupComponent;
     * ngAfterViewInit(){
     *    let isTypeSearch = this.inputGroup.isTypeSearch;
     * }
     * ```
     */
    get isTypeSearch() {
        return this.type === 'search';
    }
    /** @hidden */
    get filled() {
        return this._filled;
    }
    /** @hidden */
    set filled(val) {
        this._filled = val;
    }
}
IgxInputGroupComponent.ɵfac = function IgxInputGroupComponent_Factory(t) { return new (t || IgxInputGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DisplayDensityToken, 8), ɵngcc0.ɵɵdirectiveInject(IGX_INPUT_GROUP_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };
IgxInputGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxInputGroupComponent, selectors: [["igx-input-group"]], contentQueries: function IgxInputGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, IgxInputDirective, true, IgxInputDirective);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IgxHintDirective, false, IgxHintDirective);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hints = _t);
    } }, hostVars: 37, hostBindings: function IgxInputGroupComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function IgxInputGroupComponent_click_HostBindingHandler($event) { return ctx.onClick($event); })("pointerdown", function IgxInputGroupComponent_pointerdown_HostBindingHandler($event) { return ctx.onPointerDown($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵclassProp("igx-input-group", ctx.defaultClass)("igx-input-group--placeholder", ctx.hasPlaceholder)("igx-input-group--required", ctx.isRequired)("igx-input-group--focused", ctx.isFocused)("igx-input-group--disabled", ctx.disabled)("igx-input-group--warning", ctx.hasWarning)("igx-input-group--valid", ctx.validClass)("igx-input-group--invalid", ctx.invalidClass)("igx-input-group--filled", ctx.isFilled)("igx-input-group--cosy", ctx.isDisplayDensityCosy)("igx-input-group--comfortable", ctx.isDisplayDensityComfortable)("igx-input-group--compact", ctx.isDisplayDensityCompact)("igx-input-group--box", ctx.isTypeBox)("igx-input-group--border", ctx.isTypeBorder)("igx-input-group--fluent", ctx.isTypeFluent)("igx-input-group--bootstrap", ctx.isTypeBootstrap)("igx-input-group--indigo", ctx.isTypeIndigo)("igx-input-group--search", ctx.isTypeSearch);
    } }, inputs: { id: "id", disabled: "disabled", suppressInputAutofocus: "suppressInputAutofocus", type: "type", supressInputAutofocus: "supressInputAutofocus" }, features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: IgxInputGroupBase, useExisting: IgxInputGroupComponent }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 20, vars: 3, consts: [["class", "igx-input-group__wrapper", 4, "ngIf", "ngIfElse"], ["class", "igx-input-group__border", 4, "ngIf"], [1, "igx-input-group__hint", 3, "click"], ["label", ""], ["input", ""], ["prefix", ""], ["suffix", ""], ["materialBundle", ""], ["fluentBundle", ""], ["bootstrapBundle", ""], ["bundle", ""], [1, "igx-input-group__wrapper"], [4, "ngTemplateOutlet"], [1, "igx-input-group__border"], [1, "igx-input-group__bundle"], [1, "igx-input-group__bundle-main"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"]], template: function IgxInputGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵtemplate(0, IgxInputGroupComponent_div_0_Template, 2, 1, "div", 0);
        ɵngcc0.ɵɵtemplate(1, IgxInputGroupComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("click", function IgxInputGroupComponent_Template_div_click_2_listener($event) { return ctx.hintClickHandler($event); });
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, IgxInputGroupComponent_ng_template_4_Template, 1, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, IgxInputGroupComponent_ng_template_6_Template, 1, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, IgxInputGroupComponent_ng_template_8_Template, 1, 0, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(10, IgxInputGroupComponent_ng_template_10_Template, 1, 0, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(12, IgxInputGroupComponent_ng_template_12_Template, 6, 4, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(14, IgxInputGroupComponent_ng_template_14_Template, 6, 4, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(16, IgxInputGroupComponent_ng_template_16_Template, 5, 4, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(18, IgxInputGroupComponent_ng_template_18_Template, 5, 4, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r16 = ɵngcc0.ɵɵreference(19);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isTypeBox)("ngIfElse", _r16);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasBorder);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault], encapsulation: 2 });
IgxInputGroupComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DisplayDensityToken,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [IGX_INPUT_GROUP_TYPE,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
IgxInputGroupComponent.propDecorators = {
    id: [{ type: HostBinding, args: ['attr.id',] }, { type: Input }],
    defaultClass: [{ type: HostBinding, args: ['class.igx-input-group',] }],
    hasPlaceholder: [{ type: HostBinding, args: ['class.igx-input-group--placeholder',] }],
    isRequired: [{ type: HostBinding, args: ['class.igx-input-group--required',] }],
    isFocused: [{ type: HostBinding, args: ['class.igx-input-group--focused',] }],
    disabled: [{ type: HostBinding, args: ['class.igx-input-group--disabled',] }, { type: Input }],
    suppressInputAutofocus: [{ type: Input }],
    validClass: [{ type: HostBinding, args: ['class.igx-input-group--valid',] }],
    invalidClass: [{ type: HostBinding, args: ['class.igx-input-group--invalid',] }],
    hasWarning: [{ type: HostBinding, args: ['class.igx-input-group--warning',] }],
    isFilled: [{ type: HostBinding, args: ['class.igx-input-group--filled',] }],
    isDisplayDensityCosy: [{ type: HostBinding, args: ['class.igx-input-group--cosy',] }],
    isDisplayDensityComfortable: [{ type: HostBinding, args: ['class.igx-input-group--comfortable',] }],
    isDisplayDensityCompact: [{ type: HostBinding, args: ['class.igx-input-group--compact',] }],
    hints: [{ type: ContentChildren, args: [IgxHintDirective, { read: IgxHintDirective },] }],
    input: [{ type: ContentChild, args: [IgxInputDirective, { read: IgxInputDirective, static: true },] }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onPointerDown: [{ type: HostListener, args: ['pointerdown', ['$event'],] }],
    type: [{ type: Input, args: ['type',] }],
    supressInputAutofocus: [{ type: Input }],
    isTypeBox: [{ type: HostBinding, args: ['class.igx-input-group--box',] }],
    isTypeBorder: [{ type: HostBinding, args: ['class.igx-input-group--border',] }],
    isTypeFluent: [{ type: HostBinding, args: ['class.igx-input-group--fluent',] }],
    isTypeBootstrap: [{ type: HostBinding, args: ['class.igx-input-group--bootstrap',] }],
    isTypeIndigo: [{ type: HostBinding, args: ['class.igx-input-group--indigo',] }],
    isTypeSearch: [{ type: HostBinding, args: ['class.igx-input-group--search',] }]
};
__decorate([
    DeprecateProperty(`Deprecated. Use 'suppressInputAutofocus' instead.`)
], IgxInputGroupComponent.prototype, "supressInputAutofocus", null);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxInputGroupComponent, [{
        type: Component,
        args: [{
                selector: 'igx-input-group',
                template: "<div class=\"igx-input-group__wrapper\" *ngIf=\"isTypeBox; else bundle\">\n    <ng-container *ngTemplateOutlet=\"bundle\"></ng-container>\n</div>\n\n<div class=\"igx-input-group__border\" *ngIf=\"hasBorder\"></div>\n\n<div class=\"igx-input-group__hint\" (click)=\"hintClickHandler($event)\">\n    <ng-content select=\"igx-hint, [igxHint]\"></ng-content>\n</div>\n\n<ng-template #label>\n    <ng-content select=\"[igxLabel]\"></ng-content>\n</ng-template>\n\n<ng-template #input>\n    <ng-content select=\"[igxInput]\"></ng-content>\n</ng-template>\n\n<ng-template #prefix>\n    <ng-content select=\"igx-prefix, [igxPrefix]\"></ng-content>\n</ng-template>\n\n<ng-template #suffix>\n    <ng-content select=\"igx-suffix, [igxSuffix]\"></ng-content>\n</ng-template>\n\n<ng-template #materialBundle>\n    <div class=\"igx-input-group__bundle\">\n        <ng-container *ngTemplateOutlet=\"prefix\"></ng-container>\n\n        <div class=\"igx-input-group__bundle-main\">\n            <ng-container *ngTemplateOutlet=\"label\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"input\"></ng-container>\n        </div>\n\n        <ng-container *ngTemplateOutlet=\"suffix\"></ng-container>\n    </div>\n</ng-template>\n\n<ng-template #fluentBundle>\n    <ng-container *ngTemplateOutlet=\"label\"></ng-container>\n\n    <div class=\"igx-input-group__bundle\">\n        <ng-container *ngTemplateOutlet=\"prefix\"></ng-container>\n\n        <div class=\"igx-input-group__bundle-main\">\n            <ng-container *ngTemplateOutlet=\"input\"></ng-container>\n        </div>\n\n        <ng-container *ngTemplateOutlet=\"suffix\"></ng-container>\n    </div>\n</ng-template>\n\n<ng-template #bootstrapBundle>\n    <ng-container *ngTemplateOutlet=\"label\"></ng-container>\n\n    <div class=\"igx-input-group__bundle\">\n        <ng-container *ngTemplateOutlet=\"prefix\"></ng-container>\n\n        <ng-container *ngTemplateOutlet=\"input\"></ng-container>\n\n        <ng-container *ngTemplateOutlet=\"suffix\"></ng-container>\n    </div>\n</ng-template>\n\n<ng-template #bundle>\n    <ng-container [ngSwitch]=\"theme\">\n        <ng-container *ngSwitchCase=\"'bootstrap'\">\n            <ng-container *ngTemplateOutlet=\"bootstrapBundle\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"'fluent'\">\n            <ng-container *ngTemplateOutlet=\"fluentBundle\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"'indigo-design'\">\n            <ng-container *ngTemplateOutlet=\"fluentBundle\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"materialBundle\"></ng-container>\n        </ng-container>\n    </ng-container>\n</ng-template>\n",
                providers: [
                    { provide: IgxInputGroupBase, useExisting: IgxInputGroupComponent }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [DisplayDensityToken]
            }] }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [IGX_INPUT_GROUP_TYPE]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }]; }, { id: [{
            type: HostBinding,
            args: ['attr.id']
        }, {
            type: Input
        }], defaultClass: [{
            type: HostBinding,
            args: ['class.igx-input-group']
        }], hasPlaceholder: [{
            type: HostBinding,
            args: ['class.igx-input-group--placeholder']
        }], isRequired: [{
            type: HostBinding,
            args: ['class.igx-input-group--required']
        }], isFocused: [{
            type: HostBinding,
            args: ['class.igx-input-group--focused']
        }], disabled: [{
            type: HostBinding,
            args: ['class.igx-input-group--disabled']
        }, {
            type: Input
        }], suppressInputAutofocus: [{
            type: Input
        }], hasWarning: [{
            type: HostBinding,
            args: ['class.igx-input-group--warning']
        }], validClass: [{
            type: HostBinding,
            args: ['class.igx-input-group--valid']
        }], invalidClass: [{
            type: HostBinding,
            args: ['class.igx-input-group--invalid']
        }], isFilled: [{
            type: HostBinding,
            args: ['class.igx-input-group--filled']
        }], isDisplayDensityCosy: [{
            type: HostBinding,
            args: ['class.igx-input-group--cosy']
        }], isDisplayDensityComfortable: [{
            type: HostBinding,
            args: ['class.igx-input-group--comfortable']
        }], isDisplayDensityCompact: [{
            type: HostBinding,
            args: ['class.igx-input-group--compact']
        }], 
    /** @hidden */
    onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], 
    /** @hidden */
    onPointerDown: [{
            type: HostListener,
            args: ['pointerdown', ['$event']]
        }], type: [{
            type: Input,
            args: ['type']
        }], supressInputAutofocus: [{
            type: Input
        }], isTypeBox: [{
            type: HostBinding,
            args: ['class.igx-input-group--box']
        }], isTypeBorder: [{
            type: HostBinding,
            args: ['class.igx-input-group--border']
        }], isTypeFluent: [{
            type: HostBinding,
            args: ['class.igx-input-group--fluent']
        }], isTypeBootstrap: [{
            type: HostBinding,
            args: ['class.igx-input-group--bootstrap']
        }], isTypeIndigo: [{
            type: HostBinding,
            args: ['class.igx-input-group--indigo']
        }], isTypeSearch: [{
            type: HostBinding,
            args: ['class.igx-input-group--search']
        }], hints: [{
            type: ContentChildren,
            args: [IgxHintDirective, { read: IgxHintDirective }]
        }], input: [{
            type: ContentChild,
            args: [IgxInputDirective, { read: IgxInputDirective, static: true }]
        }] }); })();
/** @hidden */
export class IgxInputGroupModule {
}
IgxInputGroupModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxInputGroupModule });
IgxInputGroupModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxInputGroupModule_Factory(t) { return new (t || IgxInputGroupModule)(); }, imports: [[CommonModule, IgxPrefixModule, IgxSuffixModule], IgxPrefixModule,
        IgxSuffixModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxInputGroupModule, { declarations: function () { return [IgxInputGroupComponent, IgxHintDirective,
        IgxInputDirective,
        IgxLabelDirective]; }, imports: function () { return [CommonModule, IgxPrefixModule, IgxSuffixModule]; }, exports: function () { return [IgxInputGroupComponent, IgxHintDirective,
        IgxInputDirective,
        IgxLabelDirective,
        IgxPrefixModule,
        IgxSuffixModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxInputGroupModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxInputGroupComponent,
                    IgxHintDirective,
                    IgxInputDirective,
                    IgxLabelDirective,
                ],
                exports: [
                    IgxInputGroupComponent,
                    IgxHintDirective,
                    IgxInputDirective,
                    IgxLabelDirective,
                    IgxPrefixModule,
                    IgxSuffixModule,
                ],
                imports: [CommonModule, IgxPrefixModule, IgxSuffixModule]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,