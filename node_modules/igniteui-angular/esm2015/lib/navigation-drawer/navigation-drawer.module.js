import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { IgxNavigationDrawerComponent } from './navigation-drawer.component';
import { IgxNavDrawerItemDirective, IgxNavDrawerMiniTemplateDirective, IgxNavDrawerTemplateDirective } from './navigation-drawer.directives';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export class IgxNavigationDrawerModule {
}
IgxNavigationDrawerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxNavigationDrawerModule });
IgxNavigationDrawerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxNavigationDrawerModule_Factory(t) { return new (t || IgxNavigationDrawerModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxNavigationDrawerModule, { declarations: function () { return [IgxNavigationDrawerComponent,
        IgxNavDrawerItemDirective,
        IgxNavDrawerMiniTemplateDirective,
        IgxNavDrawerTemplateDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [IgxNavigationDrawerComponent,
        IgxNavDrawerItemDirective,
        IgxNavDrawerMiniTemplateDirective,
        IgxNavDrawerTemplateDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxNavigationDrawerModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxNavigationDrawerComponent,
                    IgxNavDrawerItemDirective,
                    IgxNavDrawerMiniTemplateDirective,
                    IgxNavDrawerTemplateDirective
                ],
                exports: [
                    IgxNavigationDrawerComponent,
                    IgxNavDrawerItemDirective,
                    IgxNavDrawerMiniTemplateDirective,
                    IgxNavDrawerTemplateDirective
                ],
                imports: [CommonModule]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1kcmF3ZXIubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvbmF2aWdhdGlvbi1kcmF3ZXIvbmF2aWdhdGlvbi1kcmF3ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzdFLE9BQU8sRUFDSCx5QkFBeUIsRUFDekIsaUNBQWlDLEVBQ2pDLDZCQUE2QixFQUNoQyxNQUFNLGdDQUFnQyxDQUFDO0FBRXhDO0FBQ0E7QUFDQSxHQUFHOztBQWdCSCxNQUFNLE9BQU8seUJBQXlCO0FBQUc7cURBZnhDLFFBQVEsU0FBQyxrQkFDTjtLQUFZLEVBQUUsc0JBQ1YsNEJBQTRCLHNCQUM1Qix5QkFBeUIsc0JBQ3pCLGlDQUFpQyxzQkFDakM7Y0FBNkIsa0JBQ2hDLGtCQUNELE9BQU8sRUFBRSxzQkFDTCw0QkFBNEIsc0JBQzVCLHlCQUF5QixzQkFDekI7d0JBQWlDO1dBQ2pDLDZCQUE2QjtlQUNoQyxrQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsY0FDMUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hOYXZpZ2F0aW9uRHJhd2VyQ29tcG9uZW50IH0gZnJvbSAnLi9uYXZpZ2F0aW9uLWRyYXdlci5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgICBJZ3hOYXZEcmF3ZXJJdGVtRGlyZWN0aXZlLFxuICAgIElneE5hdkRyYXdlck1pbmlUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hOYXZEcmF3ZXJUZW1wbGF0ZURpcmVjdGl2ZVxufSBmcm9tICcuL25hdmlnYXRpb24tZHJhd2VyLmRpcmVjdGl2ZXMnO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgSWd4TmF2aWdhdGlvbkRyYXdlckNvbXBvbmVudCxcbiAgICAgICAgSWd4TmF2RHJhd2VySXRlbURpcmVjdGl2ZSxcbiAgICAgICAgSWd4TmF2RHJhd2VyTWluaVRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hOYXZEcmF3ZXJUZW1wbGF0ZURpcmVjdGl2ZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBJZ3hOYXZpZ2F0aW9uRHJhd2VyQ29tcG9uZW50LFxuICAgICAgICBJZ3hOYXZEcmF3ZXJJdGVtRGlyZWN0aXZlLFxuICAgICAgICBJZ3hOYXZEcmF3ZXJNaW5pVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneE5hdkRyYXdlclRlbXBsYXRlRGlyZWN0aXZlXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hOYXZpZ2F0aW9uRHJhd2VyTW9kdWxlIHt9XG4iXX0=