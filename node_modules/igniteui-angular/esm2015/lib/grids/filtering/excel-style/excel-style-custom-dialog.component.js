import { Component, Input, ChangeDetectorRef, ViewChild, TemplateRef, ViewChildren } from '@angular/core';
import { ExpressionUI } from '../grid-filtering.service';
import { FilteringLogic } from '../../../data-operations/filtering-expression.interface';
import { DataType } from '../../../data-operations/data-util';
import { IgxStringFilteringOperand, IgxBooleanFilteringOperand, IgxNumberFilteringOperand, IgxDateFilteringOperand } from '../../../data-operations/filtering-condition';
import { IgxToggleDirective } from '../../../directives/toggle/toggle.directive';
import { AutoPositionStrategy, VerticalAlignment, HorizontalAlignment, AbsoluteScrollStrategy } from '../../../services/public_api';
import { IgxExcelStyleDefaultExpressionComponent } from './excel-style-default-expression.component';
import { IgxExcelStyleDateExpressionComponent } from './excel-style-date-expression.component';
import { Subject } from 'rxjs';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../directives/toggle/toggle.directive';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../directives/button/button.directive';
import * as ɵngcc4 from '../../../icon/icon.component';
import * as ɵngcc5 from './excel-style-date-expression.component';
import * as ɵngcc6 from './excel-style-default-expression.component';

const _c0 = ["toggle"];
const _c1 = ["defaultExpressionTemplate"];
const _c2 = ["dateExpressionTemplate"];
const _c3 = ["expressionsContainer"];
function IgxExcelStyleCustomDialogComponent_ng_container_7_igx_excel_style_date_expression_1_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-excel-style-date-expression", 12);
    ɵngcc0.ɵɵlistener("onExpressionRemoved", function IgxExcelStyleCustomDialogComponent_ng_container_7_igx_excel_style_date_expression_1_Template_igx_excel_style_date_expression_onExpressionRemoved_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onExpressionRemoved($event); })("onLogicOperatorChanged", function IgxExcelStyleCustomDialogComponent_ng_container_7_igx_excel_style_date_expression_1_Template_igx_excel_style_date_expression_onLogicOperatorChanged_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.onLogicOperatorChanged($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expression_r5 = ctx.$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("expressionUI", expression_r5)("column", ctx_r4.column)("grid", ctx_r4.grid)("displayDensity", ctx_r4.displayDensity)("expressionsList", ctx_r4.expressionsList);
} }
function IgxExcelStyleCustomDialogComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxExcelStyleCustomDialogComponent_ng_container_7_igx_excel_style_date_expression_1_Template, 1, 5, "igx-excel-style-date-expression", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.expressionsList);
} }
function IgxExcelStyleCustomDialogComponent_ng_container_8_igx_excel_style_default_expression_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-excel-style-default-expression", 12);
    ɵngcc0.ɵɵlistener("onExpressionRemoved", function IgxExcelStyleCustomDialogComponent_ng_container_8_igx_excel_style_default_expression_1_Template_igx_excel_style_default_expression_onExpressionRemoved_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onExpressionRemoved($event); })("onLogicOperatorChanged", function IgxExcelStyleCustomDialogComponent_ng_container_8_igx_excel_style_default_expression_1_Template_igx_excel_style_default_expression_onLogicOperatorChanged_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.onLogicOperatorChanged($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expression_r10 = ctx.$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("expressionUI", expression_r10)("column", ctx_r9.column)("grid", ctx_r9.grid)("displayDensity", ctx_r9.displayDensity)("expressionsList", ctx_r9.expressionsList);
} }
function IgxExcelStyleCustomDialogComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxExcelStyleCustomDialogComponent_ng_container_8_igx_excel_style_default_expression_1_Template, 1, 5, "igx-excel-style-default-expression", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.expressionsList);
} }
const _c4 = function (a0, a1) { return { "igx-excel-filter__secondary--cosy": a0, "igx-excel-filter__secondary--compact": a1 }; };
export class IgxExcelStyleCustomDialogComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.destroy$ = new Subject();
        this.expressionsList = new Array();
        this._customDialogPositionSettings = {
            verticalDirection: VerticalAlignment.Middle,
            horizontalDirection: HorizontalAlignment.Center,
            horizontalStartPoint: HorizontalAlignment.Center,
            verticalStartPoint: VerticalAlignment.Middle
        };
        this._customDialogOverlaySettings = {
            closeOnOutsideClick: true,
            modal: false,
            positionStrategy: new AutoPositionStrategy(this._customDialogPositionSettings),
            scrollStrategy: new AbsoluteScrollStrategy()
        };
    }
    ngAfterViewInit() {
        this._customDialogOverlaySettings.outlet = this.grid.outlet;
    }
    get template() {
        if (this.column.dataType === DataType.Date) {
            return this.dateExpressionTemplate;
        }
        return this.defaultExpressionTemplate;
    }
    get grid() {
        return this.filteringService.grid;
    }
    onCustomDialogOpening() {
        if (this.selectedOperator) {
            this.createInitialExpressionUIElement();
        }
    }
    onCustomDialogOpened() {
        if (this.expressionComponents.first) {
            this.expressionComponents.first.focus();
        }
    }
    open(esf) {
        this._customDialogOverlaySettings.target =
            this.overlayComponentId ?
                this.grid.rootGrid ? this.grid.rootGrid.nativeElement : this.grid.nativeElement :
                esf;
        this.toggle.open(this._customDialogOverlaySettings);
    }
    onClearButtonClick() {
        this.filteringService.clearFilter(this.column.field);
        this.createInitialExpressionUIElement();
        this.cdr.detectChanges();
    }
    closeDialog() {
        if (this.overlayComponentId) {
            this.overlayService.hide(this.overlayComponentId);
        }
        else {
            this.toggle.close();
        }
    }
    onApplyButtonClick() {
        this.expressionsList = this.expressionsList.filter(element => element.expression.condition &&
            (element.expression.searchVal || element.expression.searchVal === 0 || element.expression.condition.isUnary));
        if (this.expressionsList.length > 0) {
            this.expressionsList[0].beforeOperator = null;
            this.expressionsList[this.expressionsList.length - 1].afterOperator = null;
        }
        this.filteringService.filterInternal(this.column.field, this.expressionsList);
        this.closeDialog();
    }
    onAddButtonClick() {
        const exprUI = new ExpressionUI();
        exprUI.expression = {
            condition: null,
            fieldName: this.column.field,
            ignoreCase: this.column.filteringIgnoreCase,
            searchVal: null
        };
        this.expressionsList[this.expressionsList.length - 1].afterOperator = FilteringLogic.And;
        exprUI.beforeOperator = this.expressionsList[this.expressionsList.length - 1].afterOperator;
        this.expressionsList.push(exprUI);
        this.markChildrenForCheck();
        this.scrollToBottom();
    }
    onExpressionRemoved(event) {
        const indexToRemove = this.expressionsList.indexOf(event);
        if (indexToRemove === 0 && this.expressionsList.length > 1) {
            this.expressionsList[1].beforeOperator = null;
        }
        else if (indexToRemove === this.expressionsList.length - 1) {
            this.expressionsList[indexToRemove - 1].afterOperator = null;
        }
        else {
            this.expressionsList[indexToRemove - 1].afterOperator = this.expressionsList[indexToRemove + 1].beforeOperator;
            this.expressionsList[0].beforeOperator = null;
            this.expressionsList[this.expressionsList.length - 1].afterOperator = null;
        }
        this.expressionsList.splice(indexToRemove, 1);
        this.cdr.detectChanges();
        this.markChildrenForCheck();
    }
    onLogicOperatorChanged(event) {
        const index = this.expressionsList.indexOf(event.target);
        event.target.afterOperator = event.newValue;
        if (index + 1 < this.expressionsList.length) {
            this.expressionsList[index + 1].beforeOperator = event.newValue;
        }
    }
    onKeyDown(eventArgs) {
        eventArgs.stopPropagation();
    }
    onApplyButtonKeyDown(eventArgs) {
        if (eventArgs.key === "Tab" /* TAB */ && !eventArgs.shiftKey) {
            eventArgs.stopPropagation();
            eventArgs.preventDefault();
        }
    }
    createCondition(conditionName) {
        switch (this.column.dataType) {
            case DataType.Boolean:
                return IgxBooleanFilteringOperand.instance().condition(conditionName);
            case DataType.Number:
                return IgxNumberFilteringOperand.instance().condition(conditionName);
            case DataType.Date:
                return IgxDateFilteringOperand.instance().condition(conditionName);
            default:
                return IgxStringFilteringOperand.instance().condition(conditionName);
        }
    }
    markChildrenForCheck() {
        this.expressionComponents.forEach(x => x.cdr.markForCheck());
        this.expressionDateComponents.forEach(x => x.cdr.markForCheck());
    }
    createInitialExpressionUIElement() {
        this.expressionsList = [];
        const firstExprUI = new ExpressionUI();
        firstExprUI.expression = {
            condition: this.createCondition(this.selectedOperator),
            fieldName: this.column.field,
            ignoreCase: this.column.filteringIgnoreCase,
            searchVal: null
        };
        firstExprUI.afterOperator = FilteringLogic.And;
        this.expressionsList.push(firstExprUI);
        const secondExprUI = new ExpressionUI();
        secondExprUI.expression = {
            condition: null,
            fieldName: this.column.field,
            ignoreCase: this.column.filteringIgnoreCase,
            searchVal: null
        };
        secondExprUI.beforeOperator = FilteringLogic.And;
        this.expressionsList.push(secondExprUI);
    }
    scrollToBottom() {
        requestAnimationFrame(() => {
            this.expressionsContainer.nativeElement.scrollTop = this.expressionsContainer.nativeElement.scrollHeight;
        });
    }
}
IgxExcelStyleCustomDialogComponent.ɵfac = function IgxExcelStyleCustomDialogComponent_Factory(t) { return new (t || IgxExcelStyleCustomDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
IgxExcelStyleCustomDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxExcelStyleCustomDialogComponent, selectors: [["igx-excel-style-custom-dialog"]], viewQuery: function IgxExcelStyleCustomDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true, IgxToggleDirective);
        ɵngcc0.ɵɵviewQuery(_c1, true, TemplateRef);
        ɵngcc0.ɵɵviewQuery(_c2, true, TemplateRef);
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
        ɵngcc0.ɵɵviewQuery(IgxExcelStyleDefaultExpressionComponent, true);
        ɵngcc0.ɵɵviewQuery(IgxExcelStyleDateExpressionComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toggle = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.defaultExpressionTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dateExpressionTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expressionsContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expressionComponents = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expressionDateComponents = _t);
    } }, inputs: { expressionsList: "expressionsList", column: "column", selectedOperator: "selectedOperator", filteringService: "filteringService", overlayComponentId: "overlayComponentId", overlayService: "overlayService", displayDensity: "displayDensity" }, decls: 22, vars: 16, consts: [["igxToggle", "", 1, "igx-excel-filter__secondary", 3, "ngClass", "keydown", "onOpening", "onOpened"], ["toggle", ""], [1, "igx-excel-filter__secondary-header"], [1, "igx-typography__h6"], [1, "igx-excel-filter__secondary-main"], ["expressionsContainer", ""], [4, "ngIf"], ["igxButton", "", 1, "igx-excel-filter__add-filter", 3, "displayDensity", "click"], [1, "igx-excel-filter__secondary-footer"], ["igxButton", "", 3, "displayDensity", "click"], ["igxButton", "raised", 3, "displayDensity", "click", "keydown"], ["class", "igx-excel-filter__condition", 3, "expressionUI", "column", "grid", "displayDensity", "expressionsList", "onExpressionRemoved", "onLogicOperatorChanged", 4, "ngFor", "ngForOf"], [1, "igx-excel-filter__condition", 3, "expressionUI", "column", "grid", "displayDensity", "expressionsList", "onExpressionRemoved", "onLogicOperatorChanged"]], template: function IgxExcelStyleCustomDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "article", 0, 1);
        ɵngcc0.ɵɵlistener("keydown", function IgxExcelStyleCustomDialogComponent_Template_article_keydown_0_listener($event) { return ctx.onKeyDown($event); })("onOpening", function IgxExcelStyleCustomDialogComponent_Template_article_onOpening_0_listener() { return ctx.onCustomDialogOpening(); })("onOpened", function IgxExcelStyleCustomDialogComponent_Template_article_onOpened_0_listener() { return ctx.onCustomDialogOpened(); });
        ɵngcc0.ɵɵelementStart(2, "header", 2);
        ɵngcc0.ɵɵelementStart(3, "h4", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "article", 4, 5);
        ɵngcc0.ɵɵtemplate(7, IgxExcelStyleCustomDialogComponent_ng_container_7_Template, 2, 1, "ng-container", 6);
        ɵngcc0.ɵɵtemplate(8, IgxExcelStyleCustomDialogComponent_ng_container_8_Template, 2, 1, "ng-container", 6);
        ɵngcc0.ɵɵelementStart(9, "button", 7);
        ɵngcc0.ɵɵlistener("click", function IgxExcelStyleCustomDialogComponent_Template_button_click_9_listener() { return ctx.onAddButtonClick(); });
        ɵngcc0.ɵɵelementStart(10, "igx-icon");
        ɵngcc0.ɵɵtext(11, "add");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "span");
        ɵngcc0.ɵɵtext(13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "footer", 8);
        ɵngcc0.ɵɵelementStart(15, "button", 9);
        ɵngcc0.ɵɵlistener("click", function IgxExcelStyleCustomDialogComponent_Template_button_click_15_listener() { return ctx.onClearButtonClick(); });
        ɵngcc0.ɵɵtext(16);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "div");
        ɵngcc0.ɵɵelementStart(18, "button", 9);
        ɵngcc0.ɵɵlistener("click", function IgxExcelStyleCustomDialogComponent_Template_button_click_18_listener() { return ctx.closeDialog(); });
        ɵngcc0.ɵɵtext(19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(20, "button", 10);
        ɵngcc0.ɵɵlistener("click", function IgxExcelStyleCustomDialogComponent_Template_button_click_20_listener() { return ctx.onApplyButtonClick(); })("keydown", function IgxExcelStyleCustomDialogComponent_Template_button_keydown_20_listener($event) { return ctx.onApplyButtonKeyDown($event); });
        ɵngcc0.ɵɵtext(21);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(13, _c4, ctx.grid.displayDensity === "cosy", ctx.grid.displayDensity === "compact"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate2(" ", ctx.grid.resourceStrings.igx_grid_excel_custom_dialog_header, "", ctx.column.header || ctx.column.field, " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.column.dataType === "date");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.column.dataType !== "date");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("displayDensity", ctx.displayDensity);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ctx.grid.resourceStrings.igx_grid_excel_custom_dialog_add);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("displayDensity", ctx.displayDensity);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.grid.resourceStrings.igx_grid_excel_custom_dialog_clear);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("displayDensity", ctx.displayDensity);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.grid.resourceStrings.igx_grid_excel_cancel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("displayDensity", ctx.displayDensity);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.grid.resourceStrings.igx_grid_excel_apply, " ");
    } }, directives: [ɵngcc1.IgxToggleDirective, ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc3.IgxButtonDirective, ɵngcc4.IgxIconComponent, ɵngcc2.NgForOf, ɵngcc5.IgxExcelStyleDateExpressionComponent, ɵngcc6.IgxExcelStyleDefaultExpressionComponent], encapsulation: 2 });
IgxExcelStyleCustomDialogComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
IgxExcelStyleCustomDialogComponent.propDecorators = {
    expressionsList: [{ type: Input }],
    column: [{ type: Input }],
    selectedOperator: [{ type: Input }],
    filteringService: [{ type: Input }],
    overlayComponentId: [{ type: Input }],
    overlayService: [{ type: Input }],
    displayDensity: [{ type: Input }],
    expressionComponents: [{ type: ViewChildren, args: [IgxExcelStyleDefaultExpressionComponent,] }],
    expressionDateComponents: [{ type: ViewChildren, args: [IgxExcelStyleDateExpressionComponent,] }],
    toggle: [{ type: ViewChild, args: ['toggle', { read: IgxToggleDirective, static: true },] }],
    defaultExpressionTemplate: [{ type: ViewChild, args: ['defaultExpressionTemplate', { read: TemplateRef },] }],
    dateExpressionTemplate: [{ type: ViewChild, args: ['dateExpressionTemplate', { read: TemplateRef },] }],
    expressionsContainer: [{ type: ViewChild, args: ['expressionsContainer', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxExcelStyleCustomDialogComponent, [{
        type: Component,
        args: [{
                preserveWhitespaces: false,
                selector: 'igx-excel-style-custom-dialog',
                template: "<article #toggle igxToggle\n    class=\"igx-excel-filter__secondary\"\n    [ngClass]=\"{\n        'igx-excel-filter__secondary--cosy': grid.displayDensity === 'cosy',\n        'igx-excel-filter__secondary--compact': grid.displayDensity === 'compact'\n    }\"\n    (keydown)=\"onKeyDown($event)\"\n    (onOpening)=\"onCustomDialogOpening()\"\n    (onOpened)=\"onCustomDialogOpened()\">\n    <header class=\"igx-excel-filter__secondary-header\">\n        <h4 class=\"igx-typography__h6\">\n            {{ grid.resourceStrings.igx_grid_excel_custom_dialog_header }}{{ column.header || column.field }}\n        </h4>\n    </header>\n\n    <article #expressionsContainer class=\"igx-excel-filter__secondary-main\">\n        <ng-container *ngIf=\"column.dataType === 'date'\">\n            <igx-excel-style-date-expression *ngFor=\"let expression of expressionsList;\"\n                class=\"igx-excel-filter__condition\"\n                [expressionUI]=\"expression\"\n                [column]=\"column\"\n                [grid]=\"grid\"\n                [displayDensity]=\"displayDensity\"\n                [expressionsList]=\"expressionsList\"\n                (onExpressionRemoved)=\"onExpressionRemoved($event)\"\n                (onLogicOperatorChanged)=\"onLogicOperatorChanged($event)\">\n            </igx-excel-style-date-expression>\n        </ng-container>\n\n        <ng-container *ngIf=\"column.dataType !== 'date'\">\n            <igx-excel-style-default-expression *ngFor=\"let expression of expressionsList;\"\n                class=\"igx-excel-filter__condition\"\n                [expressionUI]=\"expression\"\n                [column]=\"column\"\n                [grid]=\"grid\"\n                [displayDensity]=\"displayDensity\"\n                [expressionsList]=\"expressionsList\"\n                (onExpressionRemoved)=\"onExpressionRemoved($event)\"\n                (onLogicOperatorChanged)=\"onLogicOperatorChanged($event)\">\n            </igx-excel-style-default-expression>\n        </ng-container>\n\n        <button igxButton [displayDensity]=\"displayDensity\"\n            class=\"igx-excel-filter__add-filter\"\n            (click)=\"onAddButtonClick()\">\n            <igx-icon>add</igx-icon>\n            <span>{{ grid.resourceStrings.igx_grid_excel_custom_dialog_add }}</span>\n        </button>\n    </article>\n\n    <footer class=\"igx-excel-filter__secondary-footer\">\n        <button igxButton [displayDensity]=\"displayDensity\" (click)=\"onClearButtonClick()\">{{ grid.resourceStrings.igx_grid_excel_custom_dialog_clear }}</button>\n\n        <div>\n            <button igxButton [displayDensity]=\"displayDensity\" (click)=\"closeDialog()\">{{ grid.resourceStrings.igx_grid_excel_cancel }}</button>\n            <button igxButton=\"raised\" [displayDensity]=\"displayDensity\" (click)=\"onApplyButtonClick()\" (keydown)=\"onApplyButtonKeyDown($event)\">\n                {{ grid.resourceStrings.igx_grid_excel_apply }}\n            </button>\n        </div>\n    </footer>\n</article>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { expressionsList: [{
            type: Input
        }], column: [{
            type: Input
        }], selectedOperator: [{
            type: Input
        }], filteringService: [{
            type: Input
        }], overlayComponentId: [{
            type: Input
        }], overlayService: [{
            type: Input
        }], displayDensity: [{
            type: Input
        }], expressionComponents: [{
            type: ViewChildren,
            args: [IgxExcelStyleDefaultExpressionComponent]
        }], expressionDateComponents: [{
            type: ViewChildren,
            args: [IgxExcelStyleDateExpressionComponent]
        }], toggle: [{
            type: ViewChild,
            args: ['toggle', { read: IgxToggleDirective, static: true }]
        }], defaultExpressionTemplate: [{
            type: ViewChild,
            args: ['defaultExpressionTemplate', { read: TemplateRef }]
        }], dateExpressionTemplate: [{
            type: ViewChild,
            args: ['dateExpressionTemplate', { read: TemplateRef }]
        }], expressionsContainer: [{
            type: ViewChild,
            args: ['expressionsContainer', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,