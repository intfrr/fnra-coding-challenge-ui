import { Component, HostBinding } from '@angular/core';
import { IgxColumnGroupComponent } from '../../columns/column-group.component';
import { IgxGridExcelStyleFilteringComponent } from './grid.excel-style-filtering.component';
/**
 * A component used for presenting Excel style column moving UI.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './grid.excel-style-filtering.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../directives/button/button.directive';
import * as ɵngcc4 from '../../../icon/icon.component';

function IgxExcelStyleMovingComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "header");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "section", 1);
    ɵngcc0.ɵɵelementStart(4, "button", 2);
    ɵngcc0.ɵɵlistener("click", function IgxExcelStyleMovingComponent_ng_container_0_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onMoveButtonClicked(0); });
    ɵngcc0.ɵɵelementStart(5, "igx-icon");
    ɵngcc0.ɵɵtext(6, "arrow_back");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "span");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "button", 2);
    ɵngcc0.ɵɵlistener("click", function IgxExcelStyleMovingComponent_ng_container_0_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onMoveButtonClicked(1); });
    ɵngcc0.ɵɵelementStart(10, "span");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "igx-icon");
    ɵngcc0.ɵɵtext(13, "arrow_forwards");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.esf.grid.resourceStrings.igx_grid_excel_filter_moving_header, "\n");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r0.esf.grid.displayDensity)("disabled", ctx_r0.canNotMoveLeft);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.esf.grid.displayDensity === "compact" ? ctx_r0.esf.grid.resourceStrings.igx_grid_excel_filter_moving_left_short : ctx_r0.esf.grid.resourceStrings.igx_grid_excel_filter_moving_left, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r0.esf.grid.displayDensity)("disabled", ctx_r0.canNotMoveRight);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.esf.grid.displayDensity === "compact" ? ctx_r0.esf.grid.resourceStrings.igx_grid_excel_filter_moving_right_short : ctx_r0.esf.grid.resourceStrings.igx_grid_excel_filter_moving_right, " ");
} }
export class IgxExcelStyleMovingComponent {
    constructor(esf) {
        this.esf = esf;
        /**
         * @hidden @internal
         */
        this.class = 'igx-excel-filter__move';
    }
    get visibleColumns() {
        return this.esf.grid.visibleColumns.filter(col => !(col instanceof IgxColumnGroupComponent));
    }
    /**
     * @hidden @internal
     */
    get canNotMoveLeft() {
        return this.esf.column.visibleIndex === 0 ||
            (this.esf.grid.unpinnedColumns.indexOf(this.esf.column) === 0 && this.esf.column.disablePinning) ||
            (this.esf.column.level !== 0 && !this.findColumn(0, this.visibleColumns));
    }
    /**
     * @hidden @internal
     */
    get canNotMoveRight() {
        return this.esf.column.visibleIndex === this.visibleColumns.length - 1 ||
            (this.esf.column.level !== 0 && !this.findColumn(1, this.visibleColumns));
    }
    /**
     * @hidden @internal
     */
    onMoveButtonClicked(moveDirection) {
        let targetColumn;
        if (this.esf.column.pinned) {
            if (this.esf.column.isLastPinned && moveDirection === 1 && this.esf.grid.isPinningToStart) {
                targetColumn = this.esf.grid.unpinnedColumns[0];
                moveDirection = 0;
            }
            else if (this.esf.column.isFirstPinned && moveDirection === 0 && !this.esf.grid.isPinningToStart) {
                targetColumn = this.esf.grid.unpinnedColumns[this.esf.grid.unpinnedColumns.length - 1];
                moveDirection = 1;
            }
            else {
                targetColumn = this.findColumn(moveDirection, this.esf.grid.pinnedColumns);
            }
        }
        else if (this.esf.grid.unpinnedColumns.indexOf(this.esf.column) === 0 && moveDirection === 0 &&
            this.esf.grid.isPinningToStart) {
            targetColumn = this.esf.grid.pinnedColumns[this.esf.grid.pinnedColumns.length - 1];
            if (targetColumn.parent) {
                targetColumn = targetColumn.topLevelParent;
            }
            moveDirection = 1;
        }
        else if (this.esf.grid.unpinnedColumns.indexOf(this.esf.column) === this.esf.grid.unpinnedColumns.length - 1 &&
            moveDirection === 1 && !this.esf.grid.isPinningToStart) {
            targetColumn = this.esf.grid.pinnedColumns[0];
            moveDirection = 0;
        }
        else {
            targetColumn = this.findColumn(moveDirection, this.esf.grid.unpinnedColumns);
        }
        this.esf.grid.moveColumn(this.esf.column, targetColumn, moveDirection);
    }
    findColumn(moveDirection, columns) {
        let index = columns.indexOf(this.esf.column);
        if (moveDirection === 0) {
            while (index > 0) {
                index--;
                if (columns[index].level === this.esf.column.level && columns[index].parent === this.esf.column.parent) {
                    return columns[index];
                }
            }
        }
        else {
            while (index < columns.length - 1) {
                index++;
                if (columns[index].level === this.esf.column.level && columns[index].parent === this.esf.column.parent) {
                    return columns[index];
                }
            }
        }
    }
}
IgxExcelStyleMovingComponent.ɵfac = function IgxExcelStyleMovingComponent_Factory(t) { return new (t || IgxExcelStyleMovingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IgxGridExcelStyleFilteringComponent)); };
IgxExcelStyleMovingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxExcelStyleMovingComponent, selectors: [["igx-excel-style-moving"]], hostVars: 2, hostBindings: function IgxExcelStyleMovingComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.class);
    } }, decls: 1, vars: 1, consts: [[4, "ngIf"], [1, "igx-excel-filter__move-buttons"], ["igxButton", "", 3, "displayDensity", "disabled", "click"]], template: function IgxExcelStyleMovingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxExcelStyleMovingComponent_ng_container_0_Template, 14, 7, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.esf.column);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.IgxButtonDirective, ɵngcc4.IgxIconComponent], encapsulation: 2 });
IgxExcelStyleMovingComponent.ctorParameters = () => [
    { type: IgxGridExcelStyleFilteringComponent }
];
IgxExcelStyleMovingComponent.propDecorators = {
    class: [{ type: HostBinding, args: ['class',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxExcelStyleMovingComponent, [{
        type: Component,
        args: [{
                preserveWhitespaces: false,
                selector: 'igx-excel-style-moving',
                template: "<ng-container *ngIf=\"esf.column\">\n<header>\n    {{ esf.grid.resourceStrings.igx_grid_excel_filter_moving_header }}\n</header>\n<section class=\"igx-excel-filter__move-buttons\">\n    <button [displayDensity]=\"esf.grid.displayDensity\"\n        igxButton\n        [disabled]=\"canNotMoveLeft\"\n        (click)=\"onMoveButtonClicked(0)\">\n        <igx-icon>arrow_back</igx-icon>\n        <span>\n            {{ esf.grid.displayDensity==='compact'?\n            esf.grid.resourceStrings.igx_grid_excel_filter_moving_left_short:\n            esf.grid.resourceStrings.igx_grid_excel_filter_moving_left }}\n        </span>\n    </button>\n    <button [displayDensity]=\"esf.grid.displayDensity\"\n        igxButton\n        [disabled]=\"canNotMoveRight\"\n        (click)=\"onMoveButtonClicked(1)\">\n        <span>\n            {{ esf.grid.displayDensity==='compact'?\n            esf.grid.resourceStrings.igx_grid_excel_filter_moving_right_short:\n            esf.grid.resourceStrings.igx_grid_excel_filter_moving_right }}\n        </span>\n        <igx-icon>arrow_forwards</igx-icon>\n    </button>\n</section>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc1.IgxGridExcelStyleFilteringComponent }]; }, { class: [{
            type: HostBinding,
            args: ['class']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,