import { Component, Input, Output, EventEmitter, ChangeDetectorRef, ViewChild } from '@angular/core';
import { IgxButtonGroupComponent } from '../../../buttonGroup/buttonGroup.component';
import { DataType, DataUtil } from '../../../data-operations/data-util';
import { ConnectedPositioningStrategy, AbsoluteScrollStrategy } from '../../../services/public_api';
import { IgxSelectComponent } from '../../../select/select.component';
import { IgxOverlayOutletDirective } from '../../../directives/toggle/toggle.directive';
import { IgxInputDirective } from '../../../input-group/public_api';
import { Subject } from 'rxjs';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../select/select.component';
import * as ɵngcc2 from '../../../directives/prefix/prefix.directive';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../../../input-group/input-group.component';
import * as ɵngcc5 from '../../../directives/input/input.directive';
import * as ɵngcc6 from '../../../directives/toggle/toggle.directive';
import * as ɵngcc7 from '../../../icon/icon.component';
import * as ɵngcc8 from '../../../select/select-item.component';
import * as ɵngcc9 from '../../../directives/button/button.directive';
import * as ɵngcc10 from '../../../buttonGroup/buttonGroup.component';

const _c0 = ["overlayOutlet"];
const _c1 = ["dropdownConditions"];
const _c2 = ["logicOperatorButtonGroup"];
const _c3 = ["inputValues"];
function IgxExcelStyleDefaultExpressionComponent_igx_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-icon", 13);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("name", ctx_r1.getIconName());
} }
function IgxExcelStyleDefaultExpressionComponent_igx_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-icon");
    ɵngcc0.ɵɵtext(1, "filter_list");
    ɵngcc0.ɵɵelementEnd();
} }
function IgxExcelStyleDefaultExpressionComponent_igx_select_item_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-select-item", 14);
    ɵngcc0.ɵɵelementStart(1, "div", 15);
    ɵngcc0.ɵɵelement(2, "igx-icon", 13);
    ɵngcc0.ɵɵelementStart(3, "span", 16);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const condition_r9 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("value", condition_r9)("selected", ctx_r3.isConditionSelected(condition_r9));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("name", ctx_r3.getCondition(condition_r9).iconName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.translateCondition(condition_r9));
} }
function IgxExcelStyleDefaultExpressionComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function IgxExcelStyleDefaultExpressionComponent_button_10_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onRemoveButtonClick(); });
    ɵngcc0.ɵɵelementStart(1, "igx-icon");
    ɵngcc0.ɵɵtext(2, "cancel");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r6.displayDensity);
} }
function IgxExcelStyleDefaultExpressionComponent_igx_buttongroup_11_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-buttongroup", 18, 19);
    ɵngcc0.ɵɵelementStart(2, "span", 20, 21);
    ɵngcc0.ɵɵlistener("keydown", function IgxExcelStyleDefaultExpressionComponent_igx_buttongroup_11_Template_span_keydown_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.onLogicOperatorKeyDown($event, 0); })("click", function IgxExcelStyleDefaultExpressionComponent_igx_buttongroup_11_Template_span_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.onLogicOperatorButtonClicked($event, 0); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span", 20, 22);
    ɵngcc0.ɵɵlistener("keydown", function IgxExcelStyleDefaultExpressionComponent_igx_buttongroup_11_Template_span_keydown_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onLogicOperatorKeyDown($event, 1); })("click", function IgxExcelStyleDefaultExpressionComponent_igx_buttongroup_11_Template_span_click_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.onLogicOperatorButtonClicked($event, 1); });
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("multiSelection", false);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r7.displayDensity)("selected", ctx_r7.expressionUI.afterOperator === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r7.grid.resourceStrings.igx_grid_filter_operator_and, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r7.displayDensity)("selected", ctx_r7.expressionUI.afterOperator === 1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r7.grid.resourceStrings.igx_grid_filter_operator_or, " ");
} }
export class IgxExcelStyleDefaultExpressionComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.destroy$ = new Subject();
        this.dropDownOverlaySettings = {
            scrollStrategy: new AbsoluteScrollStrategy(),
            modal: false,
            closeOnOutsideClick: true
        };
        this.onExpressionRemoved = new EventEmitter();
        this.onLogicOperatorChanged = new EventEmitter();
    }
    get isLast() {
        return this.expressionsList[this.expressionsList.length - 1] === this.expressionUI;
    }
    get isSingle() {
        return this.expressionsList.length === 1;
    }
    get conditionsPlaceholder() {
        return this.grid.resourceStrings['igx_grid_filter_condition_placeholder'];
    }
    get inputValuePlaceholder() {
        return this.grid.resourceStrings['igx_grid_filter_row_placeholder'];
    }
    get type() {
        switch (this.column.dataType) {
            case DataType.Number:
                return 'number';
            default:
                return 'text';
        }
    }
    get conditions() {
        return this.column.filters.conditionList();
    }
    get inputValuesElement() {
        return this.inputValuesDirective;
    }
    ngAfterViewInit() {
        this.dropDownOverlaySettings.outlet = this.overlayOutlet;
        this.dropDownOverlaySettings.target = this.dropdownConditions.inputGroup.element.nativeElement;
        this.dropDownOverlaySettings.excludeFromOutsideClick = [this.dropdownConditions.inputGroup.element.nativeElement];
        this.dropDownOverlaySettings.positionStrategy = new ConnectedPositioningStrategy();
    }
    focus() {
        // use requestAnimationFrame to focus the values input because when initializing the component
        // datepicker's input group is not yet fully initialized
        requestAnimationFrame(() => this.inputValuesElement.focus());
    }
    translateCondition(value) {
        return this.grid.resourceStrings[`igx_grid_filter_${this.getCondition(value).name}`] || value;
    }
    getIconName() {
        if (this.column.dataType === DataType.Boolean && this.expressionUI.expression.condition === null) {
            return this.getCondition(this.conditions[0]).iconName;
        }
        else if (!this.expressionUI.expression.condition) {
            return 'filter_list';
        }
        else {
            return this.expressionUI.expression.condition.iconName;
        }
    }
    isConditionSelected(conditionName) {
        return this.expressionUI.expression.condition && this.expressionUI.expression.condition.name === conditionName;
    }
    onConditionsChanged(eventArgs) {
        const value = eventArgs.newSelection.value;
        this.expressionUI.expression.condition = this.getCondition(value);
        this.focus();
    }
    getCondition(value) {
        return this.column.filters.condition(value);
    }
    onValuesInput(eventArgs) {
        this.expressionUI.expression.searchVal = DataUtil.parseValue(this.column.dataType, eventArgs.target.value);
    }
    onLogicOperatorButtonClicked(eventArgs, buttonIndex) {
        if (this.logicOperatorButtonGroup.selectedButtons.length === 0) {
            eventArgs.stopPropagation();
            this.logicOperatorButtonGroup.selectButton(buttonIndex);
        }
        else {
            this.onLogicOperatorChanged.emit({
                target: this.expressionUI,
                newValue: buttonIndex
            });
        }
    }
    onLogicOperatorKeyDown(eventArgs, buttonIndex) {
        if (eventArgs.key === "Enter" /* ENTER */) {
            this.logicOperatorButtonGroup.selectButton(buttonIndex);
            this.onLogicOperatorChanged.emit({
                target: this.expressionUI,
                newValue: buttonIndex
            });
        }
    }
    onRemoveButtonClick() {
        this.onExpressionRemoved.emit(this.expressionUI);
    }
    onOutletPointerDown(event) {
        event.preventDefault();
    }
}
IgxExcelStyleDefaultExpressionComponent.ɵfac = function IgxExcelStyleDefaultExpressionComponent_Factory(t) { return new (t || IgxExcelStyleDefaultExpressionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
IgxExcelStyleDefaultExpressionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxExcelStyleDefaultExpressionComponent, selectors: [["igx-excel-style-default-expression"]], viewQuery: function IgxExcelStyleDefaultExpressionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true, IgxOverlayOutletDirective);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true, IgxSelectComponent);
        ɵngcc0.ɵɵviewQuery(_c2, true, IgxButtonGroupComponent);
        ɵngcc0.ɵɵstaticViewQuery(_c3, true, IgxInputDirective);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayOutlet = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownConditions = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.logicOperatorButtonGroup = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputValuesDirective = _t.first);
    } }, inputs: { column: "column", expressionUI: "expressionUI", expressionsList: "expressionsList", grid: "grid", displayDensity: "displayDensity" }, outputs: { onExpressionRemoved: "onExpressionRemoved", onLogicOperatorChanged: "onLogicOperatorChanged" }, decls: 14, vars: 13, consts: [["type", "box", 3, "displayDensity", "placeholder", "overlaySettings", "onSelection"], ["dropdownConditions", ""], ["fontSet", "imx-icons", 3, "name", 4, "ngIf"], [4, "ngIf"], [3, "value", "selected", 4, "ngFor", "ngForOf"], ["type", "box", 3, "displayDensity"], ["inputGroupValues", ""], ["igxInput", "", "tabindex", "0", "autocomplete", "off", 3, "type", "placeholder", "disabled", "value", "input"], ["inputValues", ""], ["igxButton", "icon", 3, "displayDensity", "click", 4, "ngIf"], [3, "multiSelection", 4, "ngIf"], ["igxOverlayOutlet", "", 3, "pointerdown"], ["overlayOutlet", ""], ["fontSet", "imx-icons", 3, "name"], [3, "value", "selected"], [1, "igx-grid__filtering-dropdown-items"], [1, "igx-grid__filtering-dropdown-text"], ["igxButton", "icon", 3, "displayDensity", "click"], [3, "multiSelection"], ["logicOperatorButtonGroup", ""], ["igxButton", "", "tabindex", "0", "type", "button", 3, "displayDensity", "selected", "keydown", "click"], ["andButton", ""], ["orButton", ""]], template: function IgxExcelStyleDefaultExpressionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "igx-select", 0, 1);
        ɵngcc0.ɵɵlistener("onSelection", function IgxExcelStyleDefaultExpressionComponent_Template_igx_select_onSelection_0_listener($event) { return ctx.onConditionsChanged($event); });
        ɵngcc0.ɵɵelementStart(2, "igx-prefix");
        ɵngcc0.ɵɵtemplate(3, IgxExcelStyleDefaultExpressionComponent_igx_icon_3_Template, 1, 1, "igx-icon", 2);
        ɵngcc0.ɵɵtemplate(4, IgxExcelStyleDefaultExpressionComponent_igx_icon_4_Template, 2, 0, "igx-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, IgxExcelStyleDefaultExpressionComponent_igx_select_item_5_Template, 5, 4, "igx-select-item", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "igx-input-group", 5, 6);
        ɵngcc0.ɵɵelementStart(8, "input", 7, 8);
        ɵngcc0.ɵɵlistener("input", function IgxExcelStyleDefaultExpressionComponent_Template_input_input_8_listener($event) { return ctx.onValuesInput($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, IgxExcelStyleDefaultExpressionComponent_button_10_Template, 3, 1, "button", 9);
        ɵngcc0.ɵɵtemplate(11, IgxExcelStyleDefaultExpressionComponent_igx_buttongroup_11_Template, 8, 7, "igx-buttongroup", 10);
        ɵngcc0.ɵɵelementStart(12, "div", 11, 12);
        ɵngcc0.ɵɵlistener("pointerdown", function IgxExcelStyleDefaultExpressionComponent_Template_div_pointerdown_12_listener($event) { return ctx.onOutletPointerDown($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("displayDensity", ctx.displayDensity)("placeholder", ctx.conditionsPlaceholder)("overlaySettings", ctx.dropDownOverlaySettings);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.expressionUI.expression.condition);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.expressionUI.expression.condition);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.conditions);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("displayDensity", ctx.displayDensity);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("type", ctx.type)("placeholder", ctx.inputValuePlaceholder)("disabled", ctx.expressionUI.expression.condition && ctx.expressionUI.expression.condition.isUnary)("value", ctx.expressionUI.expression.searchVal);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isSingle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLast);
    } }, directives: [ɵngcc1.IgxSelectComponent, ɵngcc2.IgxPrefixDirective, ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc4.IgxInputGroupComponent, ɵngcc5.IgxInputDirective, ɵngcc6.IgxOverlayOutletDirective, ɵngcc7.IgxIconComponent, ɵngcc8.IgxSelectItemComponent, ɵngcc9.IgxButtonDirective, ɵngcc10.IgxButtonGroupComponent], encapsulation: 2 });
IgxExcelStyleDefaultExpressionComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
IgxExcelStyleDefaultExpressionComponent.propDecorators = {
    column: [{ type: Input }],
    expressionUI: [{ type: Input }],
    expressionsList: [{ type: Input }],
    grid: [{ type: Input }],
    displayDensity: [{ type: Input }],
    onExpressionRemoved: [{ type: Output }],
    onLogicOperatorChanged: [{ type: Output }],
    overlayOutlet: [{ type: ViewChild, args: ['overlayOutlet', { read: IgxOverlayOutletDirective, static: true },] }],
    dropdownConditions: [{ type: ViewChild, args: ['dropdownConditions', { read: IgxSelectComponent, static: true },] }],
    logicOperatorButtonGroup: [{ type: ViewChild, args: ['logicOperatorButtonGroup', { read: IgxButtonGroupComponent },] }],
    inputValuesDirective: [{ type: ViewChild, args: ['inputValues', { read: IgxInputDirective, static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxExcelStyleDefaultExpressionComponent, [{
        type: Component,
        args: [{
                preserveWhitespaces: false,
                selector: 'igx-excel-style-default-expression',
                template: "<igx-select #dropdownConditions\n        type=\"box\"\n        [displayDensity]=\"displayDensity\"\n        [placeholder]=\"conditionsPlaceholder\"\n        (onSelection)=\"onConditionsChanged($event)\"\n        [overlaySettings]=\"dropDownOverlaySettings\">\n    <igx-prefix>\n        <igx-icon *ngIf=\"expressionUI.expression.condition\" fontSet=\"imx-icons\" [name]=\"getIconName()\"></igx-icon>\n        <igx-icon *ngIf=\"!expressionUI.expression.condition\">filter_list</igx-icon>\n    </igx-prefix>\n    <igx-select-item *ngFor=\"let condition of conditions\" [value]=\"condition\" [selected]=\"isConditionSelected(condition)\">\n        <div class=\"igx-grid__filtering-dropdown-items\">\n            <igx-icon fontSet=\"imx-icons\" [name]=\"getCondition(condition).iconName\"></igx-icon>\n            <span class=\"igx-grid__filtering-dropdown-text\">{{translateCondition(condition)}}</span>\n        </div>\n    </igx-select-item>\n</igx-select>\n\n<igx-input-group #inputGroupValues type=\"box\" [displayDensity]=\"displayDensity\">\n    <input\n        #inputValues\n        igxInput\n        [type]=\"type\"\n        tabindex=\"0\"\n        [placeholder]=\"inputValuePlaceholder\"\n        [disabled]=\"expressionUI.expression.condition && expressionUI.expression.condition.isUnary\"\n        autocomplete=\"off\"\n        [value]=\"expressionUI.expression.searchVal\"\n        (input)=\"onValuesInput($event)\"\n    />\n</igx-input-group>\n\n<button (click)=\"onRemoveButtonClick()\" igxButton=\"icon\" [displayDensity]=\"displayDensity\" *ngIf=\"!isSingle\">\n    <igx-icon>cancel</igx-icon>\n</button>\n\n<igx-buttongroup #logicOperatorButtonGroup\n    *ngIf=\"!isLast\"\n    [multiSelection]=\"false\">\n    <span igxButton [displayDensity]=\"displayDensity\"\n        tabindex=\"0\"\n        #andButton\n        (keydown)=\"onLogicOperatorKeyDown($event, 0)\"\n        [selected]=\"expressionUI.afterOperator === 0\"\n        type=\"button\"\n        (click)=\"onLogicOperatorButtonClicked($event, 0)\">\n        {{ grid.resourceStrings.igx_grid_filter_operator_and }}\n    </span>\n\n    <span igxButton [displayDensity]=\"displayDensity\"\n        tabindex=\"0\"\n        #orButton\n        (keydown)=\"onLogicOperatorKeyDown($event, 1)\"\n        [selected]=\"expressionUI.afterOperator === 1\"\n        type=\"button\"\n        (click)=\"onLogicOperatorButtonClicked($event, 1)\">\n        {{ grid.resourceStrings.igx_grid_filter_operator_or }}\n    </span>\n</igx-buttongroup>\n\n<div #overlayOutlet\n     igxOverlayOutlet\n     (pointerdown)=\"onOutletPointerDown($event)\">\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { onExpressionRemoved: [{
            type: Output
        }], onLogicOperatorChanged: [{
            type: Output
        }], column: [{
            type: Input
        }], expressionUI: [{
            type: Input
        }], expressionsList: [{
            type: Input
        }], grid: [{
            type: Input
        }], displayDensity: [{
            type: Input
        }], overlayOutlet: [{
            type: ViewChild,
            args: ['overlayOutlet', { read: IgxOverlayOutletDirective, static: true }]
        }], dropdownConditions: [{
            type: ViewChild,
            args: ['dropdownConditions', { read: IgxSelectComponent, static: true }]
        }], logicOperatorButtonGroup: [{
            type: ViewChild,
            args: ['logicOperatorButtonGroup', { read: IgxButtonGroupComponent }]
        }], inputValuesDirective: [{
            type: ViewChild,
            args: ['inputValues', { read: IgxInputDirective, static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,