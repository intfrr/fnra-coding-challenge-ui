import { Component } from '@angular/core';
import { IgxGridExcelStyleFilteringComponent } from './grid.excel-style-filtering.component';
/**
 * A component used for presenting Excel style clear filters UI.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './grid.excel-style-filtering.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../icon/icon.component';

function IgxExcelStyleClearFiltersComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵlistener("keydown", function IgxExcelStyleClearFiltersComponent_div_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onClearFilterKeyDown($event); })("click", function IgxExcelStyleClearFiltersComponent_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.clearFilter(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "igx-icon");
    ɵngcc0.ɵɵtext(4, "clear");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.clearFilterClass());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.esf.grid.resourceStrings.igx_grid_excel_filter_clear);
} }
export class IgxExcelStyleClearFiltersComponent {
    constructor(esf) {
        this.esf = esf;
    }
    /**
     * @hidden @internal
     */
    clearFilterClass() {
        if (this.esf.column.filteringExpressionsTree) {
            return 'igx-excel-filter__actions-clear';
        }
        return 'igx-excel-filter__actions-clear--disabled';
    }
    /**
     * @hidden @internal
     */
    clearFilter() {
        this.esf.grid.filteringService.clearFilter(this.esf.column.field);
        this.selectAllFilterItems();
    }
    /**
     * @hidden @internal
     */
    onClearFilterKeyDown(eventArgs) {
        if (eventArgs.key === "Enter" /* ENTER */) {
            this.clearFilter();
        }
    }
    selectAllFilterItems() {
        this.esf.listData.forEach(filterListItem => {
            filterListItem.isSelected = true;
            filterListItem.indeterminate = false;
        });
        this.esf.detectChanges();
    }
}
IgxExcelStyleClearFiltersComponent.ɵfac = function IgxExcelStyleClearFiltersComponent_Factory(t) { return new (t || IgxExcelStyleClearFiltersComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IgxGridExcelStyleFilteringComponent)); };
IgxExcelStyleClearFiltersComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxExcelStyleClearFiltersComponent, selectors: [["igx-excel-style-clear-filters"]], decls: 1, vars: 1, consts: [["tabindex", "0", 3, "ngClass", "keydown", "click", 4, "ngIf"], ["tabindex", "0", 3, "ngClass", "keydown", "click"]], template: function IgxExcelStyleClearFiltersComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxExcelStyleClearFiltersComponent_div_0_Template, 5, 2, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.esf.column);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc3.IgxIconComponent], encapsulation: 2 });
IgxExcelStyleClearFiltersComponent.ctorParameters = () => [
    { type: IgxGridExcelStyleFilteringComponent }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxExcelStyleClearFiltersComponent, [{
        type: Component,
        args: [{
                preserveWhitespaces: false,
                selector: 'igx-excel-style-clear-filters',
                template: "<div *ngIf=\"esf.column\"\n    tabindex=\"0\"\n    [ngClass]=\"clearFilterClass()\"\n    (keydown)=\"onClearFilterKeyDown($event)\"\n    (click)=\"clearFilter()\">\n    <span>{{ esf.grid.resourceStrings.igx_grid_excel_filter_clear }}</span>\n    <igx-icon>clear</igx-icon>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.IgxGridExcelStyleFilteringComponent }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtY2xlYXItZmlsdGVycy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9maWx0ZXJpbmcvZXhjZWwtc3R5bGUvZXhjZWwtc3R5bGUtY2xlYXItZmlsdGVycy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUU3RjtBQUNBO0FBQ0EsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNSCxNQUFNLE9BQU8sa0NBQWtDO0FBQy9DLElBQUksWUFBbUIsR0FBd0M7QUFBSSxRQUE1QyxRQUFHLEdBQUgsR0FBRyxDQUFxQztBQUFDLElBQUcsQ0FBQztBQUNwRSxJQUNJO0FBQ0o7QUFDQSxPQUFPO0FBQ1AsSUFBVyxnQkFBZ0I7QUFDM0IsUUFBUSxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLHdCQUF3QixFQUFFO0FBQ3RELFlBQVksT0FBTyxpQ0FBaUMsQ0FBQztBQUNyRCxTQUFTO0FBQ1QsUUFDUSxPQUFPLDJDQUEyQyxDQUFDO0FBQzNELElBQUksQ0FBQztBQUNMLElBQ0k7QUFDSjtBQUNBLE9BQU87QUFDUCxJQUFXLFdBQVc7QUFDdEIsUUFBUSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUUsUUFBUSxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztBQUNwQyxJQUFJLENBQUM7QUFDTCxJQUNJO0FBQ0o7QUFDQSxPQUFPO0FBQ1AsSUFBVyxvQkFBb0IsQ0FBQyxTQUFTO0FBQ3pDLFFBQVEsSUFBSSxTQUFTLENBQUMsR0FBRyx3QkFBZSxFQUFFO0FBQzFDLFlBQVksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQy9CLFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxJQUNZLG9CQUFvQjtBQUNoQyxRQUFRLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUNuRCxZQUFZLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQzdDLFlBQVksY0FBYyxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7QUFDakQsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNYLFFBQVEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUNqQyxJQUFJLENBQUM7QUFDTDs4REEzQ0MsU0FBUyxTQUFDLGtCQUNQLG1CQUFtQixFQUFFLEtBQUssa0JBQzFCLFFBQVEsRUFBRSwrQkFBK0Isa0JBQ3pDOzZRQUF5RCxjQUM1RDs7OztpR0FDSTtBQUFDO0FBQ1UsWUFYUCxtQ0FBbUM7QUFBRzs7Ozs7Ozs7b0dBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgS0VZUyB9IGZyb20gJy4uLy4uLy4uL2NvcmUvdXRpbHMnO1xuaW1wb3J0IHsgSWd4R3JpZEV4Y2VsU3R5bGVGaWx0ZXJpbmdDb21wb25lbnQgfSBmcm9tICcuL2dyaWQuZXhjZWwtc3R5bGUtZmlsdGVyaW5nLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQSBjb21wb25lbnQgdXNlZCBmb3IgcHJlc2VudGluZyBFeGNlbCBzdHlsZSBjbGVhciBmaWx0ZXJzIFVJLlxuICovXG5AQ29tcG9uZW50KHtcbiAgICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgICBzZWxlY3RvcjogJ2lneC1leGNlbC1zdHlsZS1jbGVhci1maWx0ZXJzJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZXhjZWwtc3R5bGUtY2xlYXItZmlsdGVycy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSWd4RXhjZWxTdHlsZUNsZWFyRmlsdGVyc0NvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHVibGljIGVzZjogSWd4R3JpZEV4Y2VsU3R5bGVGaWx0ZXJpbmdDb21wb25lbnQpIHsgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlbiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBwdWJsaWMgY2xlYXJGaWx0ZXJDbGFzcygpIHtcbiAgICAgICAgaWYgKHRoaXMuZXNmLmNvbHVtbi5maWx0ZXJpbmdFeHByZXNzaW9uc1RyZWUpIHtcbiAgICAgICAgICAgIHJldHVybiAnaWd4LWV4Y2VsLWZpbHRlcl9fYWN0aW9ucy1jbGVhcic7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJ2lneC1leGNlbC1maWx0ZXJfX2FjdGlvbnMtY2xlYXItLWRpc2FibGVkJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHB1YmxpYyBjbGVhckZpbHRlcigpIHtcbiAgICAgICAgdGhpcy5lc2YuZ3JpZC5maWx0ZXJpbmdTZXJ2aWNlLmNsZWFyRmlsdGVyKHRoaXMuZXNmLmNvbHVtbi5maWVsZCk7XG4gICAgICAgIHRoaXMuc2VsZWN0QWxsRmlsdGVySXRlbXMoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHB1YmxpYyBvbkNsZWFyRmlsdGVyS2V5RG93bihldmVudEFyZ3MpIHtcbiAgICAgICAgaWYgKGV2ZW50QXJncy5rZXkgPT09IEtFWVMuRU5URVIpIHtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJGaWx0ZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgc2VsZWN0QWxsRmlsdGVySXRlbXMoKSB7XG4gICAgICAgIHRoaXMuZXNmLmxpc3REYXRhLmZvckVhY2goZmlsdGVyTGlzdEl0ZW0gPT4ge1xuICAgICAgICAgICAgZmlsdGVyTGlzdEl0ZW0uaXNTZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgICBmaWx0ZXJMaXN0SXRlbS5pbmRldGVybWluYXRlID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVzZi5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfVxufVxuIl19