import { Component, Input, ViewChild, ChangeDetectorRef, ViewChildren, ElementRef, HostBinding } from '@angular/core';
import { VerticalAlignment, HorizontalAlignment, Point } from '../../../services/overlay/utilities';
import { ConnectedPositioningStrategy } from '../../../services/overlay/position/connected-positioning-strategy';
import { FilteringExpressionsTree } from '../../../data-operations/filtering-expressions-tree';
import { FilteringLogic } from '../../../data-operations/filtering-expression.interface';
import { IgxChipComponent } from '../../../chips/chip.component';
import { IgxSelectComponent } from '../../../select/select.component';
import { CloseScrollStrategy } from '../../../services/overlay/scroll/close-scroll-strategy';
import { IgxToggleDirective, IgxOverlayOutletDirective } from '../../../directives/toggle/toggle.directive';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { AbsoluteScrollStrategy, AutoPositionStrategy } from '../../../services/public_api';
import { DataUtil } from './../../../data-operations/data-util';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../../directives/toggle/toggle.directive';
import * as ɵngcc3 from '../../../directives/drag-drop/drag-drop.directive';
import * as ɵngcc4 from '../../../directives/button/button.directive';
import * as ɵngcc5 from '../../../icon/icon.component';
import * as ɵngcc6 from '../../../chips/chip.component';
import * as ɵngcc7 from '../../../directives/prefix/prefix.directive';
import * as ɵngcc8 from '../../../directives/suffix/suffix.directive';
import * as ɵngcc9 from '../../../select/select.component';
import * as ɵngcc10 from '@angular/forms';
import * as ɵngcc11 from '../../../select/select-item.component';
import * as ɵngcc12 from '../../../input-group/input-group.component';
import * as ɵngcc13 from '../../../directives/input/input.directive';
import * as ɵngcc14 from '../../../date-picker/date-picker.component';
import * as ɵngcc15 from '../../../date-picker/date-picker.directives';
import * as ɵngcc16 from '../../../buttonGroup/buttonGroup.component';

const _c0 = ["editingInputsContainer"];
const _c1 = ["addModeContainer"];
const _c2 = ["currentGroupButtonsContainer"];
const _c3 = ["columnSelect"];
const _c4 = ["conditionSelect"];
const _c5 = ["searchValueInput"];
const _c6 = ["addRootAndGroupButton"];
const _c7 = ["addConditionButton"];
const _c8 = ["expressionsContainer"];
const _c9 = ["overlayOutlet"];
function IgxAdvancedFilteringDialogComponent_article_0_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 20, 21);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_13_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.addAndGroup(); });
    ɵngcc0.ɵɵelementStart(3, "igx-icon", 22);
    ɵngcc0.ɵɵtext(4, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "button", 20);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_13_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.addOrGroup(); });
    ɵngcc0.ɵɵelementStart(8, "igx-icon", 22);
    ɵngcc0.ɵɵtext(9, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "span");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 23);
    ɵngcc0.ɵɵelementStart(13, "h6", 24);
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r3.displayDensity);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.grid.resourceStrings.igx_grid_advanced_filter_and_group);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r3.displayDensity);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.grid.resourceStrings.igx_grid_advanced_filter_or_group);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.grid.resourceStrings.igx_grid_advanced_filter_initial_text, " ");
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 25, 26);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_14_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const expressionItem_r17 = ctx.$implicit; const afterExpression_r18 = ctx.afterExpression; const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.addCondition(expressionItem_r17, afterExpression_r18); });
    ɵngcc0.ɵɵelementStart(2, "igx-icon", 22);
    ɵngcc0.ɵɵtext(3, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "button", 25);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_14_Template_button_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r21); const expressionItem_r17 = ctx.$implicit; const afterExpression_r18 = ctx.afterExpression; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.addAndGroup(expressionItem_r17, afterExpression_r18); });
    ɵngcc0.ɵɵelementStart(7, "igx-icon", 22);
    ɵngcc0.ɵɵtext(8, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "button", 25);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_14_Template_button_click_11_listener() { ɵngcc0.ɵɵrestoreView(_r21); const expressionItem_r17 = ctx.$implicit; const afterExpression_r18 = ctx.afterExpression; const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.addOrGroup(expressionItem_r17, afterExpression_r18); });
    ɵngcc0.ɵɵelementStart(12, "igx-icon", 22);
    ɵngcc0.ɵɵtext(13, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "span");
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r5.displayDensity)("disabled", ctx_r5.editedExpression);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.grid.resourceStrings.igx_grid_advanced_filter_add_condition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r5.displayDensity)("disabled", ctx_r5.editedExpression);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.grid.resourceStrings.igx_grid_advanced_filter_and_group);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r5.displayDensity)("disabled", ctx_r5.editedExpression);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.grid.resourceStrings.igx_grid_advanced_filter_or_group);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 37);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "date");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r24 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r28 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r28.isDate(expressionItem_r24.expression.searchVal) ? ɵngcc0.ɵɵpipeBind4(2, 1, expressionItem_r24.expression.searchVal, ctx_r28.getFormat(expressionItem_r24.expression.fieldName), undefined, ctx_r28.grid.locale) : expressionItem_r24.expression.searchVal, " ");
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_igx_icon_3_Template(rf, ctx) { if (rf & 1) {
    const _r33 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-icon", 39);
    ɵngcc0.ɵɵlistener("keydown", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_igx_icon_3_Template_igx_icon_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r33); const ctx_r32 = ɵngcc0.ɵɵnextContext(5); return ctx_r32.invokeClick($event); })("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_igx_icon_3_Template_igx_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r33); const expressionItem_r24 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r34 = ɵngcc0.ɵɵnextContext(2); return ctx_r34.enterExpressionAdd(expressionItem_r24); });
    ɵngcc0.ɵɵtext(1, " add ");
    ɵngcc0.ɵɵelementEnd();
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r37 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵelementStart(1, "igx-icon", 39);
    ɵngcc0.ɵɵlistener("keydown", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_Template_igx_icon_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r36 = ɵngcc0.ɵɵnextContext(4); return ctx_r36.invokeClick($event); })("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_Template_igx_icon_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r37); const expressionItem_r24 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r38 = ɵngcc0.ɵɵnextContext(2); return ctx_r38.enterExpressionEdit(expressionItem_r24); });
    ɵngcc0.ɵɵtext(2, " edit ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_igx_icon_3_Template, 2, 0, "igx-icon", 40);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r24 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r29 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !expressionItem_r24.inAddMode && (expressionItem_r24.parent !== ctx_r29.currentGroup || expressionItem_r24 !== ctx_r29.currentGroup.children[ctx_r29.currentGroup.children.length - 1]));
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r43 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵlistener("mouseenter", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_div_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r43); const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit; return expressionItem_r24.hovered = true; })("mouseleave", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_div_mouseleave_0_listener() { ɵngcc0.ɵɵrestoreView(_r43); const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit; return expressionItem_r24.hovered = false; });
    ɵngcc0.ɵɵelementStart(1, "igx-chip", 31);
    ɵngcc0.ɵɵlistener("keydown", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_igx_chip_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r46 = ɵngcc0.ɵɵnextContext(3); return ctx_r46.invokeClick($event); })("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_igx_chip_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r43); const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r47 = ɵngcc0.ɵɵnextContext(2); return ctx_r47.onChipClick(expressionItem_r24); })("dblclick", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_igx_chip_dblclick_1_listener() { ɵngcc0.ɵɵrestoreView(_r43); const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r49 = ɵngcc0.ɵɵnextContext(2); return ctx_r49.onChipDblClick(expressionItem_r24); })("onRemove", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_igx_chip_onRemove_1_listener() { ɵngcc0.ɵɵrestoreView(_r43); const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r51 = ɵngcc0.ɵɵnextContext(2); return ctx_r51.onChipRemove(expressionItem_r24); })("onSelectionDone", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template_igx_chip_onSelectionDone_1_listener() { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r53 = ɵngcc0.ɵɵnextContext(3); return ctx_r53.onChipSelectionEnd(); });
    ɵngcc0.ɵɵelementStart(2, "span", 32);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "igx-prefix");
    ɵngcc0.ɵɵelement(5, "igx-icon", 33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "span", 34);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_span_8_Template, 3, 6, "span", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_div_9_Template, 4, 1, "div", 36);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r25 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", expressionItem_r24)("displayDensity", ctx_r25.displayDensity === "compact" ? "cosy" : ctx_r25.displayDensity)("removable", true)("selected", expressionItem_r24.selected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(expressionItem_r24.columnHeader || expressionItem_r24.expression.fieldName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("name", expressionItem_r24.expression.condition.iconName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r25.getConditionFriendlyName(expressionItem_r24.expression.condition.name), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !expressionItem_r24.expression.condition.isUnary);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", expressionItem_r24.selected && ctx_r25.selectedExpressions.length === 1 || expressionItem_r24.hovered);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_select_item_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-select-item", 53);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r63 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", column_r63);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", column_r63.header || column_r63.field, " ");
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_prefix_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-prefix");
    ɵngcc0.ɵɵelement(1, "igx-icon", 33);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r58 = ɵngcc0.ɵɵreference(6);
    const ctx_r59 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", ctx_r59.selectedColumn.filters.condition(_r58.value).iconName);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_select_item_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-select-item", 53);
    ɵngcc0.ɵɵelementStart(1, "div", 54);
    ɵngcc0.ɵɵelement(2, "igx-icon", 33);
    ɵngcc0.ɵɵelementStart(3, "span", 55);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const condition_r64 = ctx.$implicit;
    const ctx_r60 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("value", condition_r64);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("name", ctx_r60.selectedColumn.filters.condition(condition_r64).iconName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r60.getConditionFriendlyName(condition_r64));
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_input_group_9_Template(rf, ctx) { if (rf & 1) {
    const _r67 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-input-group", 56);
    ɵngcc0.ɵɵelementStart(1, "input", 57, 58);
    ɵngcc0.ɵɵlistener("ngModelChange", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_input_group_9_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r66 = ɵngcc0.ɵɵnextContext(4); return ctx_r66.searchValue = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r61 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r61.selectedColumn || !ctx_r61.selectedCondition || ctx_r61.selectedColumn && ctx_r61.selectedColumn.filters.condition(ctx_r61.selectedCondition).isUnary)("displayDensity", "compact");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("type", ctx_r61.selectedColumn && ctx_r61.selectedColumn.dataType === "number" ? "number" : "text")("placeholder", ctx_r61.grid.resourceStrings.igx_grid_advanced_filter_value_placeholder)("ngModel", ctx_r61.searchValue);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r74 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-input-group", 61, 62);
    ɵngcc0.ɵɵelementStart(2, "input", 63, 58);
    ɵngcc0.ɵɵlistener("keydown", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_ng_template_1_Template_input_keydown_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r74); const ctx_r73 = ɵngcc0.ɵɵnextContext(5); return ctx_r73.invokeClick($event); })("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_ng_template_1_Template_input_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r74); const openDialog_r69 = ctx.openDialog; const _r71 = ɵngcc0.ɵɵreference(1); return openDialog_r69(_r71.element.nativeElement); });
    ɵngcc0.ɵɵpipe(4, "date");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const value_r70 = ctx.value;
    const ctx_r68 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵproperty("displayDensity", "compact");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("placeholder", ctx_r68.grid.resourceStrings.igx_grid_filter_row_date_placeholder)("value", ɵngcc0.ɵɵpipeBind4(4, 5, value_r70, ctx_r68.selectedColumn.pipeArgs.format, undefined, ctx_r68.grid.locale))("readonly", true)("disabled", !ctx_r68.selectedColumn || !ctx_r68.selectedCondition || ctx_r68.selectedColumn && ctx_r68.selectedColumn.filters.condition(ctx_r68.selectedCondition).isUnary);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_Template(rf, ctx) { if (rf & 1) {
    const _r77 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-date-picker", 59);
    ɵngcc0.ɵɵlistener("ngModelChange", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_Template_igx_date_picker_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r77); const ctx_r76 = ɵngcc0.ɵɵnextContext(4); return ctx_r76.searchValue = $event; });
    ɵngcc0.ɵɵtemplate(1, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_ng_template_1_Template, 5, 10, "ng-template", 60);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r62 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r62.searchValue)("locale", ctx_r62.grid.locale)("outlet", ctx_r62.grid.outlet);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r79 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 41, 42);
    ɵngcc0.ɵɵelementStart(2, "igx-select", 43, 44);
    ɵngcc0.ɵɵlistener("ngModelChange", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_Template_igx_select_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r78 = ɵngcc0.ɵɵnextContext(3); return ctx_r78.selectedColumn = $event; });
    ɵngcc0.ɵɵtemplate(4, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_select_item_4_Template, 2, 2, "igx-select-item", 45);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "igx-select", 46, 47);
    ɵngcc0.ɵɵlistener("ngModelChange", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_Template_igx_select_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r80 = ɵngcc0.ɵɵnextContext(3); return ctx_r80.selectedCondition = $event; });
    ɵngcc0.ɵɵtemplate(7, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_prefix_7_Template, 2, 1, "igx-prefix", 11);
    ɵngcc0.ɵɵtemplate(8, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_select_item_8_Template, 5, 3, "igx-select-item", 45);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_input_group_9_Template, 3, 5, "igx-input-group", 48);
    ɵngcc0.ɵɵtemplate(10, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_igx_date_picker_10_Template, 2, 3, "igx-date-picker", 49);
    ɵngcc0.ɵɵelementStart(11, "div", 50);
    ɵngcc0.ɵɵelementStart(12, "button", 51);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_Template_button_click_12_listener() { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r81 = ɵngcc0.ɵɵnextContext(3); return ctx_r81.commitOperandEdit(); });
    ɵngcc0.ɵɵelementStart(13, "igx-icon", 22);
    ɵngcc0.ɵɵtext(14, "check");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "button", 52);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_Template_button_click_15_listener() { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r82 = ɵngcc0.ɵɵnextContext(3); return ctx_r82.cancelOperandEdit(); });
    ɵngcc0.ɵɵelementStart(16, "igx-icon", 22);
    ɵngcc0.ɵɵtext(17, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r58 = ɵngcc0.ɵɵreference(6);
    const ctx_r26 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("displayDensity", "compact")("overlaySettings", ctx_r26.columnSelectOverlaySettings)("placeholder", ctx_r26.grid.resourceStrings.igx_grid_advanced_filter_column_placeholder)("ngModel", ctx_r26.selectedColumn);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r26.filterableColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", "compact")("overlaySettings", ctx_r26.conditionSelectOverlaySettings)("placeholder", ctx_r26.grid.resourceStrings.igx_grid_filter_condition_placeholder)("ngModel", ctx_r26.selectedCondition)("disabled", !ctx_r26.selectedColumn);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r26.selectedColumn && _r58.value && ctx_r26.selectedColumn.filters.condition(_r58.value));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r26.getConditionList());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r26.selectedColumn || ctx_r26.selectedColumn.dataType !== "date");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r26.selectedColumn && ctx_r26.selectedColumn.dataType === "date");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r26.displayDensity)("disabled", !ctx_r26.operandCanBeCommitted());
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r26.displayDensity);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r86 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 64, 65);
    ɵngcc0.ɵɵtemplate(2, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_2_ng_container_2_Template, 1, 0, "ng-container", 66);
    ɵngcc0.ɵɵelementStart(3, "button", 52);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_2_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r85 = ɵngcc0.ɵɵnextContext(3); return ctx_r85.cancelOperandAdd(); });
    ɵngcc0.ɵɵelementStart(4, "igx-icon", 22);
    ɵngcc0.ɵɵtext(5, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r24 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(15);
    const ctx_r27 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ctx_r27.context(expressionItem_r24.parent, expressionItem_r24));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r27.displayDensity);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_0_Template, 10, 9, "div", 27);
    ɵngcc0.ɵɵtemplate(1, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_1_Template, 18, 17, "div", 28);
    ɵngcc0.ɵɵtemplate(2, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_div_2_Template, 6, 3, "div", 29);
} if (rf & 2) {
    const expressionItem_r24 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", !expressionItem_r24.inEditMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", expressionItem_r24.inEditMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", expressionItem_r24.inAddMode);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_ng_container_3_ng_container_1_Template, 1, 0, "ng-container", 66);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const expr_r91 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext(2);
    const _r8 = ɵngcc0.ɵɵreference(19);
    const _r6 = ɵngcc0.ɵɵreference(17);
    const ctx_r89 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r89.isExpressionGroup(expr_r91) ? _r8 : _r6)("ngTemplateOutletContext", ctx_r89.context(expr_r91));
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r98 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 25);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r98); const expressionItem_r88 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r96 = ɵngcc0.ɵɵnextContext(2); return ctx_r96.endGroup(expressionItem_r88); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r88 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r95 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r95.displayDensity)("disabled", ctx_r95.editedExpression || expressionItem_r88.children.length < 2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r95.grid.resourceStrings.igx_grid_advanced_filter_end_group);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 64, 71);
    ɵngcc0.ɵɵtemplate(2, IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_ng_container_2_Template, 1, 0, "ng-container", 66);
    ɵngcc0.ɵɵtemplate(3, IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_button_3_Template, 3, 3, "button", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r88 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(15);
    const ctx_r90 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ctx_r90.context(expressionItem_r88));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", expressionItem_r88 !== ctx_r90.rootGroup);
} }
const _c10 = function (a0, a1, a2) { return { "igx-filter-tree__line--and": a0, "igx-filter-tree__line--or": a1, "igx-filter-tree__line--selected": a2 }; };
function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_Template(rf, ctx) { if (rf & 1) {
    const _r102 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 67);
    ɵngcc0.ɵɵelementStart(1, "div", 68);
    ɵngcc0.ɵɵlistener("keydown", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r102); const ctx_r101 = ɵngcc0.ɵɵnextContext(2); return ctx_r101.invokeClick($event); })("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_Template_div_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r102); const expressionItem_r88 = ctx.$implicit; const ctx_r103 = ɵngcc0.ɵɵnextContext(2); return ctx_r103.onGroupClick(expressionItem_r88); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "div", 69);
    ɵngcc0.ɵɵtemplate(3, IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_ng_container_3_Template, 2, 2, "ng-container", 70);
    ɵngcc0.ɵɵtemplate(4, IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_div_4_Template, 4, 3, "div", 29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const expressionItem_r88 = ctx.$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c10, expressionItem_r88.operator === 0, expressionItem_r88.operator === 1, expressionItem_r88.selected));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", expressionItem_r88.children);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.currentGroup === expressionItem_r88);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_container_20_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_container_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxAdvancedFilteringDialogComponent_article_0_ng_container_20_ng_container_1_Template, 1, 0, "ng-container", 66);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r8 = ɵngcc0.ɵɵreference(19);
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8)("ngTemplateOutletContext", ctx_r10.context(ctx_r10.rootGroup));
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_container_25_Template(rf, ctx) { if (rf & 1) {
    const _r106 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "igx-buttongroup", 73);
    ɵngcc0.ɵɵlistener("onSelect", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_25_Template_igx_buttongroup_onSelect_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r106); const ctx_r105 = ɵngcc0.ɵɵnextContext(2); return ctx_r105.selectFilteringLogic($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "button", 25);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_25_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r106); const ctx_r107 = ɵngcc0.ɵɵnextContext(2); return ctx_r107.ungroup(); });
    ɵngcc0.ɵɵelement(3, "igx-icon", 74);
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "button", 75);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_25_Template_button_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r106); const ctx_r108 = ɵngcc0.ɵɵnextContext(2); return ctx_r108.deleteGroup(); });
    ɵngcc0.ɵɵelementStart(7, "igx-icon");
    ɵngcc0.ɵɵtext(8, "delete");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r11.displayDensity)("multiSelection", false)("values", ctx_r11.filteringLogics);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r11.displayDensity)("disabled", !ctx_r11.contextualGroup.parent);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r11.grid.resourceStrings.igx_grid_advanced_filter_ungroup);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r11.displayDensity);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r11.grid.resourceStrings.igx_grid_advanced_filter_delete);
} }
function IgxAdvancedFilteringDialogComponent_article_0_ng_container_26_Template(rf, ctx) { if (rf & 1) {
    const _r110 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 20);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_26_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r110); const ctx_r109 = ɵngcc0.ɵɵnextContext(2); return ctx_r109.createAndGroup(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 20);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_26_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r110); const ctx_r111 = ɵngcc0.ɵɵnextContext(2); return ctx_r111.createOrGroup(); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "button", 75);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_ng_container_26_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r110); const ctx_r112 = ɵngcc0.ɵɵnextContext(2); return ctx_r112.deleteFilters(); });
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r12.displayDensity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r12.grid.resourceStrings.igx_grid_advanced_filter_create_and_group, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r12.displayDensity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r12.grid.resourceStrings.igx_grid_advanced_filter_create_or_group, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r12.displayDensity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r12.grid.resourceStrings.igx_grid_advanced_filter_delete_filters, " ");
} }
const _c11 = function (a0, a1, a2) { return { "igx-advanced-filter--cosy": a0, "igx-advanced-filter--compact": a1, "igx-advanced-filter--inline": a2 }; };
const _c12 = function (a0, a1) { return { "igx-filter-contextual-menu--cosy": a0, "igx-filter-contextual-menu--compact": a1 }; };
function IgxAdvancedFilteringDialogComponent_article_0_Template(rf, ctx) { if (rf & 1) {
    const _r114 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "article", 3);
    ɵngcc0.ɵɵlistener("dragStart", function IgxAdvancedFilteringDialogComponent_article_0_Template_article_dragStart_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r113 = ɵngcc0.ɵɵnextContext(); return ctx_r113.dragStart($event); })("dragEnd", function IgxAdvancedFilteringDialogComponent_article_0_Template_article_dragEnd_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r115 = ɵngcc0.ɵɵnextContext(); return ctx_r115.dragEnd($event); })("dragMove", function IgxAdvancedFilteringDialogComponent_article_0_Template_article_dragMove_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r116 = ɵngcc0.ɵɵnextContext(); return ctx_r116.onDragMove($event); })("keydown", function IgxAdvancedFilteringDialogComponent_article_0_Template_article_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r117 = ɵngcc0.ɵɵnextContext(); return ctx_r117.onKeyDown($event); });
    ɵngcc0.ɵɵelementStart(1, "header", 4);
    ɵngcc0.ɵɵelementStart(2, "h4", 5);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 6);
    ɵngcc0.ɵɵelementStart(5, "div", 7);
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 8);
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "article", 9, 10);
    ɵngcc0.ɵɵlistener("scroll", function IgxAdvancedFilteringDialogComponent_article_0_Template_article_scroll_11_listener() { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r118 = ɵngcc0.ɵɵnextContext(); return ctx_r118.onExpressionsScrolled(); });
    ɵngcc0.ɵɵtemplate(13, IgxAdvancedFilteringDialogComponent_article_0_ng_container_13_Template, 15, 5, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(14, IgxAdvancedFilteringDialogComponent_article_0_ng_template_14_Template, 16, 9, "ng-template", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(16, IgxAdvancedFilteringDialogComponent_article_0_ng_template_16_Template, 3, 3, "ng-template", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(18, IgxAdvancedFilteringDialogComponent_article_0_ng_template_18_Template, 5, 7, "ng-template", null, 14, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(20, IgxAdvancedFilteringDialogComponent_article_0_ng_container_20_Template, 2, 2, "ng-container", 11);
    ɵngcc0.ɵɵelementStart(21, "div", 15);
    ɵngcc0.ɵɵlistener("keydown", function IgxAdvancedFilteringDialogComponent_article_0_Template_div_keydown_21_listener($event) { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r119 = ɵngcc0.ɵɵnextContext(); return ctx_r119.onKeyDown($event); })("onClosed", function IgxAdvancedFilteringDialogComponent_article_0_Template_div_onClosed_21_listener() { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r120 = ɵngcc0.ɵɵnextContext(); return ctx_r120.contextMenuClosed(); });
    ɵngcc0.ɵɵelementStart(22, "button", 16);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_Template_button_click_22_listener() { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r121 = ɵngcc0.ɵɵnextContext(); return ctx_r121.clearSelection(); });
    ɵngcc0.ɵɵelementStart(23, "igx-icon");
    ɵngcc0.ɵɵtext(24, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(25, IgxAdvancedFilteringDialogComponent_article_0_ng_container_25_Template, 11, 8, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(26, IgxAdvancedFilteringDialogComponent_article_0_ng_container_26_Template, 7, 6, "ng-container", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(27, "footer", 17);
    ɵngcc0.ɵɵelementStart(28, "button", 18);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_Template_button_click_28_listener() { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r122 = ɵngcc0.ɵɵnextContext(); return ctx_r122.onClearButtonClick(); });
    ɵngcc0.ɵɵtext(29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(30, "div");
    ɵngcc0.ɵɵelementStart(31, "button", 18);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_Template_button_click_31_listener() { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r123 = ɵngcc0.ɵɵnextContext(); return ctx_r123.cancelChanges(); });
    ɵngcc0.ɵɵtext(32);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(33, "button", 19);
    ɵngcc0.ɵɵlistener("click", function IgxAdvancedFilteringDialogComponent_article_0_Template_button_click_33_listener() { ɵngcc0.ɵɵrestoreView(_r114); const ctx_r124 = ɵngcc0.ɵɵnextContext(); return ctx_r124.onApplyButtonClick(); });
    ɵngcc0.ɵɵtext(34);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ghost", false)("dragTolerance", 0)("ngClass", ɵngcc0.ɵɵpureFunction3(17, _c11, ctx_r0.grid.displayDensity === "cosy", ctx_r0.grid.displayDensity === "compact", ctx_r0.inline));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.grid.resourceStrings.igx_grid_advanced_filter_title, " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.grid.resourceStrings.igx_grid_advanced_filter_and_label);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.grid.resourceStrings.igx_grid_advanced_filter_or_label);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.rootGroup);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.rootGroup);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(21, _c12, ctx_r0.displayDensity === "cosy", ctx_r0.displayDensity === "compact"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.contextualGroup);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.contextualGroup);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r0.displayDensity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.grid.resourceStrings.igx_grid_excel_custom_dialog_clear);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r0.displayDensity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.grid.resourceStrings.igx_grid_excel_cancel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayDensity", ctx_r0.displayDensity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.grid.resourceStrings.igx_grid_excel_apply, " ");
} }
class ExpressionItem {
    constructor(parent) {
        this.parent = parent;
    }
}
/**
 * @hidden
 */
class ExpressionGroupItem extends ExpressionItem {
    constructor(operator, parent) {
        super(parent);
        this.operator = operator;
        this.children = [];
    }
}
/**
 * @hidden
 */
class ExpressionOperandItem extends ExpressionItem {
    constructor(expression, parent) {
        super(parent);
        this.expression = expression;
    }
}
/**
 * A component used for presenting advanced filtering UI for a Grid.
 * It is used internally in the Grid, but could also be hosted in a container outside of it.
 *
 * Example:
 * ```html
 * <igx-advanced-filtering-dialog
 *     [grid]="grid1">
 * </igx-advanced-filtering-dialog>
 * ```
 */
export class IgxAdvancedFilteringDialogComponent {
    constructor(cdr) {
        this.cdr = cdr;
        /**
         * @hidden @internal
         */
        this.inline = true;
        /**
         * @hidden @internal
         */
        this.selectedExpressions = [];
        /**
         * @hidden @internal
         */
        this.selectedGroups = [];
        this._positionSettings = {
            horizontalStartPoint: HorizontalAlignment.Right,
            verticalStartPoint: VerticalAlignment.Top
        };
        this._overlaySettings = {
            closeOnOutsideClick: false,
            modal: false,
            positionStrategy: new ConnectedPositioningStrategy(this._positionSettings),
            scrollStrategy: new CloseScrollStrategy()
        };
        /**
         * @hidden @internal
         */
        this.columnSelectOverlaySettings = {
            scrollStrategy: new AbsoluteScrollStrategy(),
            modal: false,
            closeOnOutsideClick: false
        };
        /**
         * @hidden @internal
         */
        this.conditionSelectOverlaySettings = {
            scrollStrategy: new AbsoluteScrollStrategy(),
            modal: false,
            closeOnOutsideClick: false
        };
        /**
         * @hidden @internal
         */
        this.display = 'block';
        this.destroy$ = new Subject();
        this._dblClickDelay = 200;
        this._preventChipClick = false;
    }
    /**
     * @hidden @internal
     */
    set editingInputsContainer(value) {
        if ((value && !this._editingInputsContainer) ||
            (value && this._editingInputsContainer && this._editingInputsContainer.nativeElement !== value.nativeElement)) {
            requestAnimationFrame(() => {
                this.scrollElementIntoView(value.nativeElement);
            });
        }
        this._editingInputsContainer = value;
    }
    /**
     * @hidden @internal
     */
    get editingInputsContainer() {
        return this._editingInputsContainer;
    }
    /**
     * @hidden @internal
     */
    set addModeContainer(value) {
        if ((value && !this._addModeContainer) ||
            (value && this._addModeContainer && this._addModeContainer.nativeElement !== value.nativeElement)) {
            requestAnimationFrame(() => {
                this.scrollElementIntoView(value.nativeElement);
            });
        }
        this._addModeContainer = value;
    }
    /**
     * @hidden @internal
     */
    get addModeContainer() {
        return this._addModeContainer;
    }
    /**
     * @hidden @internal
     */
    set currentGroupButtonsContainer(value) {
        if ((value && !this._currentGroupButtonsContainer) ||
            (value && this._currentGroupButtonsContainer && this._currentGroupButtonsContainer.nativeElement !== value.nativeElement)) {
            requestAnimationFrame(() => {
                this.scrollElementIntoView(value.nativeElement);
            });
        }
        this._currentGroupButtonsContainer = value;
    }
    /**
     * @hidden @internal
     */
    get currentGroupButtonsContainer() {
        return this._currentGroupButtonsContainer;
    }
    /**
     * @hidden @internal
     */
    ngAfterViewInit() {
        this._overlaySettings.outlet = this.overlayOutlet;
        this.columnSelectOverlaySettings.outlet = this.overlayOutlet;
        this.conditionSelectOverlaySettings.outlet = this.overlayOutlet;
    }
    /**
     * @hidden @internal
     */
    ngOnDestroy() {
        this.destroy$.next(true);
        this.destroy$.complete();
    }
    /**
     * @hidden @internal
     */
    get displayDensity() {
        return this.grid.displayDensity;
    }
    /**
     * @hidden @internal
     */
    get selectedColumn() {
        return this._selectedColumn;
    }
    /**
     * @hidden @internal
     */
    set selectedColumn(value) {
        const oldValue = this._selectedColumn;
        if (this._selectedColumn !== value) {
            this._selectedColumn = value;
            if (oldValue && this._selectedColumn && this._selectedColumn.dataType !== oldValue.dataType) {
                this.selectedCondition = null;
                this.searchValue = null;
                this.cdr.detectChanges();
            }
        }
    }
    /**
     * An @Input property that sets the grid.
     */
    set grid(grid) {
        this._grid = grid;
        if (this._filteringChange) {
            this._filteringChange.unsubscribe();
        }
        if (this._grid) {
            this._grid.filteringService.registerSVGIcons();
            this._filteringChange = this._grid.advancedFilteringExpressionsTreeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {
                this.init();
            });
            this.init();
        }
    }
    /**
     * Returns the grid.
     */
    get grid() {
        return this._grid;
    }
    /**
     * @hidden @internal
     */
    get filterableColumns() {
        return this.grid.columns.filter((col) => !col.columnGroup && col.filterable);
    }
    /**
     * @hidden @internal
     */
    dragStart(dragArgs) {
        if (!this._overlayComponentId) {
            dragArgs.cancel = true;
            return;
        }
        if (!this.contextMenuToggle.collapsed) {
            this.contextMenuToggle.element.style.display = 'none';
        }
    }
    /**
     * @hidden @internal
     */
    dragEnd(dragArgs) {
        if (!this.contextMenuToggle.collapsed) {
            this.calculateContextMenuTarget();
            this.contextMenuToggle.reposition();
            this.contextMenuToggle.element.style.display = '';
        }
    }
    /**
     * @hidden @internal
     */
    onDragMove(e) {
        const deltaX = e.nextPageX - e.pageX;
        const deltaY = e.nextPageY - e.pageY;
        e.cancel = true;
        this._overlayService.setOffset(this._overlayComponentId, deltaX, deltaY);
    }
    /**
     * @hidden @internal
     */
    addCondition(parent, afterExpression) {
        this.cancelOperandAdd();
        const operandItem = new ExpressionOperandItem({
            fieldName: null,
            condition: null,
            ignoreCase: true,
            searchVal: null
        }, parent);
        if (afterExpression) {
            const index = parent.children.indexOf(afterExpression);
            parent.children.splice(index + 1, 0, operandItem);
        }
        else {
            parent.children.push(operandItem);
        }
        this.enterExpressionEdit(operandItem);
    }
    /**
     * @hidden @internal
     */
    addAndGroup(parent, afterExpression) {
        this.addGroup(FilteringLogic.And, parent, afterExpression);
    }
    /**
     * @hidden @internal
     */
    addOrGroup(parent, afterExpression) {
        this.addGroup(FilteringLogic.Or, parent, afterExpression);
    }
    /**
     * @hidden @internal
     */
    endGroup(groupItem) {
        this.currentGroup = groupItem.parent;
    }
    /**
     * @hidden @internal
     */
    commitOperandEdit() {
        if (this.editedExpression) {
            this.editedExpression.expression.fieldName = this.selectedColumn.field;
            this.editedExpression.expression.condition = this.selectedColumn.filters.condition(this.selectedCondition);
            this.editedExpression.expression.searchVal = DataUtil.parseValue(this.selectedColumn.dataType, this.searchValue);
            this.editedExpression.columnHeader = this.selectedColumn.header;
            this.editedExpression.inEditMode = false;
            this.editedExpression = null;
        }
    }
    /**
     * @hidden @internal
     */
    cancelOperandAdd() {
        if (this.addModeExpression) {
            this.addModeExpression.inAddMode = false;
            this.addModeExpression = null;
        }
    }
    /**
     * @hidden @internal
     */
    cancelOperandEdit() {
        if (this.editedExpression) {
            this.editedExpression.inEditMode = false;
            if (!this.editedExpression.expression.fieldName) {
                this.deleteItem(this.editedExpression);
            }
            this.editedExpression = null;
        }
    }
    /**
     * @hidden @internal
     */
    operandCanBeCommitted() {
        return this.selectedColumn && this.selectedCondition &&
            (!!this.searchValue || this.selectedColumn.filters.condition(this.selectedCondition).isUnary);
    }
    /**
     * @hidden @internal
     */
    exitOperandEdit() {
        if (!this.editedExpression) {
            return;
        }
        if (this.operandCanBeCommitted()) {
            this.commitOperandEdit();
        }
        else {
            this.cancelOperandEdit();
        }
    }
    /**
     * @hidden @internal
     */
    isExpressionGroup(expression) {
        return expression instanceof ExpressionGroupItem;
    }
    addGroup(operator, parent, afterExpression) {
        this.cancelOperandAdd();
        const groupItem = new ExpressionGroupItem(operator, parent);
        if (parent) {
            if (afterExpression) {
                const index = parent.children.indexOf(afterExpression);
                parent.children.splice(index + 1, 0, groupItem);
            }
            else {
                parent.children.push(groupItem);
            }
        }
        else {
            this.rootGroup = groupItem;
        }
        this.addCondition(groupItem);
        this.currentGroup = groupItem;
    }
    createExpressionGroupItem(expressionTree, parent) {
        let groupItem;
        if (expressionTree) {
            groupItem = new ExpressionGroupItem(expressionTree.operator, parent);
            for (const expr of expressionTree.filteringOperands) {
                if (expr instanceof FilteringExpressionsTree) {
                    groupItem.children.push(this.createExpressionGroupItem(expr, groupItem));
                }
                else {
                    const filteringExpr = expr;
                    const exprCopy = {
                        fieldName: filteringExpr.fieldName,
                        condition: filteringExpr.condition,
                        searchVal: filteringExpr.searchVal,
                        ignoreCase: filteringExpr.ignoreCase
                    };
                    const operandItem = new ExpressionOperandItem(exprCopy, groupItem);
                    const column = this.grid.getColumnByName(filteringExpr.fieldName);
                    operandItem.columnHeader = column.header;
                    groupItem.children.push(operandItem);
                }
            }
        }
        return groupItem;
    }
    createExpressionsTreeFromGroupItem(groupItem) {
        if (!groupItem) {
            return null;
        }
        const expressionsTree = new FilteringExpressionsTree(groupItem.operator);
        for (const item of groupItem.children) {
            if (item instanceof ExpressionGroupItem) {
                const subTree = this.createExpressionsTreeFromGroupItem(item);
                expressionsTree.filteringOperands.push(subTree);
            }
            else {
                expressionsTree.filteringOperands.push(item.expression);
            }
        }
        return expressionsTree;
    }
    /**
     * @hidden @internal
     */
    onChipRemove(expressionItem) {
        this.deleteItem(expressionItem);
    }
    /**
     * @hidden @internal
     */
    onChipClick(expressionItem) {
        this._clickTimer = setTimeout(() => {
            if (!this._preventChipClick) {
                this.onToggleExpression(expressionItem);
            }
            this._preventChipClick = false;
        }, this._dblClickDelay);
    }
    /**
     * @hidden @internal
     */
    onChipDblClick(expressionItem) {
        clearTimeout(this._clickTimer);
        this._preventChipClick = true;
        this.enterExpressionEdit(expressionItem);
    }
    /**
     * @hidden @internal
     */
    enterExpressionEdit(expressionItem) {
        this.clearSelection();
        this.exitOperandEdit();
        this.cancelOperandAdd();
        if (this.editedExpression) {
            this.editedExpression.inEditMode = false;
        }
        expressionItem.hovered = false;
        this.selectedColumn = expressionItem.expression.fieldName ?
            this.grid.getColumnByName(expressionItem.expression.fieldName) : null;
        this.selectedCondition = expressionItem.expression.condition ?
            expressionItem.expression.condition.name : null;
        this.searchValue = expressionItem.expression.searchVal;
        expressionItem.inEditMode = true;
        this.editedExpression = expressionItem;
        this.cdr.detectChanges();
        this.columnSelectOverlaySettings.target = this.columnSelect.element;
        this.columnSelectOverlaySettings.excludeFromOutsideClick = [this.columnSelect.element];
        this.columnSelectOverlaySettings.positionStrategy = new AutoPositionStrategy();
        this.conditionSelectOverlaySettings.target = this.conditionSelect.element;
        this.conditionSelectOverlaySettings.excludeFromOutsideClick = [this.conditionSelect.element];
        this.conditionSelectOverlaySettings.positionStrategy = new AutoPositionStrategy();
        if (!this.selectedColumn) {
            this.columnSelect.input.nativeElement.focus();
        }
        else if (this.selectedColumn.filters.condition(this.selectedCondition).isUnary) {
            this.conditionSelect.input.nativeElement.focus();
        }
        else {
            this.searchValueInput.nativeElement.focus();
        }
    }
    /**
     * @hidden @internal
     */
    clearSelection() {
        for (const group of this.selectedGroups) {
            group.selected = false;
        }
        this.selectedGroups = [];
        for (const expr of this.selectedExpressions) {
            expr.selected = false;
        }
        this.selectedExpressions = [];
        this.toggleContextMenu();
    }
    /**
     * @hidden @internal
     */
    enterExpressionAdd(expressionItem) {
        this.clearSelection();
        this.exitOperandEdit();
        if (this.addModeExpression) {
            this.addModeExpression.inAddMode = false;
        }
        expressionItem.inAddMode = true;
        this.addModeExpression = expressionItem;
        if (expressionItem.selected) {
            this.toggleExpression(expressionItem);
        }
    }
    onToggleExpression(expressionItem) {
        this.exitOperandEdit();
        this.toggleExpression(expressionItem);
        this.toggleContextMenu();
    }
    toggleExpression(expressionItem) {
        expressionItem.selected = !expressionItem.selected;
        if (expressionItem.selected) {
            this.selectedExpressions.push(expressionItem);
        }
        else {
            const index = this.selectedExpressions.indexOf(expressionItem);
            this.selectedExpressions.splice(index, 1);
            this.deselectParentRecursive(expressionItem);
        }
    }
    /**
     * @hidden @internal
     */
    contextMenuClosed() {
        this.contextualGroup = null;
    }
    toggleContextMenu() {
        const contextualGroup = this.findSingleSelectedGroup();
        if (contextualGroup || this.selectedExpressions.length > 1) {
            this.contextualGroup = contextualGroup;
            if (contextualGroup) {
                this.filteringLogics = [
                    {
                        label: this.grid.resourceStrings.igx_grid_filter_operator_and,
                        selected: contextualGroup.operator === FilteringLogic.And
                    },
                    {
                        label: this.grid.resourceStrings.igx_grid_filter_operator_or,
                        selected: contextualGroup.operator === FilteringLogic.Or
                    }
                ];
            }
        }
        else if (this.contextMenuToggle) {
            this.contextMenuToggle.close();
        }
    }
    findSingleSelectedGroup() {
        for (const group of this.selectedGroups) {
            const containsAllSelectedExpressions = this.selectedExpressions.every(op => this.isInsideGroup(op, group));
            if (containsAllSelectedExpressions) {
                return group;
            }
        }
        return null;
    }
    isInsideGroup(item, group) {
        if (!item) {
            return false;
        }
        if (item.parent === group) {
            return true;
        }
        return this.isInsideGroup(item.parent, group);
    }
    deleteItem(expressionItem) {
        if (!expressionItem.parent) {
            this.rootGroup = null;
            this.currentGroup = null;
            return;
        }
        if (expressionItem === this.currentGroup) {
            this.currentGroup = this.currentGroup.parent;
        }
        const children = expressionItem.parent.children;
        const index = children.indexOf(expressionItem);
        children.splice(index, 1);
        if (!children.length) {
            this.deleteItem(expressionItem.parent);
        }
    }
    /**
     * @hidden @internal
     */
    onKeyDown(eventArgs) {
        eventArgs.stopPropagation();
        const key = eventArgs.key;
        if (!this.contextMenuToggle.collapsed && (key === "Escape" /* ESCAPE */ || key === "Esc" /* ESCAPE_IE */)) {
            this.clearSelection();
        }
        else if (key === "Escape" /* ESCAPE */ || key === "Esc" /* ESCAPE_IE */) {
            this.closeDialog();
        }
    }
    /**
     * @hidden @internal
     */
    createAndGroup() {
        this.createGroup(FilteringLogic.And);
    }
    /**
     * @hidden @internal
     */
    createOrGroup() {
        this.createGroup(FilteringLogic.Or);
    }
    createGroup(operator) {
        const chips = this.chips.toArray();
        const minIndex = this.selectedExpressions.reduce((i, e) => Math.min(i, chips.findIndex(c => c.data === e)), Number.MAX_VALUE);
        const firstExpression = chips[minIndex].data;
        const parent = firstExpression.parent;
        const groupItem = new ExpressionGroupItem(operator, parent);
        const index = parent.children.indexOf(firstExpression);
        parent.children.splice(index, 0, groupItem);
        for (const expr of this.selectedExpressions) {
            this.deleteItem(expr);
            groupItem.children.push(expr);
            expr.parent = groupItem;
        }
        this.clearSelection();
    }
    /**
     * @hidden @internal
     */
    deleteFilters() {
        for (const expr of this.selectedExpressions) {
            this.deleteItem(expr);
        }
        this.clearSelection();
    }
    /**
     * @hidden @internal
     */
    onGroupClick(groupItem) {
        this.toggleGroup(groupItem);
    }
    toggleGroup(groupItem) {
        this.exitOperandEdit();
        if (groupItem.children && groupItem.children.length) {
            this.toggleGroupRecursive(groupItem, !groupItem.selected);
            if (!groupItem.selected) {
                this.deselectParentRecursive(groupItem);
            }
            this.toggleContextMenu();
        }
    }
    toggleGroupRecursive(groupItem, selected) {
        if (groupItem.selected !== selected) {
            groupItem.selected = selected;
            if (groupItem.selected) {
                this.selectedGroups.push(groupItem);
            }
            else {
                const index = this.selectedGroups.indexOf(groupItem);
                this.selectedGroups.splice(index, 1);
            }
        }
        for (const expr of groupItem.children) {
            if (expr instanceof ExpressionGroupItem) {
                this.toggleGroupRecursive(expr, selected);
            }
            else {
                const operandExpression = expr;
                if (operandExpression.selected !== selected) {
                    this.toggleExpression(operandExpression);
                }
            }
        }
    }
    deselectParentRecursive(expressionItem) {
        const parent = expressionItem.parent;
        if (parent) {
            if (parent.selected) {
                parent.selected = false;
                const index = this.selectedGroups.indexOf(parent);
                this.selectedGroups.splice(index, 1);
            }
            this.deselectParentRecursive(parent);
        }
    }
    calculateContextMenuTarget() {
        const containerRect = this.expressionsContainer.nativeElement.getBoundingClientRect();
        const chips = this.chips.filter(c => this.selectedExpressions.indexOf(c.data) !== -1);
        let minTop = chips.reduce((t, c) => Math.min(t, c.elementRef.nativeElement.getBoundingClientRect().top), Number.MAX_VALUE);
        minTop = Math.max(containerRect.top, minTop);
        minTop = Math.min(containerRect.bottom, minTop);
        let maxRight = chips.reduce((r, c) => Math.max(r, c.elementRef.nativeElement.getBoundingClientRect().right), 0);
        maxRight = Math.max(maxRight, containerRect.left);
        maxRight = Math.min(maxRight, containerRect.right);
        this._overlaySettings.target = new Point(maxRight, minTop);
    }
    scrollElementIntoView(target) {
        const container = this.expressionsContainer.nativeElement;
        const targetOffset = target.offsetTop - container.offsetTop;
        const delta = 10;
        if (container.scrollTop + delta > targetOffset) {
            container.scrollTop = targetOffset - delta;
        }
        else if (container.scrollTop + container.clientHeight < targetOffset + target.offsetHeight + delta) {
            container.scrollTop = targetOffset + target.offsetHeight + delta - container.clientHeight;
        }
    }
    /**
     * @hidden @internal
     */
    ungroup() {
        const selectedGroup = this.contextualGroup;
        const parent = selectedGroup.parent;
        if (parent) {
            const index = parent.children.indexOf(selectedGroup);
            parent.children.splice(index, 1, ...selectedGroup.children);
            for (const expr of selectedGroup.children) {
                expr.parent = parent;
            }
        }
        this.clearSelection();
    }
    /**
     * @hidden @internal
     */
    deleteGroup() {
        const selectedGroup = this.contextualGroup;
        const parent = selectedGroup.parent;
        if (parent) {
            const index = parent.children.indexOf(selectedGroup);
            parent.children.splice(index, 1);
        }
        else {
            this.rootGroup = null;
        }
        this.clearSelection();
    }
    /**
     * @hidden @internal
     */
    selectFilteringLogic(event) {
        this.contextualGroup.operator = event.index;
    }
    /**
     * @hidden @internal
     */
    getConditionFriendlyName(name) {
        return this.grid.resourceStrings[`igx_grid_filter_${name}`] || name;
    }
    /**
     * @hidden @internal
     */
    isDate(value) {
        return value instanceof Date;
    }
    /**
     * @hidden @internal
     */
    onExpressionsScrolled() {
        if (!this.contextMenuToggle.collapsed) {
            this.calculateContextMenuTarget();
            this.contextMenuToggle.reposition();
        }
    }
    /**
     * @hidden @internal
     */
    invokeClick(eventArgs) {
        if (eventArgs.key === "Enter" /* ENTER */ || eventArgs.key === " " /* SPACE */ || eventArgs.key === "Spacebar" /* SPACE_IE */) {
            eventArgs.preventDefault();
            eventArgs.currentTarget.click();
        }
    }
    /**
     * @hidden @internal
     */
    onOutletPointerDown(event) {
        // This prevents closing the select's dropdown when clicking the scroll
        event.preventDefault();
    }
    /**
     * @hidden @internal
     */
    getConditionList() {
        return this.selectedColumn ? this.selectedColumn.filters.conditionList() : [];
    }
    /**
     * @hidden @internal
     */
    initialize(grid, overlayService, overlayComponentId) {
        this.inline = false;
        this.grid = grid;
        this._overlayService = overlayService;
        this._overlayComponentId = overlayComponentId;
    }
    /**
     * @hidden @internal
     */
    getFormat(field) {
        return this.grid.getColumnByName(field).pipeArgs.format;
    }
    /**
     * @hidden @internal
     */
    getTimezone(field) {
        return this.grid.getColumnByName(field).pipeArgs.timezone;
    }
    /**
     * @hidden @internal
     */
    setAddButtonFocus() {
        if (this.addRootAndGroupButton) {
            this.addRootAndGroupButton.nativeElement.focus();
        }
        else if (this.addConditionButton) {
            this.addConditionButton.nativeElement.focus();
        }
    }
    init() {
        this.clearSelection();
        this.cancelOperandAdd();
        this.cancelOperandEdit();
        this.rootGroup = this.createExpressionGroupItem(this.grid.advancedFilteringExpressionsTree);
        this.currentGroup = this.rootGroup;
    }
    /**
     * @hidden @internal
     */
    context(expression, afterExpression) {
        return {
            $implicit: expression,
            afterExpression
        };
    }
    /**
     * @hidden @internal
     */
    onClearButtonClick() {
        this.grid.endEdit(false);
        this.grid.advancedFilteringExpressionsTree = null;
    }
    /**
     * @hidden @internal
     */
    closeDialog() {
        if (this._overlayComponentId) {
            this._overlayService.hide(this._overlayComponentId);
        }
        this.grid.navigation.activeNode = this.lastActiveNode;
        if (this.grid.navigation.activeNode && this.grid.navigation.activeNode.row === -1) {
            this.grid.theadRow.nativeElement.focus();
        }
    }
    /**
     * @hidden @internal
     */
    applyChanges() {
        this.grid.endEdit(false);
        this.exitOperandEdit();
        this.grid.advancedFilteringExpressionsTree = this.createExpressionsTreeFromGroupItem(this.rootGroup);
    }
    /**
     * @hidden @internal
     */
    cancelChanges() {
        if (!this._overlayComponentId) {
            this.init();
        }
        this.closeDialog();
    }
    /**
     * @hidden @internal
     */
    onApplyButtonClick() {
        this.applyChanges();
        this.closeDialog();
    }
    /**
     * @hidden @internal
     */
    onChipSelectionEnd() {
        const contextualGroup = this.findSingleSelectedGroup();
        if (contextualGroup || this.selectedExpressions.length > 1) {
            this.contextualGroup = contextualGroup;
            this.calculateContextMenuTarget();
            if (this.contextMenuToggle.collapsed) {
                this.contextMenuToggle.open(this._overlaySettings);
            }
            else {
                this.contextMenuToggle.reposition();
            }
        }
    }
}
IgxAdvancedFilteringDialogComponent.ɵfac = function IgxAdvancedFilteringDialogComponent_Factory(t) { return new (t || IgxAdvancedFilteringDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
IgxAdvancedFilteringDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxAdvancedFilteringDialogComponent, selectors: [["igx-advanced-filtering-dialog"]], viewQuery: function IgxAdvancedFilteringDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(_c1, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(_c2, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(_c3, true, IgxSelectComponent);
        ɵngcc0.ɵɵviewQuery(_c4, true, IgxSelectComponent);
        ɵngcc0.ɵɵviewQuery(_c5, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(_c6, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(_c7, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(IgxToggleDirective, true);
        ɵngcc0.ɵɵviewQuery(_c8, true);
        ɵngcc0.ɵɵstaticViewQuery(_c9, true, IgxOverlayOutletDirective);
        ɵngcc0.ɵɵviewQuery(IgxChipComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.editingInputsContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.addModeContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.currentGroupButtonsContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnSelect = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.conditionSelect = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchValueInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.addRootAndGroupButton = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.addConditionButton = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contextMenuToggle = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expressionsContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayOutlet = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);
    } }, hostVars: 2, hostBindings: function IgxAdvancedFilteringDialogComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("display", ctx.display);
    } }, inputs: { grid: "grid" }, decls: 3, vars: 1, consts: [["class", "igx-advanced-filter", "igxDrag", "", 3, "ghost", "dragTolerance", "ngClass", "dragStart", "dragEnd", "dragMove", "keydown", 4, "ngIf"], ["igxOverlayOutlet", "", 1, "igx-advanced-filter__outlet", 3, "pointerdown"], ["overlayOutlet", ""], ["igxDrag", "", 1, "igx-advanced-filter", 3, "ghost", "dragTolerance", "ngClass", "dragStart", "dragEnd", "dragMove", "keydown"], ["igxDragHandle", "", 1, "igx-advanced-filter__header"], [1, "igx-typography__h6", 2, "pointer-events", "none"], [1, "igx-filter-legend"], [1, "igx-filter-legend__item--and"], [1, "igx-filter-legend__item--or"], [1, "igx-advanced-filter__main", 3, "scroll"], ["expressionsContainer", ""], [4, "ngIf"], ["addExpressionsTemplate", ""], ["filterOperandTemplate", ""], ["expressionTreeTemplate", ""], ["igxToggle", "", 1, "igx-filter-contextual-menu", 3, "ngClass", "keydown", "onClosed"], ["igxButton", "icon", 1, "igx-filter-contextual-menu__close-btn", 3, "click"], [1, "igx-excel-filter__secondary-footer"], ["igxButton", "", 3, "displayDensity", "click"], ["igxButton", "raised", 3, "displayDensity", "click"], ["igxButton", "outlined", 3, "displayDensity", "click"], ["addRootAndGroupButton", ""], ["fontSet", "material"], [1, "igx-filter-empty"], [1, "igx-filter-empty__title"], ["igxButton", "outlined", 3, "displayDensity", "disabled", "click"], ["addConditionButton", ""], ["class", "igx-filter-tree__expression-item", 3, "mouseenter", "mouseleave", 4, "ngIf"], ["class", "igx-filter-tree__inputs", 4, "ngIf"], ["class", "igx-filter-tree__buttons", 4, "ngIf"], [1, "igx-filter-tree__expression-item", 3, "mouseenter", "mouseleave"], [3, "data", "displayDensity", "removable", "selected", "keydown", "click", "dblclick", "onRemove", "onSelectionDone"], ["igxPrefix", "", 1, "igx-filter-tree__expression-column"], ["fontSet", "imx-icons", 3, "name"], [1, "igx-filter-tree__expression-condition"], ["igxSuffix", "", 4, "ngIf"], ["class", "igx-filter-tree__expression-actions", 4, "ngIf"], ["igxSuffix", ""], [1, "igx-filter-tree__expression-actions"], ["tabindex", "0", 3, "keydown", "click"], ["tabindex", "0", 3, "keydown", "click", 4, "ngIf"], [1, "igx-filter-tree__inputs"], ["editingInputsContainer", ""], ["type", "box", 3, "displayDensity", "overlaySettings", "placeholder", "ngModel", "ngModelChange"], ["columnSelect", ""], [3, "value", 4, "ngFor", "ngForOf"], ["type", "box", 3, "displayDensity", "overlaySettings", "placeholder", "ngModel", "disabled", "ngModelChange"], ["conditionSelect", ""], ["type", "box", 3, "disabled", "displayDensity", 4, "ngIf"], ["mode", "dropdown", 3, "ngModel", "locale", "outlet", "ngModelChange", 4, "ngIf"], [1, "igx-filter-tree__inputs-actions"], ["igxButton", "icon", 3, "displayDensity", "disabled", "click"], ["igxButton", "icon", 3, "displayDensity", "click"], [3, "value"], [1, "igx-grid__filtering-dropdown-items"], [1, "igx-grid__filtering-dropdown-text"], ["type", "box", 3, "disabled", "displayDensity"], ["igxInput", "", 3, "type", "placeholder", "ngModel", "ngModelChange"], ["searchValueInput", ""], ["mode", "dropdown", 3, "ngModel", "locale", "outlet", "ngModelChange"], ["igxDatePickerTemplate", ""], ["type", "box", 3, "displayDensity"], ["dropDownTarget", ""], ["igxInput", "", "tabindex", "0", "autocomplete", "off", 3, "placeholder", "value", "readonly", "disabled", "keydown", "click"], [1, "igx-filter-tree__buttons"], ["addModeContainer", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "igx-filter-tree"], ["tabindex", "0", 1, "igx-filter-tree__line", 3, "ngClass", "keydown", "click"], [1, "igx-filter-tree__expression"], [4, "ngFor", "ngForOf"], ["currentGroupButtonsContainer", ""], ["igxButton", "outlined", 3, "displayDensity", "disabled", "click", 4, "ngIf"], ["type", "outline", 3, "displayDensity", "multiSelection", "values", "onSelect"], ["fontSet", "imx-icons", "name", "ungroup"], ["igxButton", "outlined", 1, "igx-filter-contextual-menu__delete-btn", 3, "displayDensity", "click"]], template: function IgxAdvancedFilteringDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxAdvancedFilteringDialogComponent_article_0_Template, 35, 24, "article", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1, 2);
        ɵngcc0.ɵɵlistener("pointerdown", function IgxAdvancedFilteringDialogComponent_Template_div_pointerdown_1_listener($event) { return ctx.onOutletPointerDown($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.grid);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.IgxOverlayOutletDirective, ɵngcc3.IgxDragDirective, ɵngcc1.NgClass, ɵngcc3.IgxDragHandleDirective, ɵngcc2.IgxToggleDirective, ɵngcc4.IgxButtonDirective, ɵngcc5.IgxIconComponent, ɵngcc6.IgxChipComponent, ɵngcc7.IgxPrefixDirective, ɵngcc8.IgxSuffixDirective, ɵngcc9.IgxSelectComponent, ɵngcc10.NgControlStatus, ɵngcc10.NgModel, ɵngcc1.NgForOf, ɵngcc11.IgxSelectItemComponent, ɵngcc12.IgxInputGroupComponent, ɵngcc10.DefaultValueAccessor, ɵngcc13.IgxInputDirective, ɵngcc14.IgxDatePickerComponent, ɵngcc15.IgxDatePickerTemplateDirective, ɵngcc1.NgTemplateOutlet, ɵngcc16.IgxButtonGroupComponent], pipes: [ɵngcc1.DatePipe], encapsulation: 2 });
IgxAdvancedFilteringDialogComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
IgxAdvancedFilteringDialogComponent.propDecorators = {
    columnSelect: [{ type: ViewChild, args: ['columnSelect', { read: IgxSelectComponent },] }],
    conditionSelect: [{ type: ViewChild, args: ['conditionSelect', { read: IgxSelectComponent },] }],
    searchValueInput: [{ type: ViewChild, args: ['searchValueInput', { read: ElementRef },] }],
    addRootAndGroupButton: [{ type: ViewChild, args: ['addRootAndGroupButton', { read: ElementRef },] }],
    addConditionButton: [{ type: ViewChild, args: ['addConditionButton', { read: ElementRef },] }],
    editingInputsContainer: [{ type: ViewChild, args: ['editingInputsContainer', { read: ElementRef },] }],
    addModeContainer: [{ type: ViewChild, args: ['addModeContainer', { read: ElementRef },] }],
    currentGroupButtonsContainer: [{ type: ViewChild, args: ['currentGroupButtonsContainer', { read: ElementRef },] }],
    contextMenuToggle: [{ type: ViewChild, args: [IgxToggleDirective,] }],
    chips: [{ type: ViewChildren, args: [IgxChipComponent,] }],
    expressionsContainer: [{ type: ViewChild, args: ['expressionsContainer',] }],
    overlayOutlet: [{ type: ViewChild, args: ['overlayOutlet', { read: IgxOverlayOutletDirective, static: true },] }],
    display: [{ type: HostBinding, args: ['style.display',] }],
    grid: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxAdvancedFilteringDialogComponent, [{
        type: Component,
        args: [{
                selector: 'igx-advanced-filtering-dialog',
                template: "<article\n    *ngIf=\"grid\"\n    class=\"igx-advanced-filter\"\n    igxDrag\n    [ghost]=\"false\"\n    [dragTolerance]=\"0\"\n    (dragStart)=\"dragStart($event)\"\n    (dragEnd)=\"dragEnd($event)\"\n    (dragMove)=\"onDragMove($event)\"\n    (keydown)=\"onKeyDown($event)\"\n    [ngClass]=\"{\n        'igx-advanced-filter--cosy': grid.displayDensity === 'cosy',\n        'igx-advanced-filter--compact': grid.displayDensity === 'compact',\n        'igx-advanced-filter--inline': inline\n    }\"\n>\n    <header class=\"igx-advanced-filter__header\" igxDragHandle>\n        <h4 class=\"igx-typography__h6\" style=\"pointer-events: none;\">\n            {{ grid.resourceStrings.igx_grid_advanced_filter_title }}\n        </h4>\n        <div class=\"igx-filter-legend\">\n            <div class=\"igx-filter-legend__item--and\">\n                <span>{{ grid.resourceStrings.igx_grid_advanced_filter_and_label }}</span>\n            </div>\n            <div class=\"igx-filter-legend__item--or\">\n                <span>{{ grid.resourceStrings.igx_grid_advanced_filter_or_label }}</span>\n            </div>\n        </div>\n    </header>\n\n    <article #expressionsContainer\n             class=\"igx-advanced-filter__main\"\n             (scroll)=\"onExpressionsScrolled()\">\n        <ng-container *ngIf=\"!rootGroup\">\n\n            <button #addRootAndGroupButton\n                igxButton=\"outlined\"\n                [displayDensity]=\"displayDensity\"\n                (click)=\"addAndGroup()\"\n            >\n                <igx-icon fontSet=\"material\">add</igx-icon>\n                <span>{{grid.resourceStrings.igx_grid_advanced_filter_and_group}}</span>\n            </button>\n\n            <button igxButton=\"outlined\" [displayDensity]=\"displayDensity\" (click)=\"addOrGroup()\">\n                <igx-icon fontSet=\"material\">add</igx-icon>\n                <span>{{grid.resourceStrings.igx_grid_advanced_filter_or_group}}</span>\n            </button>\n\n            <div class=\"igx-filter-empty\">\n                <h6 class=\"igx-filter-empty__title\">\n                    {{grid.resourceStrings.igx_grid_advanced_filter_initial_text}}\n                </h6>\n            </div>\n        </ng-container>\n\n        <ng-template #addExpressionsTemplate let-expressionItem let-afterExpression=\"afterExpression\">\n            <button #addConditionButton\n                    igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    [disabled]=\"editedExpression\"\n                    (click)=\"addCondition(expressionItem, afterExpression)\"\n            >\n                <igx-icon fontSet=\"material\">add</igx-icon>\n                <span>{{grid.resourceStrings.igx_grid_advanced_filter_add_condition}}</span>\n            </button>\n\n            <button igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    [disabled]=\"editedExpression\"\n                    (click)=\"addAndGroup(expressionItem, afterExpression)\">\n                <igx-icon fontSet=\"material\">add</igx-icon>\n                <span>{{grid.resourceStrings.igx_grid_advanced_filter_and_group}}</span>\n            </button>\n\n            <button igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    [disabled]=\"editedExpression\"\n                    (click)=\"addOrGroup(expressionItem, afterExpression)\">\n                <igx-icon fontSet=\"material\">add</igx-icon>\n                <span>{{grid.resourceStrings.igx_grid_advanced_filter_or_group}}</span>\n            </button>\n\n        </ng-template>\n\n        <ng-template #filterOperandTemplate let-expressionItem>\n            <div *ngIf=\"!expressionItem.inEditMode\"\n                class=\"igx-filter-tree__expression-item\"\n                (mouseenter)=\"expressionItem.hovered = true\"\n                (mouseleave)=\"expressionItem.hovered = false\"\n                >\n                <igx-chip [data]=\"expressionItem\"\n                          [displayDensity]=\"displayDensity === 'compact' ? 'cosy' : displayDensity\"\n                          [removable]=\"true\"\n                          [selected]=\"expressionItem.selected\"\n                          (keydown)=\"invokeClick($event)\"\n                          (click)=\"onChipClick(expressionItem)\"\n                          (dblclick)=\"onChipDblClick(expressionItem)\"\n                          (onRemove)=\"onChipRemove(expressionItem)\"\n                          (onSelectionDone)=\"onChipSelectionEnd()\"\n                    >\n                    <span igxPrefix class=\"igx-filter-tree__expression-column\">{{ expressionItem.columnHeader || expressionItem.expression.fieldName }}</span>\n                    <igx-prefix>\n                        <igx-icon fontSet=\"imx-icons\" [name]=\"expressionItem.expression.condition.iconName\">\n                    </igx-icon>\n                    </igx-prefix>\n                    <span class=\"igx-filter-tree__expression-condition\">\n                        {{ getConditionFriendlyName(expressionItem.expression.condition.name) }}\n                    </span>\n                    <span igxSuffix *ngIf=\"!expressionItem.expression.condition.isUnary\">\n                        {{ isDate(expressionItem.expression.searchVal) ? (expressionItem.expression.searchVal | date:getFormat(expressionItem.expression.fieldName):undefined:grid.locale) : expressionItem.expression.searchVal }}\n                    </span>\n                </igx-chip>\n                <div class=\"igx-filter-tree__expression-actions\"\n                *ngIf=\"(expressionItem.selected && selectedExpressions.length === 1) || expressionItem.hovered\">\n                    <igx-icon\n                        tabindex=\"0\"\n                        (keydown)=\"invokeClick($event)\"\n                        (click)=\"enterExpressionEdit(expressionItem)\">\n                        edit\n                    </igx-icon>\n                    <igx-icon\n                        tabindex=\"0\"\n                        (keydown)=\"invokeClick($event)\"\n                        (click)=\"enterExpressionAdd(expressionItem)\"\n                        *ngIf=\"!expressionItem.inAddMode && (expressionItem.parent !== currentGroup || expressionItem !== currentGroup.children[currentGroup.children.length - 1])\"\n                    >\n                        add\n                    </igx-icon>\n                </div>\n            </div>\n\n            <div *ngIf=\"expressionItem.inEditMode\"\n                #editingInputsContainer\n                class=\"igx-filter-tree__inputs\"\n            >\n                <igx-select #columnSelect\n                            type=\"box\"\n                            [displayDensity]=\"'compact'\"\n                            [overlaySettings]=\"columnSelectOverlaySettings\"\n                            [placeholder]=\"grid.resourceStrings.igx_grid_advanced_filter_column_placeholder\"\n                            [(ngModel)]=\"selectedColumn\">\n                    <igx-select-item *ngFor=\"let column of filterableColumns\" [value]=\"column\">\n                        {{column.header || column.field}}\n                    </igx-select-item>\n                </igx-select>\n\n                <igx-select #conditionSelect\n                            type=\"box\"\n                            [displayDensity]=\"'compact'\"\n                            [overlaySettings]=\"conditionSelectOverlaySettings\"\n                            [placeholder]=\"grid.resourceStrings.igx_grid_filter_condition_placeholder\"\n                            [(ngModel)]=\"selectedCondition\"\n                            [disabled]=\"!selectedColumn\">\n                    <igx-prefix *ngIf=\"selectedColumn && conditionSelect.value && selectedColumn.filters.condition(conditionSelect.value)\">\n                        <igx-icon fontSet=\"imx-icons\" [name]=\"selectedColumn.filters.condition(conditionSelect.value).iconName\">\n                        </igx-icon>\n                    </igx-prefix>\n                    <igx-select-item *ngFor=\"let condition of getConditionList()\" [value]=\"condition\">\n                        <div class=\"igx-grid__filtering-dropdown-items\">\n                            <igx-icon fontSet=\"imx-icons\"\n                                      [name]=\"selectedColumn.filters.condition(condition).iconName\">\n                            </igx-icon>\n                            <span class=\"igx-grid__filtering-dropdown-text\">{{getConditionFriendlyName(condition)}}</span>\n                        </div>\n                    </igx-select-item>\n                </igx-select>\n\n                <igx-input-group *ngIf=\"!selectedColumn || selectedColumn.dataType !== 'date'\"\n                                 type=\"box\"\n                                 [disabled]=\"!selectedColumn || !selectedCondition || (selectedColumn && selectedColumn.filters.condition(selectedCondition).isUnary)\"\n                                 [displayDensity]=\"'compact'\">\n                    <input #searchValueInput\n                           igxInput\n                           [type]=\"selectedColumn && selectedColumn.dataType === 'number' ? 'number' : 'text'\"\n                           [placeholder]=\"grid.resourceStrings.igx_grid_advanced_filter_value_placeholder\"\n                           [(ngModel)]=\"searchValue\"/>\n                </igx-input-group>\n\n                <igx-date-picker *ngIf=\"selectedColumn && selectedColumn.dataType === 'date'\"\n                                 mode=\"dropdown\"\n                                 [(ngModel)]=\"searchValue\"\n                                 [locale]=\"grid.locale\"\n                                 [outlet]=\"grid.outlet\">\n                    <ng-template igxDatePickerTemplate let-openDialog=\"openDialog\" let-value=\"value\">\n                        <igx-input-group #dropDownTarget type=\"box\" [displayDensity]=\"'compact'\">\n                            <input #searchValueInput\n                                    igxInput\n                                    tabindex=\"0\"\n                                    (keydown)=\"invokeClick($event)\"\n                                    (click)=\"openDialog(dropDownTarget.element.nativeElement)\"\n                                    [placeholder]=\"grid.resourceStrings.igx_grid_filter_row_date_placeholder\"\n                                    autocomplete=\"off\"\n                                    [value]=\"value | date:selectedColumn.pipeArgs.format:undefined:grid.locale\"\n                                    [readonly]=\"true\"\n                                    [disabled]=\"!selectedColumn || !selectedCondition || (selectedColumn && selectedColumn.filters.condition(selectedCondition).isUnary)\"/>\n                        </igx-input-group>\n                    </ng-template>\n                </igx-date-picker>\n\n                <div class=\"igx-filter-tree__inputs-actions\">\n                    <button igxButton=\"icon\"\n                            [displayDensity]=\"displayDensity\"\n                            [disabled]=\"!operandCanBeCommitted()\"\n                            (click)=\"commitOperandEdit()\">\n                        <igx-icon fontSet=\"material\">check</igx-icon>\n                    </button>\n                    <button igxButton=\"icon\"\n                            [displayDensity]=\"displayDensity\"\n                            (click)=\"cancelOperandEdit()\">\n                        <igx-icon fontSet=\"material\">close</igx-icon>\n                    </button>\n                </div>\n            </div>\n\n            <div *ngIf=\"expressionItem.inAddMode\"\n                #addModeContainer\n                class=\"igx-filter-tree__buttons\"\n            >\n                <ng-container *ngTemplateOutlet=\"addExpressionsTemplate; context: context(expressionItem.parent, expressionItem)\"></ng-container>\n                <button igxButton=\"icon\"\n                        [displayDensity]=\"displayDensity\"\n                        (click)=\"cancelOperandAdd()\">\n                    <igx-icon fontSet=\"material\">close</igx-icon>\n                </button>\n            </div>\n\n        </ng-template>\n\n        <ng-template #expressionTreeTemplate let-expressionItem>\n            <div class=\"igx-filter-tree\">\n                <div tabindex=\"0\"\n                     class=\"igx-filter-tree__line\"\n                     [ngClass]=\"{\n                         'igx-filter-tree__line--and': expressionItem.operator === 0,\n                         'igx-filter-tree__line--or': expressionItem.operator === 1,\n                         'igx-filter-tree__line--selected': expressionItem.selected\n                     }\"\n                     (keydown)=\"invokeClick($event)\"\n                     (click)=\"onGroupClick(expressionItem)\"\n                ></div>\n\n                <div class=\"igx-filter-tree__expression\">\n                    <ng-container *ngFor=\"let expr of expressionItem.children\">\n                        <ng-container *ngTemplateOutlet=\"isExpressionGroup(expr) ? expressionTreeTemplate : filterOperandTemplate; context: context(expr)\"></ng-container>\n                    </ng-container>\n                    <div *ngIf=\"currentGroup === expressionItem\"\n                        #currentGroupButtonsContainer\n                        class=\"igx-filter-tree__buttons\">\n                        <ng-container *ngTemplateOutlet=\"addExpressionsTemplate; context: context(expressionItem)\"></ng-container>\n                        <button igxButton=\"outlined\"\n                                *ngIf=\"expressionItem !== rootGroup\"\n                                [displayDensity]=\"displayDensity\"\n                                [disabled]=\"editedExpression || expressionItem.children.length < 2\"\n                                (click)=\"endGroup(expressionItem)\">\n                            <span>{{grid.resourceStrings.igx_grid_advanced_filter_end_group}}</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </ng-template>\n\n        <ng-container *ngIf=\"rootGroup\">\n            <ng-container *ngTemplateOutlet=\"expressionTreeTemplate; context: context(rootGroup)\"></ng-container>\n        </ng-container>\n\n        <div igxToggle\n            class=\"igx-filter-contextual-menu\"\n            (keydown)=\"onKeyDown($event)\"\n            (onClosed)=\"contextMenuClosed()\"\n            [ngClass]=\"{\n                'igx-filter-contextual-menu--cosy': displayDensity === 'cosy',\n                'igx-filter-contextual-menu--compact': displayDensity === 'compact'\n            }\"\n        >\n            <button igxButton=\"icon\"\n                    class=\"igx-filter-contextual-menu__close-btn\"\n                    (click)=\"clearSelection()\"\n            >\n                <igx-icon>close</igx-icon>\n            </button>\n\n            <ng-container *ngIf=\"contextualGroup\">\n                <igx-buttongroup [displayDensity]=\"displayDensity\"\n                                 [multiSelection]=\"false\"\n                                 [values]=\"filteringLogics\"\n                                 type=\"outline\"\n                                 (onSelect)=\"selectFilteringLogic($event)\">\n                </igx-buttongroup>\n\n                <button\n                    igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    [disabled]=\"!contextualGroup.parent\"\n                    (click)=\"ungroup()\"\n                >\n                    <igx-icon fontSet=\"imx-icons\" name=\"ungroup\"></igx-icon>\n                    <span>{{grid.resourceStrings.igx_grid_advanced_filter_ungroup}}</span>\n                </button>\n                <button\n                    igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    (click)=\"deleteGroup()\"\n                    class=\"igx-filter-contextual-menu__delete-btn\"\n                >\n                    <igx-icon>delete</igx-icon>\n                    <span>{{grid.resourceStrings.igx_grid_advanced_filter_delete}}</span>\n                </button>\n            </ng-container>\n            <ng-container *ngIf=\"!contextualGroup\">\n                <button\n                    igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    (click)=\"createAndGroup()\"\n                >\n                    {{grid.resourceStrings.igx_grid_advanced_filter_create_and_group}}\n                </button>\n                <button\n                    igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    (click)=\"createOrGroup()\"\n                >\n                    {{grid.resourceStrings.igx_grid_advanced_filter_create_or_group}}\n                </button>\n                <button\n                    igxButton=\"outlined\"\n                    [displayDensity]=\"displayDensity\"\n                    (click)=\"deleteFilters()\"\n                    class=\"igx-filter-contextual-menu__delete-btn\"\n                >\n                    {{grid.resourceStrings.igx_grid_advanced_filter_delete_filters}}\n                </button>\n            </ng-container>\n        </div>\n    </article>\n\n    <footer class=\"igx-excel-filter__secondary-footer\">\n        <button igxButton [displayDensity]=\"displayDensity\" (click)=\"onClearButtonClick()\">{{ grid.resourceStrings.igx_grid_excel_custom_dialog_clear }}</button>\n\n        <div>\n            <button igxButton [displayDensity]=\"displayDensity\" (click)=\"cancelChanges()\">{{ grid.resourceStrings.igx_grid_excel_cancel }}</button>\n            <button igxButton=\"raised\" [displayDensity]=\"displayDensity\" (click)=\"onApplyButtonClick()\">\n                {{ grid.resourceStrings.igx_grid_excel_apply }}\n            </button>\n        </div>\n    </footer>\n</article>\n<div #overlayOutlet\n     igxOverlayOutlet\n     class=\"igx-advanced-filter__outlet\"\n     (pointerdown)=\"onOutletPointerDown($event)\">\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { display: [{
            type: HostBinding,
            args: ['style.display']
        }], editingInputsContainer: [{
            type: ViewChild,
            args: ['editingInputsContainer', { read: ElementRef }]
        }], addModeContainer: [{
            type: ViewChild,
            args: ['addModeContainer', { read: ElementRef }]
        }], currentGroupButtonsContainer: [{
            type: ViewChild,
            args: ['currentGroupButtonsContainer', { read: ElementRef }]
        }], grid: [{
            type: Input
        }], columnSelect: [{
            type: ViewChild,
            args: ['columnSelect', { read: IgxSelectComponent }]
        }], conditionSelect: [{
            type: ViewChild,
            args: ['conditionSelect', { read: IgxSelectComponent }]
        }], searchValueInput: [{
            type: ViewChild,
            args: ['searchValueInput', { read: ElementRef }]
        }], addRootAndGroupButton: [{
            type: ViewChild,
            args: ['addRootAndGroupButton', { read: ElementRef }]
        }], addConditionButton: [{
            type: ViewChild,
            args: ['addConditionButton', { read: ElementRef }]
        }], contextMenuToggle: [{
            type: ViewChild,
            args: [IgxToggleDirective]
        }], chips: [{
            type: ViewChildren,
            args: [IgxChipComponent]
        }], expressionsContainer: [{
            type: ViewChild,
            args: ['expressionsContainer']
        }], overlayOutlet: [{
            type: ViewChild,
            args: ['overlayOutlet', { read: IgxOverlayOutletDirective, static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,