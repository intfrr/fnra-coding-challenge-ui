import { IgxGridCellComponent } from '../cell.component';
import { GridBaseAPIService } from '../api.service';
import { ChangeDetectorRef, ElementRef, ChangeDetectionStrategy, Component, NgZone } from '@angular/core';
import { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';
import { HammerGesturesManager } from '../../core/touch';
import { PlatformUtil } from '../../core/utils';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../selection/selection.service';
import * as ɵngcc2 from '../api.service';
import * as ɵngcc3 from '../../core/touch';
import * as ɵngcc4 from '../../core/utils';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '../../chips/chip.component';
import * as ɵngcc7 from '../../directives/text-highlight/text-highlight.directive';
import * as ɵngcc8 from '../../icon/icon.component';
import * as ɵngcc9 from '../../input-group/input-group.component';
import * as ɵngcc10 from '../../directives/input/input.directive';
import * as ɵngcc11 from '../../directives/focus/focus.directive';
import * as ɵngcc12 from '../../checkbox/checkbox.component';
import * as ɵngcc13 from '../../date-picker/date-picker.component';
import * as ɵngcc14 from '../common/pipes';

function IgxHierarchicalGridCellComponent_ng_template_0_igx_chip_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-chip", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", true)("displayDensity", "compact");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r10.grid.resourceStrings.igx_grid_pinned_row_indicator);
} }
function IgxHierarchicalGridCellComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridCellComponent_ng_template_0_igx_chip_0_Template, 2, 3, "igx-chip", 5);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.displayPinnedChip);
} }
function IgxHierarchicalGridCellComponent_ng_template_2_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵpipe(1, "columnFormatter");
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵpipe(3, "date");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "columnFormatter");
    ɵngcc0.ɵɵpipe(6, "number");
    ɵngcc0.ɵɵpipe(7, "date");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("cssClass", ctx_r11.highlightClass)("activeCssClass", ctx_r11.activeHighlightClass)("groupName", ctx_r11.gridID)("value", ctx_r11.formatter ? ɵngcc0.ɵɵpipeBind2(1, 9, ctx_r11.value, ctx_r11.formatter) : ctx_r11.column.dataType === "number" ? ɵngcc0.ɵɵpipeBind3(2, 12, ctx_r11.value, ctx_r11.column.pipeArgs.digitsInfo, ctx_r11.grid.locale) : ctx_r11.column.dataType === "date" ? ɵngcc0.ɵɵpipeBind4(3, 16, ctx_r11.value, ctx_r11.column.pipeArgs.format, ctx_r11.column.pipeArgs.timezone, ctx_r11.grid.locale) : ctx_r11.value)("row", ctx_r11.rowData)("column", ctx_r11.column.field)("containerClass", "igx-grid__td-text")("metadata", ctx_r11.searchMetadata);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r11.formatter ? ɵngcc0.ɵɵpipeBind2(5, 21, ctx_r11.value, ctx_r11.formatter) : ctx_r11.column.dataType === "number" ? ɵngcc0.ɵɵpipeBind3(6, 24, ctx_r11.value, ctx_r11.column.pipeArgs.digitsInfo, ctx_r11.grid.locale) : ctx_r11.column.dataType === "date" ? ɵngcc0.ɵɵpipeBind4(7, 28, ctx_r11.value, ctx_r11.column.pipeArgs.format, ctx_r11.column.pipeArgs.timezone, ctx_r11.grid.locale) : ctx_r11.value);
} }
const _c0 = function (a0, a1) { return { "igx-icon--success": a0, "igx-icon--error": a1 }; };
function IgxHierarchicalGridCellComponent_ng_template_2_igx_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-icon", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx_r12.value, !ctx_r12.value));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r12.value ? "check" : "close");
} }
function IgxHierarchicalGridCellComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridCellComponent_ng_template_2_div_0_Template, 8, 33, "div", 7);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridCellComponent_ng_template_2_igx_icon_1_Template, 2, 5, "igx-icon", 8);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.column.dataType !== "boolean");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.column.dataType === "boolean");
} }
function IgxHierarchicalGridCellComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵpipe(1, "columnFormatter");
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵpipe(3, "date");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("cssClass", ctx_r5.highlightClass)("activeCssClass", ctx_r5.activeHighlightClass)("groupName", ctx_r5.gridID)("value", ctx_r5.formatter ? ɵngcc0.ɵɵpipeBind2(1, 9, ctx_r5.value, ctx_r5.formatter) : ctx_r5.column.dataType === "number" ? ɵngcc0.ɵɵpipeBind3(2, 12, ctx_r5.value, ctx_r5.column.pipeArgs.digitsInfo, ctx_r5.grid.locale) : ctx_r5.column.dataType === "date" ? ɵngcc0.ɵɵpipeBind4(3, 16, ctx_r5.value, ctx_r5.column.pipeArgs.format, ctx_r5.column.pipeArgs.timezone, ctx_r5.grid.locale) : ctx_r5.value)("row", ctx_r5.rowData)("column", ctx_r5.column.field)("containerClass", "igx-grid__td-text")("metadata", ctx_r5.searchMetadata);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(!ctx_r5.isEmptyAddRowCell ? ctx_r5.value : ctx_r5.column.header || ctx_r5.column.field);
} }
function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "igx-input-group", 12);
    ɵngcc0.ɵɵelementStart(2, "input", 13);
    ɵngcc0.ɵɵlistener("input", function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_0_Template_input_input_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.editValue = $event.target.value; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("value", ctx_r15.editValue)("igxFocus", true);
} }
function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "igx-input-group", 12);
    ɵngcc0.ɵɵelementStart(2, "input", 14);
    ɵngcc0.ɵɵlistener("input", function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_1_Template_input_input_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.editValue = $event.target.value; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("value", ctx_r16.editValue)("igxFocus", true);
} }
function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "igx-checkbox", 15);
    ɵngcc0.ɵɵlistener("change", function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_2_Template_igx_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.editValue = $event.checked; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r17.editValue)("checked", ctx_r17.editValue)("igxFocus", true)("disableRipple", true);
} }
function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "igx-date-picker", 16);
    ɵngcc0.ɵɵlistener("valueChange", function IgxHierarchicalGridCellComponent_ng_template_6_ng_container_3_Template_igx_date_picker_valueChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.editValue = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("outlet", ctx_r18.grid.outlet)("locale", ctx_r18.grid.locale)("value", ctx_r18.editValue)("igxFocus", true)("labelVisibility", false);
} }
function IgxHierarchicalGridCellComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridCellComponent_ng_template_6_ng_container_0_Template, 3, 2, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridCellComponent_ng_template_6_ng_container_1_Template, 3, 2, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(2, IgxHierarchicalGridCellComponent_ng_template_6_ng_container_2_Template, 2, 4, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(3, IgxHierarchicalGridCellComponent_ng_template_6_ng_container_3_Template, 2, 7, "ng-container", 11);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.column.dataType === "string");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.column.dataType === "number");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.column.dataType === "boolean");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.column.dataType === "date");
} }
function IgxHierarchicalGridCellComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridCellComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
export class IgxHierarchicalGridCellComponent extends IgxGridCellComponent {
    constructor(selectionService, crudService, gridAPI, cdr, helement, zone, touchManager, platformUtil) {
        super(selectionService, crudService, gridAPI, cdr, helement, zone, touchManager, platformUtil);
        this.selectionService = selectionService;
        this.crudService = crudService;
        this.gridAPI = gridAPI;
        this.cdr = cdr;
        this.helement = helement;
        this.zone = zone;
        this.platformUtil = platformUtil;
    }
    ngOnInit() {
        super.ngOnInit();
        this._rootGrid = this._getRootGrid();
    }
    _getRootGrid() {
        let currGrid = this.grid;
        while (currGrid.parent) {
            currGrid = currGrid.parent;
        }
        return currGrid;
    }
    // TODO: Extend the new selection service to avoid complete traversal
    _clearAllHighlights() {
        [this._rootGrid, ...this._rootGrid.getChildGrids(true)].forEach(grid => {
            if (grid !== this.grid && grid.navigation.activeNode) {
                grid.navigation.clearActivation();
                grid.selectionService.initKeyboardState();
                grid.selectionService.clear();
            }
            grid.selectionService.activeElement = null;
            grid.nativeElement.classList.remove('igx-grid__tr--highlighted');
            grid.highlightedRowID = null;
            grid.cdr.markForCheck();
        });
    }
    /**
     * @hidden
     * @internal
     */
    activate(event) {
        this._clearAllHighlights();
        const currentElement = this.grid.nativeElement;
        let parentGrid = this.grid;
        let childGrid;
        // add highligh to the current grid
        if (this._rootGrid.id !== currentElement.id) {
            currentElement.classList.add('igx-grid__tr--highlighted');
        }
        // add highligh to the current grid
        while (this._rootGrid.id !== parentGrid.id) {
            childGrid = parentGrid;
            parentGrid = parentGrid.parent;
            const parentRowID = parentGrid.hgridAPI.getParentRowId(childGrid);
            parentGrid.highlightedRowID = parentRowID;
        }
        this.grid.navigation.activeNode.gridID = this.gridID;
        super.activate(event);
    }
}
IgxHierarchicalGridCellComponent.ɵfac = function IgxHierarchicalGridCellComponent_Factory(t) { return new (t || IgxHierarchicalGridCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IgxGridSelectionService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IgxGridCRUDService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.GridBaseAPIService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.HammerGesturesManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.PlatformUtil)); };
IgxHierarchicalGridCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxHierarchicalGridCellComponent, selectors: [["igx-hierarchical-grid-cell"]], features: [ɵngcc0.ɵɵProvidersFeature([HammerGesturesManager]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 4, consts: [["defaultPinnedIndicator", ""], ["defaultCell", ""], ["addRowCell", ""], ["inlineEditor", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "igx-grid__td--pinned-chip", 3, "disabled", "displayDensity", 4, "ngIf"], [1, "igx-grid__td--pinned-chip", 3, "disabled", "displayDensity"], ["igxTextHighlight", "", "class", "igx-grid__td-text", "style", "pointer-events: none;", 3, "cssClass", "activeCssClass", "groupName", "value", "row", "column", "containerClass", "metadata", 4, "ngIf"], [3, "ngClass", 4, "ngIf"], ["igxTextHighlight", "", 1, "igx-grid__td-text", 2, "pointer-events", "none", 3, "cssClass", "activeCssClass", "groupName", "value", "row", "column", "containerClass", "metadata"], [3, "ngClass"], [4, "ngIf"], ["displayDensity", "compact"], ["igxInput", "", 3, "value", "igxFocus", "input"], ["igxInput", "", "type", "number", 3, "value", "igxFocus", "input"], [3, "value", "checked", "igxFocus", "disableRipple", "change"], ["mode", "dropdown", 3, "outlet", "locale", "value", "igxFocus", "labelVisibility", "valueChange"]], template: function IgxHierarchicalGridCellComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridCellComponent_ng_template_0_Template, 1, 1, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, IgxHierarchicalGridCellComponent_ng_template_2_Template, 2, 2, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, IgxHierarchicalGridCellComponent_ng_template_4_Template, 5, 21, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, IgxHierarchicalGridCellComponent_ng_template_6_Template, 4, 4, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, IgxHierarchicalGridCellComponent_ng_container_8_Template, 1, 0, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(9, IgxHierarchicalGridCellComponent_ng_container_9_Template, 1, 0, "ng-container", 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.pinnedIndicatorTemplate)("ngTemplateOutletContext", ctx.context);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.context);
    } }, directives: [ɵngcc5.NgTemplateOutlet, ɵngcc5.NgIf, ɵngcc6.IgxChipComponent, ɵngcc7.IgxTextHighlightDirective, ɵngcc8.IgxIconComponent, ɵngcc5.NgClass, ɵngcc9.IgxInputGroupComponent, ɵngcc10.IgxInputDirective, ɵngcc11.IgxFocusDirective, ɵngcc12.IgxCheckboxComponent, ɵngcc13.IgxDatePickerComponent], pipes: [ɵngcc14.IgxColumnFormatterPipe, ɵngcc5.DecimalPipe, ɵngcc5.DatePipe], encapsulation: 2, changeDetection: 0 });
IgxHierarchicalGridCellComponent.ctorParameters = () => [
    { type: IgxGridSelectionService },
    { type: IgxGridCRUDService },
    { type: GridBaseAPIService },
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone },
    { type: HammerGesturesManager },
    { type: PlatformUtil }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxHierarchicalGridCellComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'igx-hierarchical-grid-cell',
                template: "<ng-template #defaultPinnedIndicator>\n    <igx-chip\n        *ngIf=\"displayPinnedChip\"\n        class=\"igx-grid__td--pinned-chip\"\n        [disabled]=\"true\"\n        [displayDensity]=\"'compact'\"\n        >{{ grid.resourceStrings.igx_grid_pinned_row_indicator }}</igx-chip\n    >\n</ng-template>\n<ng-template #defaultCell>\n    <div *ngIf=\"column.dataType !== 'boolean'\"\n        igxTextHighlight\n        class=\"igx-grid__td-text\"\n        style=\"pointer-events: none;\"\n        [cssClass]=\"highlightClass\"\n        [activeCssClass]=\"activeHighlightClass\"\n        [groupName]=\"gridID\"\n        [value]=\"\n            formatter\n                ? (value | columnFormatter: formatter)\n                : column.dataType === 'number'\n                ? (value | number:column.pipeArgs.digitsInfo:grid.locale)\n                : column.dataType === 'date'\n                ? (value | date:column.pipeArgs.format:column.pipeArgs.timezone:grid.locale)\n                : value\n        \"\n        [row]=\"rowData\"\n        [column]=\"this.column.field\"\n        [containerClass]=\"'igx-grid__td-text'\"\n        [metadata]=\"searchMetadata\"\n    >{{\n            formatter\n                ? (value | columnFormatter: formatter)\n                : column.dataType === \"number\"\n                ? (value | number:column.pipeArgs.digitsInfo:grid.locale)\n                : column.dataType === \"date\"\n                ? (value | date:column.pipeArgs.format:column.pipeArgs.timezone:grid.locale)\n                : value\n        }}</div>\n    <igx-icon\n        *ngIf=\"column.dataType === 'boolean'\"\n        [ngClass]=\"{ 'igx-icon--success': value, 'igx-icon--error': !value }\"\n        >{{ value ? \"check\" : \"close\" }}</igx-icon\n    >\n</ng-template>\n<ng-template #addRowCell let-cell=\"cell\">\n    <div igxTextHighlight class=\"igx-grid__td-text\" style=\"pointer-events: none\"\n    [cssClass]=\"highlightClass\"\n    [activeCssClass]=\"activeHighlightClass\"\n    [groupName]=\"gridID\"\n    [value]=\"formatter ? (value | columnFormatter:formatter) : column.dataType === 'number' ? (value | number:column.pipeArgs.digitsInfo:grid.locale) : column.dataType === 'date' ? (value | date:column.pipeArgs.format:column.pipeArgs.timezone:grid.locale) : value\"\n    [row]=\"rowData\"\n    [column]=\"this.column.field\"\n    [containerClass]=\"'igx-grid__td-text'\"\n    [metadata]=\"searchMetadata\">{{\n        !isEmptyAddRowCell ? value : (column.header || column.field)\n    }}</div>\n</ng-template>\n<ng-template #inlineEditor let-cell=\"cell\">\n    <ng-container *ngIf=\"column.dataType === 'string'\">\n        <igx-input-group displayDensity=\"compact\">\n            <input\n                igxInput\n                [value]=\"editValue\"\n                (input)=\"editValue = $event.target.value\"\n                [igxFocus]=\"true\"\n            />\n        </igx-input-group>\n    </ng-container>\n    <ng-container *ngIf=\"column.dataType === 'number'\">\n        <igx-input-group displayDensity=\"compact\">\n            <input\n                igxInput\n                [value]=\"editValue\"\n                (input)=\"editValue = $event.target.value\"\n                [igxFocus]=\"true\"\n                type=\"number\"\n            />\n        </igx-input-group>\n    </ng-container>\n    <ng-container *ngIf=\"column.dataType === 'boolean'\">\n        <igx-checkbox\n            (change)=\"editValue = $event.checked\"\n            [value]=\"editValue\"\n            [checked]=\"editValue\"\n            [igxFocus]=\"true\"\n            [disableRipple]=\"true\"\n        ></igx-checkbox>\n    </ng-container>\n    <ng-container *ngIf=\"column.dataType === 'date'\">\n        <igx-date-picker\n            [style.width.%]=\"100\"\n            [outlet]=\"grid.outlet\"\n            mode=\"dropdown\"\n            [locale]=\"grid.locale\"\n            [(value)]=\"editValue\"\n            [igxFocus]=\"true\"\n            [labelVisibility]=\"false\"\n        >\n        </igx-date-picker>\n    </ng-container>\n</ng-template>\n<ng-container *ngTemplateOutlet=\"pinnedIndicatorTemplate; context: context\">\n</ng-container>\n<ng-container *ngTemplateOutlet=\"template; context: context\"></ng-container>\n",
                providers: [HammerGesturesManager]
            }]
    }], function () { return [{ type: ɵngcc1.IgxGridSelectionService }, { type: ɵngcc1.IgxGridCRUDService }, { type: ɵngcc2.GridBaseAPIService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.HammerGesturesManager }, { type: ɵngcc4.PlatformUtil }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,