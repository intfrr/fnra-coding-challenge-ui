import { ChangeDetectionStrategy, Component, HostBinding, Input, forwardRef, TemplateRef, ViewChild, ViewChildren, ContentChildren, ElementRef } from '@angular/core';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { GridBaseAPIService } from '../api.service';
import { IgxHierarchicalGridAPIService } from './hierarchical-grid-api.service';
import { IgxRowIslandComponent } from './row-island.component';
import { IgxChildGridRowComponent } from './child-grid-row.component';
import { IgxFilteringService } from '../filtering/grid-filtering.service';
import { IgxHierarchicalGridNavigationService } from './hierarchical-grid-navigation.service';
import { IgxGridSummaryService } from '../summaries/grid-summary.service';
import { IgxHierarchicalGridBaseDirective } from './hierarchical-grid-base.directive';
import { takeUntil } from 'rxjs/operators';
import { IgxTemplateOutletDirective } from '../../directives/template-outlet/template_outlet.directive';
import { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';
import { IgxTransactionService } from '../../services/public_api';
import { IgxForOfSyncService, IgxForOfScrollSyncService } from '../../directives/for-of/for_of.sync.service';
import { IgxRowIslandAPIService } from './row-island-api.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../directives/for-of/for_of.directive';
import * as ɵngcc3 from '../grid.common';
import * as ɵngcc4 from '../selection/drag-select.directive';
import * as ɵngcc5 from '../../directives/toggle/toggle.directive';
import * as ɵngcc6 from '../../snackbar/snackbar.component';
import * as ɵngcc7 from '../selection/row-selectors';
import * as ɵngcc8 from '../toolbar/grid-toolbar.component';
import * as ɵngcc9 from '../moving/moving.drop.directive';
import * as ɵngcc10 from '../headers/grid-header-group.component';
import * as ɵngcc11 from '../filtering/base/grid-filtering-row.component';
import * as ɵngcc12 from '../../progressbar/progressbar.component';
import * as ɵngcc13 from '../../directives/template-outlet/template_outlet.directive';
import * as ɵngcc14 from './hierarchical-row.component';
import * as ɵngcc15 from './child-grid-row.component';
import * as ɵngcc16 from '../summaries/summary-row.component';
import * as ɵngcc17 from '../../paginator/paginator.component';
import * as ɵngcc18 from '../../directives/button/button.directive';
import * as ɵngcc19 from '../../directives/ripple/ripple.directive';
import * as ɵngcc20 from '../../icon/icon.component';
import * as ɵngcc21 from '../grid.rowEdit.directive';
import * as ɵngcc22 from '../../checkbox/checkbox.component';
import * as ɵngcc23 from '../resizing/resizer.component';
import * as ɵngcc24 from '../common/pipes';
import * as ɵngcc25 from './hierarchical-grid.pipes';
import * as ɵngcc26 from '../grid/grid.pipes';
import * as ɵngcc27 from '../summaries/grid-root-summary.pipe';

const _c0 = ["hierarchical_record_template"];
const _c1 = ["child_record_template"];
const _c2 = ["headerHierarchyExpander"];
function IgxHierarchicalGridComponent_igx_grid_toolbar_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-toolbar", 69, 70);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("max-width", ctx_r0.outerWidth, "px")("flex-basis", ctx_r0.outerWidth, "px");
    ɵngcc0.ɵɵproperty("gridID", ctx_r0.id)("displayDensity", ctx_r0.displayDensity);
} }
function IgxHierarchicalGridComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 71);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r2.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 72);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("left", ctx_r3.pinnedWidth, "px");
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r3.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_container_10_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c3 = function (a0) { return { "igx-grid__drag-indicator--header": a0 }; };
function IgxHierarchicalGridComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    const _r78 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 73, 74);
    ɵngcc0.ɵɵlistener("pointerdown", function IgxHierarchicalGridComponent_ng_container_10_Template_div_pointerdown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r78); return $event.preventDefault(); });
    ɵngcc0.ɵɵelementStart(3, "div", 75);
    ɵngcc0.ɵɵtemplate(4, IgxHierarchicalGridComponent_ng_container_10_ng_container_4_Template, 1, 0, "ng-container", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    const _r67 = ɵngcc0.ɵɵreference(101);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c3, !ctx_r6.isRowSelectable));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.dragIndicatorIconTemplate ? ctx_r6.dragIndicatorIconTemplate : _r67);
} }
function IgxHierarchicalGridComponent_ng_container_11_3_ng_template_0_Template(rf, ctx) { }
function IgxHierarchicalGridComponent_ng_container_11_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridComponent_ng_container_11_3_ng_template_0_Template, 0, 0, "ng-template", null, 78, ɵngcc0.ɵɵtemplateRefExtractor);
} }
const _c4 = function (a0) { return { "igx-grid__cbx-selection--push": a0 }; };
const _c5 = function (a0, a1, a2, a3) { return { selectedCount: a0, totalCount: a1, selectAll: a2, deselectAll: a3 }; };
const _c6 = function (a0) { return { $implicit: a0 }; };
function IgxHierarchicalGridComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    const _r84 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 76, 77);
    ɵngcc0.ɵɵlistener("click", function IgxHierarchicalGridComponent_ng_container_11_Template_div_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r84); const ctx_r83 = ɵngcc0.ɵɵnextContext(); return ctx_r83.onHeaderSelectorClick($event); })("pointerdown", function IgxHierarchicalGridComponent_ng_container_11_Template_div_pointerdown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r84); return $event.preventDefault(); });
    ɵngcc0.ɵɵtemplate(3, IgxHierarchicalGridComponent_ng_container_11_3_Template, 2, 0, undefined, 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    const _r69 = ɵngcc0.ɵɵreference(103);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c4, ctx_r7.filteringService.isFilterRowVisible));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r7.headSelectorTemplate ? ctx_r7.headSelectorTemplate : _r69)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(10, _c6, ɵngcc0.ɵɵpureFunction4(5, _c5, ctx_r7.selectionService.filteredSelectedRowIds.length, ctx_r7.totalRowsCountAfterFilter, ctx_r7.selectAllRows.bind(ctx_r7), ctx_r7.deselectAllRows.bind(ctx_r7))));
} }
function IgxHierarchicalGridComponent_ng_container_12_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-header-group", 80);
} if (rf & 2) {
    const col_r87 = ctx.$implicit;
    const ctx_r86 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("min-width", ctx_r86.getHeaderGroupWidth(col_r87))("flex-basis", ctx_r86.getHeaderGroupWidth(col_r87));
    ɵngcc0.ɵɵproperty("column", col_r87)("gridID", ctx_r86.id);
} }
function IgxHierarchicalGridComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_container_12_ng_template_1_Template, 1, 6, "ng-template", 79);
    ɵngcc0.ɵɵpipe(2, "igxTopLevel");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r8.pinnedColumns));
} }
function IgxHierarchicalGridComponent_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-header-group", 80);
} if (rf & 2) {
    const col_r88 = ctx.$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("min-width", ctx_r10.getHeaderGroupWidth(col_r88))("flex-basis", ctx_r10.getHeaderGroupWidth(col_r88));
    ɵngcc0.ɵɵproperty("column", col_r88)("gridID", ctx_r10.id);
} }
function IgxHierarchicalGridComponent_ng_container_16_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-header-group", 80);
} if (rf & 2) {
    const col_r90 = ctx.$implicit;
    const ctx_r89 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("min-width", ctx_r89.getHeaderGroupWidth(col_r90))("flex-basis", ctx_r89.getHeaderGroupWidth(col_r90))("left", col_r90.rightPinnedOffset);
    ɵngcc0.ɵɵproperty("column", col_r90)("gridID", ctx_r89.id);
} }
function IgxHierarchicalGridComponent_ng_container_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_container_16_ng_template_1_Template, 1, 8, "ng-template", 79);
    ɵngcc0.ɵɵpipe(2, "igxTopLevel");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r11.pinnedColumns));
} }
function IgxHierarchicalGridComponent_igx_grid_filtering_row_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-filtering-row", 81, 82);
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", ctx_r12.calcWidth, "px");
    ɵngcc0.ɵɵproperty("column", ctx_r12.filteringService.filteredColumn);
} }
function IgxHierarchicalGridComponent_igx_circular_bar_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-circular-bar", 83);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("indeterminate", true);
} }
function IgxHierarchicalGridComponent_span_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 84);
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r15.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_span_26_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 71);
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r17.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_span_27_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 72);
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("left", ctx_r18.pinnedWidth, "px");
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r18.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_ng_template_28_ng_container_0_div_1_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_template_28_ng_container_0_div_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_template_28_ng_container_0_div_1_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const rowData_r97 = ctx.$implicit;
    const rowIndex_r98 = ctx.index;
    const ctx_r96 = ɵngcc0.ɵɵnextContext(4);
    const _r26 = ɵngcc0.ɵɵreference(44);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r26)("ngTemplateOutletContext", ctx_r96.getContext(rowData_r97, rowIndex_r98, true));
} }
const _c7 = function (a0, a1) { return { "igx-grid__tr--pinned-bottom": a0, "igx-grid__tr--pinned-top": a1 }; };
function IgxHierarchicalGridComponent_ng_template_28_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 86, 87);
    ɵngcc0.ɵɵtemplate(2, IgxHierarchicalGridComponent_ng_template_28_ng_container_0_div_1_ng_container_2_Template, 2, 2, "ng-container", 88);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pinnedData_r93 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r94 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("width", ctx_r94.calcWidth, "px");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c7, !ctx_r94.isRowPinningToTop, ctx_r94.isRowPinningToTop));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", pinnedData_r93);
} }
function IgxHierarchicalGridComponent_ng_template_28_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_template_28_ng_container_0_div_1_Template, 3, 7, "div", 85);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const pinnedData_r93 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", pinnedData_r93.length > 0);
} }
const _c8 = function (a0, a1, a2, a3, a4, a5, a6) { return [a0, a1, a2, a3, a4, a5, a6, true]; };
const _c9 = function (a0, a1, a2, a3, a4) { return [a0, a1, a2, a3, a4, true]; };
function IgxHierarchicalGridComponent_ng_template_28_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridComponent_ng_template_28_ng_container_0_Template, 2, 1, "ng-container", 10);
    ɵngcc0.ɵɵpipe(1, "gridAddRow");
    ɵngcc0.ɵɵpipe(2, "gridSort");
    ɵngcc0.ɵɵpipe(3, "gridFiltering");
    ɵngcc0.ɵɵpipe(4, "gridRowPinning");
    ɵngcc0.ɵɵpipe(5, "visibleColumns");
    ɵngcc0.ɵɵpipe(6, "gridTransaction");
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(1, 1, ɵngcc0.ɵɵpipeBindV(2, 5, ɵngcc0.ɵɵpureFunction5(41, _c9, ɵngcc0.ɵɵpipeBindV(3, 12, ɵngcc0.ɵɵpureFunction7(33, _c8, ɵngcc0.ɵɵpipeBind4(4, 21, ɵngcc0.ɵɵpipeBind2(5, 26, ɵngcc0.ɵɵpipeBind3(6, 29, ctx_r20.data, ctx_r20.id, ctx_r20.pipeTrigger), ctx_r20.hasVisibleColumns), ctx_r20.id, true, ctx_r20.pipeTrigger), ctx_r20.filteringExpressionsTree, ctx_r20.filterStrategy, ctx_r20.advancedFilteringExpressionsTree, ctx_r20.id, ctx_r20.pipeTrigger, ctx_r20.filteringPipeTrigger)), ctx_r20.sortingExpressions, ctx_r20.sortStrategy, ctx_r20.id, ctx_r20.pipeTrigger)), true, ctx_r20.pipeTrigger));
} }
function IgxHierarchicalGridComponent_ng_container_30_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_template_31_ng_template_0_Template(rf, ctx) { }
function IgxHierarchicalGridComponent_ng_template_31_Template(rf, ctx) { if (rf & 1) {
    const _r105 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridComponent_ng_template_31_ng_template_0_Template, 0, 0, "ng-template", 89);
    ɵngcc0.ɵɵlistener("onViewCreated", function IgxHierarchicalGridComponent_ng_template_31_Template_ng_template_onViewCreated_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r105); const ctx_r104 = ɵngcc0.ɵɵnextContext(); return ctx_r104.viewCreatedHandler($event); })("onViewMoved", function IgxHierarchicalGridComponent_ng_template_31_Template_ng_template_onViewMoved_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r105); const ctx_r106 = ɵngcc0.ɵɵnextContext(); return ctx_r106.viewMovedHandler($event); })("onCachedViewLoaded", function IgxHierarchicalGridComponent_ng_template_31_Template_ng_template_onCachedViewLoaded_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r105); const ctx_r107 = ɵngcc0.ɵɵnextContext(); return ctx_r107.cachedViewLoaded($event); });
} if (rf & 2) {
    const rowData_r101 = ctx.$implicit;
    const rowIndex_r102 = ctx.index;
    const ctx_r23 = ɵngcc0.ɵɵnextContext();
    const _r24 = ɵngcc0.ɵɵreference(42);
    const _r28 = ɵngcc0.ɵɵreference(46);
    ɵngcc0.ɵɵproperty("igxTemplateOutlet", ctx_r23.isHierarchicalRecord(rowData_r101) ? _r24 : ctx_r23.isChildGridRecord(rowData_r101) && ctx_r23.isExpanded(rowData_r101) ? _r28 : _r24)("igxTemplateOutletContext", ctx_r23.getContext(rowData_r101, rowIndex_r102, false));
} }
function IgxHierarchicalGridComponent_ng_template_41_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-hierarchical-grid-row", 90, 91);
} if (rf & 2) {
    const rowIndex_r108 = ctx.index;
    const disabledRow_r109 = ctx.disabled;
    const rowData_r110 = ctx.$implicit;
    const isAddRow_r111 = ctx.addRow;
    const ctx_r25 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("gridID", ctx_r25.id)("index", rowIndex_r108)("disabled", disabledRow_r109)("rowData", rowData_r110)("addRow", isAddRow_r111);
} }
function IgxHierarchicalGridComponent_ng_template_43_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-hierarchical-grid-row", 92, 93);
} if (rf & 2) {
    const rowIndex_r113 = ctx.index;
    const rowData_r114 = ctx.$implicit;
    const isAddRow_r115 = ctx.addRow;
    const ctx_r27 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("gridID", ctx_r27.id)("index", rowIndex_r113)("rowData", rowData_r114)("addRow", isAddRow_r115);
} }
function IgxHierarchicalGridComponent_ng_template_45_igx_child_grid_row_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-child-grid-row", 96, 91);
} if (rf & 2) {
    const layout_r121 = ctx.$implicit;
    const ctx_r123 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r118 = ctx_r123.index;
    const rowData_r119 = ctx_r123.$implicit;
    const ctx_r120 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("parentGridID", ctx_r120.id)("index", rowIndex_r118)("rowData", rowData_r119)("layout", layout_r121);
} }
const _c10 = function (a1) { return { "igx-grid__tr-container": true, "igx-grid__tr--highlighted": a1 }; };
function IgxHierarchicalGridComponent_ng_template_45_Template(rf, ctx) { if (rf & 1) {
    const _r125 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 94);
    ɵngcc0.ɵɵlistener("scroll", function IgxHierarchicalGridComponent_ng_template_45_Template_div_scroll_0_listener() { ɵngcc0.ɵɵrestoreView(_r125); const ctx_r124 = ɵngcc0.ɵɵnextContext(); return ctx_r124.onContainerScroll(); });
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_template_45_igx_child_grid_row_1_Template, 2, 4, "igx-child-grid-row", 95);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r118 = ctx.index;
    const rowData_r119 = ctx.$implicit;
    const ctx_r29 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c10, ctx_r29.isRowHighlighted(rowData_r119)));
    ɵngcc0.ɵɵattribute("data-rowindex", rowIndex_r118);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r29.childLayoutList);
} }
function IgxHierarchicalGridComponent_ng_container_47_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_container_48_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_span_49_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 84);
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r32.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_igc_trial_watermark_52_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igc-trial-watermark");
} }
function IgxHierarchicalGridComponent_span_53_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 84);
} if (rf & 2) {
    const ctx_r35 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("igxColumnMovingDrop", ctx_r35.headerContainer);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxHierarchicalGridComponent_ng_template_57_Template(rf, ctx) { }
function IgxHierarchicalGridComponent_igx_grid_summary_row_66_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-summary-row", 97, 98);
    ɵngcc0.ɵɵpipe(2, "igxGridSummaryDataPipe");
} if (rf & 2) {
    const ctx_r40 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", ctx_r40.calcWidth, "px")("height", ctx_r40.summariesHeight, "px");
    ɵngcc0.ɵɵproperty("gridID", ctx_r40.id)("summaries", ɵngcc0.ɵɵpipeBind2(2, 7, ctx_r40.id, ctx_r40.summaryService.retriggerRootPipe))("index", ctx_r40.dataView.length);
} }
function IgxHierarchicalGridComponent_ng_template_72_Template(rf, ctx) { }
function IgxHierarchicalGridComponent_ng_container_78_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_container_78_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_container_78_ng_container_1_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r45 = ɵngcc0.ɵɵnextContext();
    const _r46 = ɵngcc0.ɵɵreference(80);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r45.paginationTemplate ? ctx_r45.paginationTemplate : _r46)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r45));
} }
function IgxHierarchicalGridComponent_ng_template_79_Template(rf, ctx) { if (rf & 1) {
    const _r129 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "igx-paginator", 99);
    ɵngcc0.ɵɵlistener("pageChange", function IgxHierarchicalGridComponent_ng_template_79_Template_igx_paginator_pageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r129); const ctx_r128 = ɵngcc0.ɵɵnextContext(); return ctx_r128.page = $event; })("perPageChange", function IgxHierarchicalGridComponent_ng_template_79_Template_igx_paginator_perPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r129); const ctx_r130 = ɵngcc0.ɵɵnextContext(); return ctx_r130.perPage = $event; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r47 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("overlaySettings", ctx_r47.paginatorSettings)("displayDensity", ctx_r47.displayDensity)("page", ctx_r47.page)("totalRecords", ctx_r47.totalRecords)("perPage", ctx_r47.perPage);
} }
function IgxHierarchicalGridComponent_ng_template_81_span_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_template_81_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_template_81_span_3_ng_container_1_Template, 1, 0, "ng-container", 22);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r131 = ɵngcc0.ɵɵnextContext(2);
    const _r52 = ɵngcc0.ɵɵreference(86);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r131.addRowEmptyTemplate || _r52);
} }
function IgxHierarchicalGridComponent_ng_template_81_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 100);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, IgxHierarchicalGridComponent_ng_template_81_span_3_Template, 2, 1, "span", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r49 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r49.emptyFilteredGridMessage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r49.showAddButton);
} }
function IgxHierarchicalGridComponent_ng_template_83_span_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_template_83_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, IgxHierarchicalGridComponent_ng_template_83_span_3_ng_container_1_Template, 1, 0, "ng-container", 22);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r133 = ɵngcc0.ɵɵnextContext(2);
    const _r52 = ɵngcc0.ɵɵreference(86);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r133.addRowEmptyTemplate || _r52);
} }
function IgxHierarchicalGridComponent_ng_template_83_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 100);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, IgxHierarchicalGridComponent_ng_template_83_span_3_Template, 2, 1, "span", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r51 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r51.emptyGridMessage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r51.showAddButton);
} }
function IgxHierarchicalGridComponent_ng_template_85_Template(rf, ctx) { if (rf & 1) {
    const _r136 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 101);
    ɵngcc0.ɵɵlistener("click", function IgxHierarchicalGridComponent_ng_template_85_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r136); const ctx_r135 = ɵngcc0.ɵɵnextContext(); return ctx_r135.beginAddRowByIndex(null, -1); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r53 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r53.resourceStrings.igx_grid_add_row_label, " ");
} }
function IgxHierarchicalGridComponent_ng_template_87_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 102);
    ɵngcc0.ɵɵelement(1, "igx-circular-bar", 83);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("indeterminate", true);
} }
function IgxHierarchicalGridComponent_ng_template_89_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-icon", 103);
    ɵngcc0.ɵɵtext(1, "unfold_more");
    ɵngcc0.ɵɵelementEnd();
} }
function IgxHierarchicalGridComponent_ng_template_91_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-icon", 104);
    ɵngcc0.ɵɵtext(1, "unfold_less");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r59 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("isActive", ctx_r59.hasExpandedRecords() && ctx_r59.hasExpandableChildren);
} }
function IgxHierarchicalGridComponent_div_93_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c11 = function (a0, a1) { return { rowChangesCount: a0, endEdit: a1 }; };
function IgxHierarchicalGridComponent_div_93_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 105);
    ɵngcc0.ɵɵelementStart(1, "div", 106);
    ɵngcc0.ɵɵtemplate(2, IgxHierarchicalGridComponent_div_93_ng_container_2_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r60 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("className", ctx_r60.bannerClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r60.rowEditContainer)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c11, ctx_r60.rowChangesCount, ctx_r60.endEdit.bind(ctx_r60)));
} }
function IgxHierarchicalGridComponent_ng_template_94_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const ctx_r62 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵtextInterpolate1(" You have ", ctx_r62.rowChangesCount, " changes in this row\n");
} }
function IgxHierarchicalGridComponent_ng_template_96_Template(rf, ctx) { if (rf & 1) {
    const _r139 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 107);
    ɵngcc0.ɵɵlistener("click", function IgxHierarchicalGridComponent_ng_template_96_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r139); const ctx_r138 = ɵngcc0.ɵɵnextContext(); return ctx_r138.endRowEdit(false, $event); });
    ɵngcc0.ɵɵtext(1, "Cancel");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "button", 107);
    ɵngcc0.ɵɵlistener("click", function IgxHierarchicalGridComponent_ng_template_96_Template_button_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r139); const ctx_r140 = ɵngcc0.ɵɵnextContext(); return ctx_r140.endRowEdit(true, $event); });
    ɵngcc0.ɵɵtext(3, "Done");
    ɵngcc0.ɵɵelementEnd();
} }
function IgxHierarchicalGridComponent_ng_template_98_div_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_template_98_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 111);
    ɵngcc0.ɵɵelementStart(1, "span", 112);
    ɵngcc0.ɵɵtemplate(2, IgxHierarchicalGridComponent_ng_template_98_div_0_ng_container_2_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r141 = ɵngcc0.ɵɵnextContext(2);
    const _r61 = ɵngcc0.ɵɵreference(95);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r141.rowEditText ? ctx_r141.rowEditText : _r61)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r141.rowChangesCount));
} }
function IgxHierarchicalGridComponent_ng_template_98_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxHierarchicalGridComponent_ng_template_98_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridComponent_ng_template_98_div_0_Template, 3, 4, "div", 108);
    ɵngcc0.ɵɵelementStart(1, "div", 109);
    ɵngcc0.ɵɵelementStart(2, "div", 110);
    ɵngcc0.ɵɵtemplate(3, IgxHierarchicalGridComponent_ng_template_98_ng_container_3_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r66 = ɵngcc0.ɵɵnextContext();
    const _r63 = ɵngcc0.ɵɵreference(97);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r66.crudService.row == null ? null : ctx_r66.crudService.row.isAddRow));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r66.rowEditActions ? ctx_r66.rowEditActions : _r63)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(3, _c6, ctx_r66.endEdit.bind(ctx_r66)));
} }
function IgxHierarchicalGridComponent_ng_template_100_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-icon", 113);
    ɵngcc0.ɵɵtext(1, "drag_indicator");
    ɵngcc0.ɵɵelementEnd();
} }
const _c12 = function (a0) { return { "visibility": a0 }; };
function IgxHierarchicalGridComponent_ng_template_102_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 114);
    ɵngcc0.ɵɵelement(1, "igx-checkbox", 115, 116);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const context_r144 = ctx.$implicit;
    const ctx_r70 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("tabindex", -1)("readonly", true)("checked", context_r144.selectedCount > 0 && context_r144.totalCount === context_r144.selectedCount)("ngStyle", ɵngcc0.ɵɵpureFunction1(6, _c12, ctx_r70.isMultiRowSelectionEnabled ? "visible" : "hidden"))("indeterminate", context_r144.selectedCount > 0 && context_r144.selectedCount !== context_r144.totalCount)("aria-label", ctx_r70.headSelectorBaseAriaLabel);
} }
function IgxHierarchicalGridComponent_igx_grid_column_resizer_104_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-column-resizer");
} }
const _c13 = [[["igx-grid-footer"]]];
const _c14 = function (a0, a1, a2) { return { "igx-grid__hierarchical-expander igx-grid__hierarchical-expander--header": a0, "igx-grid__hierarchical-expander--push": a1, "igx-grid__hierarchical-expander--no-border": a2 }; };
const _c15 = function (a0, a1, a2, a3, a4, a5, a6) { return [a0, a1, a2, a3, a4, a5, a6]; };
const _c16 = function (a0, a1, a2, a3, a4) { return [a0, a1, a2, a3, a4]; };
const _c17 = function (a0, a1, a2, a3, a4, a5) { return [a0, a1, a2, a3, a4, a5]; };
const _c18 = function () { return []; };
const _c19 = ["igx-grid-footer"];
let NEXT_ID = 0;
export class IgxHierarchicalGridComponent extends IgxHierarchicalGridBaseDirective {
    constructor() {
        super(...arguments);
        /**
         * @hidden
         */
        this.childLayoutKeys = [];
        /**
         * @hidden
         */
        this.highlightedRowID = null;
        /**
         * @hidden
         */
        this.updateOnRender = false;
        /**
         * @hidden
         */
        this.parent = null;
        this._filteredData = null;
        this.h_id = `igx-hierarchical-grid-${NEXT_ID++}`;
        this.childGridTemplates = new Map();
        this.scrollTop = 0;
        this.scrollLeft = 0;
    }
    /**
     * Gets/Sets the value of the `id` attribute.
     * @remarks
     * If not provided it will be automatically generated.
     * @example
     * ```html
     * <igx-hierarchical-grid [id]="'igx-hgrid-1'" [data]="Data" [autoGenerate]="true"></igx-hierarchical-grid>
     * ```
     */
    get id() {
        return this.h_id;
    }
    set id(value) {
        this.h_id = value;
    }
    /**
     * An @Input property that lets you fill the `IgxHierarchicalGridComponent` with an array of data.
     * ```html
     * <igx-hierarchical-grid [data]="Data" [autoGenerate]="true"></igx-hierarchical-grid>
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    set data(value) {
        this._data = value || [];
        this.summaryService.clearSummaryCache();
        if (this.shouldGenerate) {
            this.setupColumns();
            this.reflow();
        }
        this.cdr.markForCheck();
        if (this.parent && (this.height === null || this.height.indexOf('%') !== -1)) {
            // If the height will change based on how much data there is, recalculate sizes in igxForOf.
            this.notifyChanges(true);
        }
    }
    /**
     * Returns an array of data set to the `IgxHierarchicalGridComponent`.
     * ```typescript
     * let filteredData = this.grid.filteredData;
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    get data() {
        return this._data;
    }
    /**
     * Sets an array of objects containing the filtered data in the `IgxHierarchicalGridComponent`.
     * ```typescript
     * this.grid.filteredData = [{
     *       ID: 1,
     *       Name: "A"
     * }];
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    set filteredData(value) {
        this._filteredData = value;
    }
    /**
     * Returns an array of objects containing the filtered data in the `IgxHierarchicalGridComponent`.
     * ```typescript
     * let filteredData = this.grid.filteredData;
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    get filteredData() {
        return this._filteredData;
    }
    /**
     * Gets/Sets the total number of records in the data source.
     * @remarks
     * This property is required for remote grid virtualization to function when it is bound to remote data.
     * @example
     * ```typescript
     * const itemCount = this.grid1.totalItemCount;
     * this.grid1.totalItemCount = 55;
     * ```
     */
    set totalItemCount(count) {
        this.verticalScrollContainer.totalItemCount = count;
        this.cdr.detectChanges();
    }
    get totalItemCount() {
        return this.verticalScrollContainer.totalItemCount;
    }
    /**
     * Sets if all immediate children of the `IgxHierarchicalGridComponent` should be expanded/collapsed.
     * Defult value is false.
     * ```html
     * <igx-hierarchical-grid [id]="'igx-grid-1'" [data]="Data" [autoGenerate]="true" [expandChildren]="true"></igx-hierarchical-grid>
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    set expandChildren(value) {
        this._defaultExpandState = value;
        this.expansionStates = new Map();
    }
    /**
     * Gets if all immediate children of the `IgxHierarchicalGridComponent` previously have been set to be expanded/collapsed.
     * If previously set and some rows have been manually expanded/collapsed it will still return the last set value.
     * ```typescript
     * const expanded = this.grid.expandChildren;
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    get expandChildren() {
        return this._defaultExpandState;
    }
    /**
     * Gets the unique identifier of the parent row. It may be a `string` or `number` if `primaryKey` of the
     * parent grid is set or an object reference of the parent record otherwise.
     * ```typescript
     * const foreignKey = this.grid.foreignKey;
     * ```
     * @memberof IgxHierarchicalGridComponent
     */
    get foreignKey() {
        if (!this.parent) {
            return null;
        }
        return this.parent.hgridAPI.getParentRowId(this);
    }
    /**
     * @hidden
     */
    get hasExpandableChildren() {
        return !!this.childLayoutKeys.length;
    }
    /**
     * @hidden
     */
    hideActionStrip(event) {
        if (!this.parent) {
            // hide child layout actions strips when
            // moving outside root grid.
            super.hideActionStrip(event);
            this.allLayoutList.forEach(ri => {
                var _a;
                (_a = ri.actionStrip) === null || _a === void 0 ? void 0 : _a.hide();
            });
        }
    }
    /**
     * @hidden
     */
    ngOnInit() {
        if (this._transactions instanceof IgxTransactionService) {
            // transaction service cannot be injected in a derived class in a factory manner
            this._transactions = new IgxTransactionService();
        }
        this.expansionStatesChange.pipe(takeUntil(this.destroy$)).subscribe((value) => {
            const res = Array.from(value.entries()).filter(({ 1: v }) => v === true).map(([k]) => k);
        });
        super.ngOnInit();
    }
    ngDoCheck() {
        if (this._cdrRequestRepaint && !this._init) {
            this.updateSizes();
        }
        super.ngDoCheck();
    }
    /**
     * @hidden
     */
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.verticalScrollContainer.getScroll().addEventListener('scroll', this.hg_verticalScrollHandler.bind(this));
        this.headerContainer.getScroll().addEventListener('scroll', this.hg_horizontalScrollHandler.bind(this));
        this.verticalScrollContainer.onBeforeViewDestroyed.pipe(takeUntil(this.destroy$)).subscribe((view) => {
            const rowData = view.context.$implicit;
            if (this.isChildGridRecord(rowData)) {
                const cachedData = this.childGridTemplates.get(rowData.rowID);
                if (cachedData) {
                    const tmlpOutlet = cachedData.owner;
                    tmlpOutlet._viewContainerRef.detach(0);
                }
            }
        });
        if (this.parent) {
            this._displayDensity = this.rootGrid._displayDensity;
            this.rootGrid.onDensityChanged.pipe(takeUntil(this.destroy$)).subscribe(() => {
                this._displayDensity = this.rootGrid._displayDensity;
                this.notifyChanges(true);
                this.cdr.markForCheck();
            });
            this.childLayoutKeys = this.parentIsland.children.map((item) => item.key);
        }
        this.toolbarCustomContentTemplates = this.parentIsland ?
            this.parentIsland.toolbarCustomContentTemplates :
            this.toolbarCustomContentTemplates;
        this.actionStrip = this.parentIsland ? this.parentIsland.actionStrip : this.actionStrip;
        this.headSelectorsTemplates = this.parentIsland ?
            this.parentIsland.headSelectorsTemplates :
            this.headSelectorsTemplates;
        this.rowSelectorsTemplates = this.parentIsland ?
            this.parentIsland.rowSelectorsTemplates :
            this.rowSelectorsTemplates;
        this.dragIndicatorIconTemplate = this.parentIsland ?
            this.parentIsland.dragIndicatorIconTemplate :
            this.dragIndicatorIconTemplate;
        this.rowExpandedIndicatorTemplate = this.rootGrid.rowExpandedIndicatorTemplate;
        this.rowCollapsedIndicatorTemplate = this.rootGrid.rowCollapsedIndicatorTemplate;
        this.headerCollapseIndicatorTemplate = this.rootGrid.headerCollapseIndicatorTemplate;
        this.headerExpandIndicatorTemplate = this.rootGrid.headerExpandIndicatorTemplate;
        this.hasChildrenKey = this.parentIsland ?
            this.parentIsland.hasChildrenKey || this.rootGrid.hasChildrenKey :
            this.rootGrid.hasChildrenKey;
        this.showExpandAll = this.parentIsland ?
            this.parentIsland.showExpandAll : this.rootGrid.showExpandAll;
        this.excelStyleFilteringComponents = this.parentIsland ?
            this.parentIsland.excelStyleFilteringComponents :
            this.excelStyleFilteringComponents;
    }
    updateSizes() {
        if (document.body.contains(this.nativeElement) && this.isPercentWidth) {
            this.reflow();
            this.hgridAPI.getChildGrids(false).forEach((grid) => {
                grid.updateSizes();
            });
        }
    }
    _shouldAutoSize(renderedHeight) {
        if (this.isPercentHeight && this.parent) {
            return true;
        }
        return super._shouldAutoSize(renderedHeight);
    }
    get outletDirective() {
        return this.rootGrid._outletDirective;
    }
    /**
     * @hidden
     */
    ngAfterContentInit() {
        this.updateColumnList(false);
        this.childLayoutKeys = this.parent ?
            this.parentIsland.children.map((item) => item.key) :
            this.childLayoutKeys = this.childLayoutList.map((item) => item.key);
        this.childLayoutList.notifyOnChanges();
        this.childLayoutList.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.onRowIslandChange());
        super.ngAfterContentInit();
    }
    /**
     * @hidden @internal
     */
    dataLoading(event) {
        this.onDataPreLoad.emit(event);
    }
    /** @hidden */
    featureColumnsWidth() {
        return super.featureColumnsWidth(this.headerHierarchyExpander);
    }
    /**
     * @hidden
     */
    onRowIslandChange() {
        if (this.parent) {
            this.childLayoutKeys = this.parentIsland.children.filter(item => !item._destroyed).map((item) => item.key);
        }
        else {
            this.childLayoutKeys = this.childLayoutList.filter(item => !item._destroyed).map((item) => item.key);
        }
        if (!this.cdr.destroyed) {
            this.cdr.detectChanges();
        }
    }
    setupColumns() {
        if (this.parentIsland && this.parentIsland.childColumns.length > 0 && !this.autoGenerate) {
            this.createColumnsList(this.parentIsland.childColumns.toArray());
        }
        super.setupColumns();
    }
    onColumnsChanged(change) {
        Promise.resolve().then(() => {
            this.updateColumnList();
            const cols = change.filter(c => c.gridAPI.grid === this);
            if (cols.length > 0 || this.autoGenerate) {
                this.columnList.reset(cols);
                super.onColumnsChanged(this.columnList);
            }
        });
    }
    updateColumnList(recalcColSizes = true) {
        const childLayouts = this.parent ? this.childLayoutList : this.allLayoutList;
        const nestedColumns = childLayouts.map((layout) => {
            return layout.columnList.toArray();
        });
        const colsArray = [].concat.apply([], nestedColumns);
        const colLength = this.columnList.length;
        if (colsArray.length > 0) {
            const topCols = this.columnList.filter((item) => {
                return colsArray.indexOf(item) === -1;
            });
            this.columnList.reset(topCols);
            if (recalcColSizes && this.columnList.length !== colLength) {
                this.calculateGridSizes(false);
            }
        }
    }
    ngOnDestroy() {
        if (!this.parent) {
            this.hgridAPI.getChildGrids(true).forEach((grid) => {
                if (!grid.childRow.cdr.destroyed) {
                    grid.childRow.cdr.destroy();
                }
            });
        }
        if (this.parent && this.selectionService.activeElement) {
            // in case selection is in destroyed child grid, selection should be cleared.
            this._clearSeletionHighlights();
        }
        super.ngOnDestroy();
    }
    _clearSeletionHighlights() {
        [this.rootGrid, ...this.rootGrid.getChildGrids(true)].forEach(grid => {
            grid.selectionService.clear();
            grid.selectionService.activeElement = null;
            grid.nativeElement.classList.remove('igx-grid__tr--highlighted');
            grid.highlightedRowID = null;
            grid.cdr.markForCheck();
        });
    }
    /**
     * @hidden
     */
    isRowHighlighted(rowData) {
        return this.highlightedRowID === rowData.rowID;
    }
    /**
     * @hidden
     */
    isHierarchicalRecord(record) {
        if (this.isGhostRecord(record)) {
            record = record.recordRef;
        }
        return this.childLayoutList.length !== 0 && record[this.childLayoutList.first.key];
    }
    /**
     * @hidden
     */
    isChildGridRecord(record) {
        // Can be null when there is defined layout but no child data was found
        return record.childGridsData !== undefined;
    }
    /**
     * @hidden
     */
    trackChanges(index, rec) {
        if (rec.childGridsData !== undefined) {
            // if is child rec
            return rec.rowID;
        }
        return rec;
    }
    /**
     * @hidden
     */
    getContext(rowData, rowIndex, pinned) {
        if (this.isChildGridRecord(rowData)) {
            const cachedData = this.childGridTemplates.get(rowData.rowID);
            if (cachedData) {
                const view = cachedData.view;
                const tmlpOutlet = cachedData.owner;
                return {
                    $implicit: rowData,
                    moveView: view,
                    owner: tmlpOutlet,
                    index: this.dataView.indexOf(rowData)
                };
            }
            else {
                const rowID = this.primaryKey ? rowData.rowID : this.data.indexOf(rowData.rowID);
                // child rows contain unique grids, hence should have unique templates
                return {
                    $implicit: rowData,
                    templateID: 'childRow-' + rowID,
                    index: this.dataView.indexOf(rowData)
                };
            }
        }
        else {
            return {
                $implicit: this.isGhostRecord(rowData) || this.isAddRowRecord(rowData) ? rowData.recordRef : rowData,
                templateID: 'dataRow',
                index: this.getDataViewIndex(rowIndex, pinned),
                disabled: this.isGhostRecord(rowData),
                addRow: this.isAddRowRecord(rowData) ? rowData.addRow : false
            };
        }
    }
    /**
     * @hidden
     */
    get rootGrid() {
        let currGrid = this;
        while (currGrid.parent) {
            currGrid = currGrid.parent;
        }
        return currGrid;
    }
    /**
     * @hidden
     */
    get iconTemplate() {
        const expanded = this.hasExpandedRecords() && this.hasExpandableChildren;
        if (!expanded && this.showExpandAll) {
            return this.headerCollapseIndicatorTemplate || this.defaultCollapsedTemplate;
        }
        else {
            return this.headerExpandIndicatorTemplate || this.defaultExpandedTemplate;
        }
    }
    /**
     * @hidden
     * @internal
     */
    getDragGhostCustomTemplate() {
        if (this.parentIsland) {
            return this.parentIsland.getDragGhostCustomTemplate();
        }
        return super.getDragGhostCustomTemplate();
    }
    /**
     * @hidden
     */
    initColumns(collection, cb = null) {
        if (this.hasColumnLayouts) {
            // invalid configuration - hierarchical grid should not allow column layouts
            // remove column layouts
            const nonColumnLayoutColumns = this.columnList.filter((col) => !col.columnLayout && !col.columnLayoutChild);
            this.columnList.reset(nonColumnLayoutColumns);
        }
        super.initColumns(collection, cb);
    }
    /**
     * @hidden
     * Gets the visible content height that includes header + tbody + footer.
     * For hierarchical child grid it may be scrolled and not fully visible.
     */
    getVisibleContentHeight() {
        let height = super.getVisibleContentHeight();
        if (this.parent) {
            const rootHeight = this.rootGrid.getVisibleContentHeight();
            const topDiff = this.nativeElement.getBoundingClientRect().top - this.rootGrid.nativeElement.getBoundingClientRect().top;
            height = rootHeight - topDiff > height ? height : rootHeight - topDiff;
        }
        return height;
    }
    /**
     * @hidden
     */
    toggleAll() {
        const expanded = this.hasExpandedRecords() && this.hasExpandableChildren;
        if (!expanded && this.showExpandAll) {
            this.expandAll();
        }
        else {
            this.collapseAll();
        }
    }
    /**
     * @hidden
     * @internal
     */
    hasExpandedRecords() {
        if (this.expandChildren) {
            return true;
        }
        let hasExpandedEntry = false;
        this.expansionStates.forEach((value, key) => {
            if (value) {
                hasExpandedEntry = value;
            }
        });
        return hasExpandedEntry;
    }
    getDefaultExpandState(record) {
        if (this.hasChildrenKey && !record[this.hasChildrenKey]) {
            return false;
        }
        return this.expandChildren;
    }
    /**
     * @hidden
     */
    isExpanded(record) {
        return this.gridAPI.get_row_expansion_state(record);
    }
    /**
     * @hidden
     */
    viewCreatedHandler(args) {
        if (this.isChildGridRecord(args.context.$implicit)) {
            const key = args.context.$implicit.rowID;
            this.childGridTemplates.set(key, args);
        }
    }
    /**
     * @hidden
     */
    viewMovedHandler(args) {
        if (this.isChildGridRecord(args.context.$implicit)) {
            // view was moved, update owner in cache
            const key = args.context.$implicit.rowID;
            const cachedData = this.childGridTemplates.get(key);
            cachedData.owner = args.owner;
            this.childLayoutList.forEach((layout) => {
                const relatedGrid = this.hgridAPI.getChildGridByID(layout.key, args.context.$implicit.rowID);
                if (relatedGrid && relatedGrid.updateOnRender) {
                    // Detect changes if `expandChildren` has changed when the grid wasn't visible. This is for performance reasons.
                    relatedGrid.notifyChanges(true);
                    relatedGrid.updateOnRender = false;
                }
            });
            const childGrids = this.getChildGrids(true);
            childGrids.forEach((grid) => {
                if (grid.isPercentWidth) {
                    grid.notifyChanges(true);
                }
                grid.updateScrollPosition();
            });
        }
    }
    /**
     * @hidden
     */
    updateScrollPosition() {
        const vScr = this.verticalScrollContainer.getScroll();
        const hScr = this.headerContainer.getScroll();
        if (vScr) {
            vScr.scrollTop = this.scrollTop;
        }
        if (hScr) {
            hScr.scrollLeft = this.scrollLeft;
        }
    }
    getChildGrids(inDeph) {
        return this.hgridAPI.getChildGrids(inDeph);
    }
    generateDataFields(data) {
        return super.generateDataFields(data).filter((field) => {
            const layoutsList = this.parentIsland ? this.parentIsland.children : this.childLayoutList;
            const keys = layoutsList.map((item) => item.key);
            return keys.indexOf(field) === -1;
        });
    }
    hg_verticalScrollHandler(event) {
        this.scrollTop = event.target.scrollTop;
    }
    onContainerScroll() {
        this.hideOverlays();
    }
    hg_horizontalScrollHandler(event) {
        this.scrollLeft = event.target.scrollLeft;
    }
}
IgxHierarchicalGridComponent.ɵfac = function IgxHierarchicalGridComponent_Factory(t) { return ɵIgxHierarchicalGridComponent_BaseFactory(t || IgxHierarchicalGridComponent); };
IgxHierarchicalGridComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxHierarchicalGridComponent, selectors: [["igx-hierarchical-grid"]], contentQueries: function IgxHierarchicalGridComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, IgxRowIslandComponent, false, IgxRowIslandComponent);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IgxRowIslandComponent, true, IgxRowIslandComponent);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childLayoutList = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.allLayoutList = _t);
    } }, viewQuery: function IgxHierarchicalGridComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true, TemplateRef);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true, TemplateRef);
        ɵngcc0.ɵɵstaticViewQuery(_c2, true, ElementRef);
        ɵngcc0.ɵɵviewQuery(IgxTemplateOutletDirective, true, IgxTemplateOutletDirective);
        ɵngcc0.ɵɵviewQuery(IgxChildGridRowComponent, true, IgxChildGridRowComponent);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hierarchicalRecordTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerHierarchyExpander = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateOutlets = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hierarchicalRows = _t);
    } }, hostVars: 1, hostBindings: function IgxHierarchicalGridComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("id", ctx.id);
    } }, inputs: { id: "id", data: "data", expandChildren: "expandChildren" }, features: [ɵngcc0.ɵɵProvidersFeature([
            IgxGridSelectionService,
            IgxGridCRUDService,
            { provide: GridBaseAPIService, useClass: IgxHierarchicalGridAPIService },
            { provide: IgxGridBaseDirective, useExisting: forwardRef(() => IgxHierarchicalGridComponent) },
            IgxGridSummaryService,
            IgxFilteringService,
            IgxHierarchicalGridNavigationService,
            IgxForOfSyncService,
            IgxForOfScrollSyncService,
            IgxRowIslandAPIService
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c19, decls: 109, vars: 170, consts: [["role", "toolbar", 3, "max-width", "flex-basis", "gridID", "displayDensity", 4, "ngIf"], [1, "igx-grid__thead"], ["tabindex", "0", "role", "rowgroup", 1, "igx-grid__thead-wrapper", 3, "focus", "keydown"], ["theadRow", ""], ["role", "row", 1, "igx-grid__tr"], ["id", "left", "class", "igx-grid__scroll-on-drag-left", 3, "igxColumnMovingDrop", 4, "ngIf"], ["id", "left", "class", "igx-grid__scroll-on-drag-pinned", 3, "igxColumnMovingDrop", "left", 4, "ngIf"], [3, "hidden", "ngClass", "click", "mousedown"], ["headerHierarchyExpander", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], ["igxGridFor", "", 3, "igxGridForOf", "igxForScrollOrientation", "igxForScrollContainer", "igxForContainerSize", "igxForTrackBy", "igxForSizePropName"], ["hContainer", ""], [3, "width", "column", 4, "ngIf"], ["loadingOverlay", ""], [3, "indeterminate", 4, "ngIf"], ["id", "right", "class", "igx-grid__scroll-on-drag-right", 3, "igxColumnMovingDrop", 4, "ngIf"], [1, "igx-grid__thead-thumb", 3, "hidden"], ["igxGridBody", "", 1, "igx-grid__tbody", 3, "keydown.control.c", "copy"], ["tabindex", "0", "role", "rowgroup", 1, "igx-grid__tbody-content", 3, "igxGridDragSelect", "focus", "keydown", "onDragStop", "onDragScroll", "scroll"], ["tbody", ""], ["pinnedRecordsTemplate", ""], [4, "ngTemplateOutlet"], ["igxGridFor", "", 3, "igxGridForOf", "igxForScrollOrientation", "igxForScrollContainer", "igxForContainerSize", "igxForItemSize", "igxForTrackBy", "onChunkPreload"], ["verticalScrollContainer", ""], ["hierarchical_record_template", ""], ["pinned_hierarchical_record_template", ""], ["child_record_template", ""], ["igxOverlayOutlet", "", 1, "igx-grid__row-editing-outlet"], ["igxRowEditingOverlayOutlet", ""], [1, "igx-grid__tbody-scrollbar", 3, "hidden", "pointerdown"], [1, "igx-grid__tbody-scrollbar-start"], [1, "igx-grid__tbody-scrollbar-main"], ["igxGridFor", "", 3, "igxGridForOf"], ["verticalScrollHolder", ""], [1, "igx-grid__tbody-scrollbar-end"], [1, "igx-grid__addrow-snackbar"], [3, "actionText", "displayTime"], ["addRowSnackbar", ""], ["tabindex", "0", "role", "rowgroup", 1, "igx-grid__tfoot", 3, "focus", "keydown"], ["tfoot", ""], ["role", "row", "class", "igx-grid__summaries", 3, "width", "height", "gridID", "summaries", "index", 4, "ngIf"], [1, "igx-grid__tfoot-thumb", 3, "hidden"], [1, "igx-grid__scroll", 3, "hidden", "pointerdown"], ["scr", ""], [1, "igx-grid__scroll-start"], [1, "igx-grid__scroll-main"], ["scrollContainer", ""], [1, "igx-grid__scroll-end", 3, "hidden"], [1, "igx-grid__footer"], ["footer", ""], ["defaultPaginator", ""], ["emptyFilteredGrid", ""], ["defaultEmptyGrid", ""], ["defaultAddRowEmptyTemplate", ""], ["defaultLoadingGrid", ""], ["defaultCollapsedTemplate", ""], ["defaultExpandedTemplate", ""], ["igxToggle", "", 4, "ngIf"], ["defaultRowEditText", ""], ["defaultRowEditActions", ""], ["defaultRowEditTemplate", ""], ["dragIndicatorIconBase", ""], ["igxHeadSelector", ""], ["headSelectorBaseTemplate", ""], ["igxOverlayOutlet", "", 1, "igx-grid__loading-outlet"], ["igxLoadingOverlayOutlet", ""], ["igxOverlayOutlet", "", 1, "igx-grid__outlet", 3, "keydown"], ["igxFilteringOverlayOutlet", ""], ["role", "toolbar", 3, "gridID", "displayDensity"], ["toolbar", ""], ["id", "left", 1, "igx-grid__scroll-on-drag-left", 3, "igxColumnMovingDrop"], ["id", "left", 1, "igx-grid__scroll-on-drag-pinned", 3, "igxColumnMovingDrop"], [1, "igx-grid__drag-indicator", 3, "ngClass", "pointerdown"], ["headerDragContainer", ""], [2, "visibility", "hidden"], [1, "igx-grid__cbx-selection", 3, "ngClass", "click", "pointerdown"], ["headerSelectorContainer", ""], ["headSelector", ""], ["ngFor", "", 3, "ngForOf"], [3, "column", "gridID"], [3, "column"], ["filteringRow", ""], [3, "indeterminate"], ["id", "right", 1, "igx-grid__scroll-on-drag-right", 3, "igxColumnMovingDrop"], ["class", "igx-grid__tr--pinned", 3, "ngClass", "width", 4, "ngIf"], [1, "igx-grid__tr--pinned", 3, "ngClass"], ["pinContainer", ""], [4, "ngFor", "ngForOf"], [3, "igxTemplateOutlet", "igxTemplateOutletContext", "onViewCreated", "onViewMoved", "onCachedViewLoaded"], [3, "gridID", "index", "disabled", "rowData", "addRow"], ["row", ""], [3, "gridID", "index", "rowData", "addRow"], ["row", "", "pinnedRow", ""], [2, "overflow", "auto", "width", "100%", 3, "ngClass", "scroll"], [3, "parentGridID", "index", "rowData", "layout", 4, "ngFor", "ngForOf"], [3, "parentGridID", "index", "rowData", "layout"], ["role", "row", 1, "igx-grid__summaries", 3, "gridID", "summaries", "index"], ["summaryRow", ""], [3, "overlaySettings", "displayDensity", "page", "totalRecords", "perPage", "pageChange", "perPageChange"], [1, "igx-grid__tbody-message"], ["igxButton", "raised", "igxRipple", "", 3, "click"], [1, "igx-grid__loading"], ["role", "button", "fontSet", "material"], ["role", "button", "fontSet", "material", 3, "isActive"], ["igxToggle", ""], [3, "className"], ["igxButton", "", "igxRowEditTabStop", "", 3, "click"], ["class", "igx-banner__message", 4, "ngIf"], [1, "igx-banner__actions"], [1, "igx-banner__row"], [1, "igx-banner__message"], [1, "igx-banner__text"], ["fontSet", "material"], [1, "igx-grid__cbx-padding"], ["disableRipple", "true", 3, "tabindex", "readonly", "checked", "ngStyle", "indeterminate", "aria-label"], ["headerCheckbox", ""]], template: function IgxHierarchicalGridComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c13);
        ɵngcc0.ɵɵtemplate(0, IgxHierarchicalGridComponent_igx_grid_toolbar_0_Template, 2, 6, "igx-grid-toolbar", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2, 3);
        ɵngcc0.ɵɵlistener("focus", function IgxHierarchicalGridComponent_Template_div_focus_2_listener() { return ctx.navigation.focusFirstCell(); })("keydown", function IgxHierarchicalGridComponent_Template_div_keydown_2_listener($event) { return ctx.navigation.headerNavigation($event); });
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵtemplate(5, IgxHierarchicalGridComponent_span_5_Template, 1, 2, "span", 5);
        ɵngcc0.ɵɵtemplate(6, IgxHierarchicalGridComponent_span_6_Template, 1, 4, "span", 6);
        ɵngcc0.ɵɵelementStart(7, "div", 7, 8);
        ɵngcc0.ɵɵlistener("click", function IgxHierarchicalGridComponent_Template_div_click_7_listener() { return ctx.toggleAll(); })("mousedown", function IgxHierarchicalGridComponent_Template_div_mousedown_7_listener($event) { return $event.preventDefault(); });
        ɵngcc0.ɵɵtemplate(9, IgxHierarchicalGridComponent_ng_container_9_Template, 1, 0, "ng-container", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, IgxHierarchicalGridComponent_ng_container_10_Template, 5, 4, "ng-container", 10);
        ɵngcc0.ɵɵtemplate(11, IgxHierarchicalGridComponent_ng_container_11_Template, 4, 12, "ng-container", 10);
        ɵngcc0.ɵɵtemplate(12, IgxHierarchicalGridComponent_ng_container_12_Template, 3, 3, "ng-container", 10);
        ɵngcc0.ɵɵtemplate(13, IgxHierarchicalGridComponent_ng_template_13_Template, 1, 6, "ng-template", 11, 12, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵpipe(15, "igxTopLevel");
        ɵngcc0.ɵɵtemplate(16, IgxHierarchicalGridComponent_ng_container_16_Template, 3, 3, "ng-container", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(17, IgxHierarchicalGridComponent_igx_grid_filtering_row_17_Template, 2, 3, "igx-grid-filtering-row", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", null, 14);
        ɵngcc0.ɵɵtemplate(20, IgxHierarchicalGridComponent_igx_circular_bar_20_Template, 1, 1, "igx-circular-bar", 15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(21, IgxHierarchicalGridComponent_span_21_Template, 1, 2, "span", 16);
        ɵngcc0.ɵɵelement(22, "div", 17);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "div", 18);
        ɵngcc0.ɵɵlistener("keydown.control.c", function IgxHierarchicalGridComponent_Template_div_keydown_control_c_23_listener($event) { return ctx.copyHandler($event); })("copy", function IgxHierarchicalGridComponent_Template_div_copy_23_listener($event) { return ctx.copyHandler($event); });
        ɵngcc0.ɵɵelementStart(24, "div", 19, 20);
        ɵngcc0.ɵɵlistener("focus", function IgxHierarchicalGridComponent_Template_div_focus_24_listener($event) { return ctx.navigation.focusTbody($event); })("keydown", function IgxHierarchicalGridComponent_Template_div_keydown_24_listener($event) { return ctx.navigation.handleNavigation($event); })("onDragStop", function IgxHierarchicalGridComponent_Template_div_onDragStop_24_listener($event) { return ctx.selectionService.dragMode = $event; })("onDragScroll", function IgxHierarchicalGridComponent_Template_div_onDragScroll_24_listener($event) { return ctx.dragScroll($event); })("scroll", function IgxHierarchicalGridComponent_Template_div_scroll_24_listener($event) { return ctx.preventContainerScroll($event); });
        ɵngcc0.ɵɵtemplate(26, IgxHierarchicalGridComponent_span_26_Template, 1, 2, "span", 5);
        ɵngcc0.ɵɵtemplate(27, IgxHierarchicalGridComponent_span_27_Template, 1, 4, "span", 6);
        ɵngcc0.ɵɵtemplate(28, IgxHierarchicalGridComponent_ng_template_28_Template, 7, 47, "ng-template", null, 21, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(30, IgxHierarchicalGridComponent_ng_container_30_Template, 1, 0, "ng-container", 22);
        ɵngcc0.ɵɵtemplate(31, IgxHierarchicalGridComponent_ng_template_31_Template, 1, 2, "ng-template", 23, 24, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵpipe(33, "gridAddRow");
        ɵngcc0.ɵɵpipe(34, "gridRowPinning");
        ɵngcc0.ɵɵpipe(35, "gridHierarchical");
        ɵngcc0.ɵɵpipe(36, "gridHierarchicalPaging");
        ɵngcc0.ɵɵpipe(37, "gridSort");
        ɵngcc0.ɵɵpipe(38, "gridFiltering");
        ɵngcc0.ɵɵpipe(39, "visibleColumns");
        ɵngcc0.ɵɵpipe(40, "gridTransaction");
        ɵngcc0.ɵɵlistener("onChunkPreload", function IgxHierarchicalGridComponent_Template_ng_template_onChunkPreload_31_listener($event) { return ctx.dataLoading($event); });
        ɵngcc0.ɵɵtemplate(41, IgxHierarchicalGridComponent_ng_template_41_Template, 2, 5, "ng-template", null, 25, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(43, IgxHierarchicalGridComponent_ng_template_43_Template, 3, 4, "ng-template", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(45, IgxHierarchicalGridComponent_ng_template_45_Template, 2, 5, "ng-template", null, 27, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(47, IgxHierarchicalGridComponent_ng_container_47_Template, 1, 0, "ng-container", 22);
        ɵngcc0.ɵɵtemplate(48, IgxHierarchicalGridComponent_ng_container_48_Template, 1, 0, "ng-container", 22);
        ɵngcc0.ɵɵtemplate(49, IgxHierarchicalGridComponent_span_49_Template, 1, 2, "span", 16);
        ɵngcc0.ɵɵelement(50, "div", 28, 29);
        ɵngcc0.ɵɵtemplate(52, IgxHierarchicalGridComponent_igc_trial_watermark_52_Template, 1, 0, "igc-trial-watermark", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(53, IgxHierarchicalGridComponent_span_53_Template, 1, 2, "span", 16);
        ɵngcc0.ɵɵelementStart(54, "div", 30);
        ɵngcc0.ɵɵlistener("pointerdown", function IgxHierarchicalGridComponent_Template_div_pointerdown_54_listener($event) { return $event.preventDefault(); });
        ɵngcc0.ɵɵelement(55, "div", 31);
        ɵngcc0.ɵɵelementStart(56, "div", 32);
        ɵngcc0.ɵɵtemplate(57, IgxHierarchicalGridComponent_ng_template_57_Template, 0, 0, "ng-template", 33, 34, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(59, "div", 35);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(60, "div", 36);
        ɵngcc0.ɵɵelementStart(61, "igx-snackbar", 37, 38);
        ɵngcc0.ɵɵtext(63);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(64, "div", 39, 40);
        ɵngcc0.ɵɵlistener("focus", function IgxHierarchicalGridComponent_Template_div_focus_64_listener() { return ctx.navigation.focusFirstCell(false); })("keydown", function IgxHierarchicalGridComponent_Template_div_keydown_64_listener($event) { return ctx.navigation.summaryNav($event); });
        ɵngcc0.ɵɵtemplate(66, IgxHierarchicalGridComponent_igx_grid_summary_row_66_Template, 3, 10, "igx-grid-summary-row", 41);
        ɵngcc0.ɵɵelement(67, "div", 42);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(68, "div", 43, 44);
        ɵngcc0.ɵɵlistener("pointerdown", function IgxHierarchicalGridComponent_Template_div_pointerdown_68_listener($event) { return $event.preventDefault(); });
        ɵngcc0.ɵɵelement(70, "div", 45);
        ɵngcc0.ɵɵelementStart(71, "div", 46);
        ɵngcc0.ɵɵtemplate(72, IgxHierarchicalGridComponent_ng_template_72_Template, 0, 0, "ng-template", 33, 47, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(74, "div", 48);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(75, "div", 49, 50);
        ɵngcc0.ɵɵprojection(77);
        ɵngcc0.ɵɵtemplate(78, IgxHierarchicalGridComponent_ng_container_78_Template, 2, 4, "ng-container", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(79, IgxHierarchicalGridComponent_ng_template_79_Template, 1, 5, "ng-template", null, 51, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(81, IgxHierarchicalGridComponent_ng_template_81_Template, 4, 2, "ng-template", null, 52, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(83, IgxHierarchicalGridComponent_ng_template_83_Template, 4, 2, "ng-template", null, 53, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(85, IgxHierarchicalGridComponent_ng_template_85_Template, 2, 1, "ng-template", null, 54, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(87, IgxHierarchicalGridComponent_ng_template_87_Template, 2, 1, "ng-template", null, 55, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(89, IgxHierarchicalGridComponent_ng_template_89_Template, 2, 0, "ng-template", null, 56, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(91, IgxHierarchicalGridComponent_ng_template_91_Template, 2, 1, "ng-template", null, 57, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(93, IgxHierarchicalGridComponent_div_93_Template, 3, 6, "div", 58);
        ɵngcc0.ɵɵtemplate(94, IgxHierarchicalGridComponent_ng_template_94_Template, 1, 1, "ng-template", null, 59, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(96, IgxHierarchicalGridComponent_ng_template_96_Template, 4, 0, "ng-template", null, 60, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(98, IgxHierarchicalGridComponent_ng_template_98_Template, 4, 5, "ng-template", null, 61, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(100, IgxHierarchicalGridComponent_ng_template_100_Template, 2, 0, "ng-template", null, 62, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(102, IgxHierarchicalGridComponent_ng_template_102_Template, 3, 8, "ng-template", 63, 64, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(104, IgxHierarchicalGridComponent_igx_grid_column_resizer_104_Template, 1, 0, "igx-grid-column-resizer", 10);
        ɵngcc0.ɵɵelement(105, "div", 65, 66);
        ɵngcc0.ɵɵelementStart(107, "div", 67, 68);
        ɵngcc0.ɵɵlistener("keydown", function IgxHierarchicalGridComponent_Template_div_keydown_107_listener($event) { return ctx.gridOutletKeyboardHandler($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r19 = ɵngcc0.ɵɵreference(29);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showToolbar);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("width", ctx.calcWidth, "px");
        ɵngcc0.ɵɵattribute("aria-activedescendant", ctx.activeDescendant);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("width", ctx.calcWidth, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn && ctx.pinnedColumns.length <= 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn && ctx.pinnedColumns.length > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", !ctx.hasExpandableChildren || !ctx.hasVisibleColumns)("ngClass", ɵngcc0.ɵɵpureFunction3(135, _c14, ctx.hasExpandableChildren, ctx.filteringService.isFilterRowVisible, ctx.isRowSelectable || ctx.rowDraggable));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.iconTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(139, _c6, ctx));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.rowDraggable);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showRowSelectors);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pinnedColumns.length > 0 && ctx.isPinningToStart);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("igxGridForOf", ɵngcc0.ɵɵpipeBind1(15, 90, ctx.unpinnedColumns))("igxForScrollOrientation", "horizontal")("igxForScrollContainer", ctx.parentVirtDir)("igxForContainerSize", ctx.unpinnedWidth)("igxForTrackBy", ctx.trackColumnChanges)("igxForSizePropName", "calcPixelWidth");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pinnedColumns.length > 0 && !ctx.isPinningToStart);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.filteringService.isFilterRowVisible);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.shouldOverlayLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("width", ctx.scrollSize, "px");
        ɵngcc0.ɵɵproperty("hidden", !ctx.hasVerticalScroll());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("height", ctx.totalHeight, "px")("width", ctx.calcWidth, "px");
        ɵngcc0.ɵɵproperty("igxGridDragSelect", ctx.selectionService.dragMode);
        ɵngcc0.ɵɵattribute("aria-activedescendant", ctx.activeDescendant);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn && ctx.pinnedColumns.length <= 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn && ctx.pinnedColumns.length > 0);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.hasPinnedRecords && ctx.isRowPinningToTop ? _r19 : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("igxGridForOf", ɵngcc0.ɵɵpipeBind3(33, 92, ɵngcc0.ɵɵpipeBind4(34, 96, ɵngcc0.ɵɵpipeBindV(35, 101, ɵngcc0.ɵɵpureFunction6(161, _c17, ɵngcc0.ɵɵpipeBindV(36, 108, ɵngcc0.ɵɵpureFunction5(155, _c16, ɵngcc0.ɵɵpipeBindV(37, 114, ɵngcc0.ɵɵpureFunction5(149, _c16, ɵngcc0.ɵɵpipeBindV(38, 120, ɵngcc0.ɵɵpureFunction7(141, _c15, ɵngcc0.ɵɵpipeBind2(39, 128, ɵngcc0.ɵɵpipeBind3(40, 131, ctx.data, ctx.id, ctx.pipeTrigger), ctx.hasVisibleColumns), ctx.filteringExpressionsTree, ctx.filterStrategy, ctx.advancedFilteringExpressionsTree, ctx.id, ctx.pipeTrigger, ctx.filteringPipeTrigger)), ctx.sortingExpressions, ctx.sortStrategy, ctx.id, ctx.pipeTrigger)), ctx.page, ctx.perPage, ctx.id, ctx.pipeTrigger)), ctx.expansionStates, ctx.id, ctx.primaryKey, ctx.childLayoutKeys, ctx.pipeTrigger)), ctx.id, false, ctx.pipeTrigger), false, ctx.pipeTrigger))("igxForScrollOrientation", "vertical")("igxForScrollContainer", ctx.verticalScroll)("igxForContainerSize", ctx.calcHeight)("igxForItemSize", ctx.renderedRowHeight)("igxForTrackBy", ctx.trackChanges);
        ɵngcc0.ɵɵadvance(16);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.hasPinnedRecords && !ctx.isRowPinningToTop ? _r19 : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.parent);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMovableColumns && ctx.draggedColumn);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("width", ctx.scrollSize, "px");
        ɵngcc0.ɵɵproperty("hidden", !ctx.hasVerticalScroll());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.isRowPinningToTop ? ctx.pinnedRowHeight : 0, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.calcHeight, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("igxGridForOf", ɵngcc0.ɵɵpureFunction0(168, _c18));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("height", !ctx.isRowPinningToTop ? ctx.pinnedRowHeight : 0, "px");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("actionText", ctx.snackbarActionText)("displayTime", ctx.snackbarDisplayTime);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.snackbarLabel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.summariesHeight, "px");
        ɵngcc0.ɵɵattribute("aria-activedescendant", ctx.activeDescendant);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasSummarizedColumns && ctx.rootSummariesEnabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.summariesHeight, "px")("width", ctx.scrollSize, "px");
        ɵngcc0.ɵɵproperty("hidden", !ctx.hasVerticalScroll());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.scrollSize, "px");
        ɵngcc0.ɵɵproperty("hidden", ctx.isHorizontalScrollHidden);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("width", ctx.isPinningToStart ? ctx.pinnedWidth : ctx.headerFeaturesWidth, "px")("min-width", ctx.isPinningToStart ? ctx.pinnedWidth : ctx.headerFeaturesWidth, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("width", ctx.unpinnedWidth, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("igxGridForOf", ɵngcc0.ɵɵpureFunction0(169, _c18));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("float", "right")("width", ctx.pinnedWidth, "px")("min-width", ctx.pinnedWidth, "px");
        ɵngcc0.ɵɵproperty("hidden", ctx.pinnedWidth === 0 || ctx.isPinningToStart);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.paging && ctx.totalRecords);
        ɵngcc0.ɵɵadvance(15);
        ɵngcc0.ɵɵproperty("ngIf", ctx.rowEditable);
        ɵngcc0.ɵɵadvance(11);
        ɵngcc0.ɵɵproperty("ngIf", ctx.colResizingService.showResizer);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet, ɵngcc2.IgxGridForOfDirective, ɵngcc3.IgxGridBodyDirective, ɵngcc4.IgxGridDragSelectDirective, ɵngcc5.IgxOverlayOutletDirective, ɵngcc6.IgxSnackbarComponent, ɵngcc7.IgxHeadSelectorDirective, ɵngcc8.IgxGridToolbarComponent, ɵngcc9.IgxColumnMovingDropDirective, ɵngcc1.NgForOf, ɵngcc10.IgxGridHeaderGroupComponent, ɵngcc11.IgxGridFilteringRowComponent, ɵngcc12.IgxCircularProgressBarComponent, ɵngcc13.IgxTemplateOutletDirective, ɵngcc14.IgxHierarchicalRowComponent, ɵngcc15.IgxChildGridRowComponent, ɵngcc16.IgxSummaryRowComponent, ɵngcc17.IgxPaginatorComponent, ɵngcc18.IgxButtonDirective, ɵngcc19.IgxRippleDirective, ɵngcc20.IgxIconComponent, ɵngcc5.IgxToggleDirective, ɵngcc21.IgxRowEditTabStopDirective, ɵngcc22.IgxCheckboxComponent, ɵngcc1.NgStyle, ɵngcc23.IgxGridColumnResizerComponent], pipes: [ɵngcc24.IgxGridTopLevelColumns, ɵngcc24.IgxGridAddRowPipe, ɵngcc24.IgxGridRowPinningPipe, ɵngcc25.IgxGridHierarchicalPipe, ɵngcc25.IgxGridHierarchicalPagingPipe, ɵngcc26.IgxGridSortingPipe, ɵngcc26.IgxGridFilteringPipe, ɵngcc24.IgxHasVisibleColumnsPipe, ɵngcc24.IgxGridTransactionPipe, ɵngcc27.IgxSummaryDataPipe], encapsulation: 2, changeDetection: 0 });
IgxHierarchicalGridComponent.propDecorators = {
    id: [{ type: HostBinding, args: ['attr.id',] }, { type: Input }],
    data: [{ type: Input }],
    expandChildren: [{ type: Input }],
    childLayoutList: [{ type: ContentChildren, args: [IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: false },] }],
    allLayoutList: [{ type: ContentChildren, args: [IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: true },] }],
    hierarchicalRecordTemplate: [{ type: ViewChild, args: ['hierarchical_record_template', { read: TemplateRef, static: true },] }],
    childTemplate: [{ type: ViewChild, args: ['child_record_template', { read: TemplateRef, static: true },] }],
    headerHierarchyExpander: [{ type: ViewChild, args: ['headerHierarchyExpander', { read: ElementRef, static: true },] }],
    templateOutlets: [{ type: ViewChildren, args: [IgxTemplateOutletDirective, { read: IgxTemplateOutletDirective },] }],
    hierarchicalRows: [{ type: ViewChildren, args: [IgxChildGridRowComponent, { read: IgxChildGridRowComponent },] }]
};
const ɵIgxHierarchicalGridComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IgxHierarchicalGridComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxHierarchicalGridComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                selector: 'igx-hierarchical-grid',
                template: "<igx-grid-toolbar role=\"toolbar\" [style.max-width.px]='outerWidth' [style.flex-basis.px]=\"outerWidth\" *ngIf=\"showToolbar\" [gridID]=\"id\"\n    [displayDensity]=\"displayDensity\" #toolbar>\n</igx-grid-toolbar>\n\n<div class=\"igx-grid__thead\">\n    <div class=\"igx-grid__thead-wrapper\"  tabindex=\"0\" (focus)=\"navigation.focusFirstCell()\" [attr.aria-activedescendant]=\"activeDescendant\"\n     (keydown)=\"navigation.headerNavigation($event)\" role=\"rowgroup\" [style.width.px]='calcWidth' #theadRow>\n        <div class=\"igx-grid__tr\" role=\"row\" [style.width.px]='calcWidth'>\n            <span *ngIf=\"hasMovableColumns && draggedColumn && pinnedColumns.length <= 0\"\n                [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\" id=\"left\"\n                class=\"igx-grid__scroll-on-drag-left\"></span>\n            <span *ngIf=\"hasMovableColumns && draggedColumn && pinnedColumns.length > 0\"\n                [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\" id=\"left\"\n                class=\"igx-grid__scroll-on-drag-pinned\" [style.left.px]=\"pinnedWidth\"></span>\n            <div #headerHierarchyExpander (click)=\"toggleAll()\" (mousedown)='$event.preventDefault()' [hidden]='!hasExpandableChildren || !hasVisibleColumns' [ngClass]=\"{\n                'igx-grid__hierarchical-expander igx-grid__hierarchical-expander--header': hasExpandableChildren,\n                'igx-grid__hierarchical-expander--push': filteringService.isFilterRowVisible,\n                'igx-grid__hierarchical-expander--no-border': isRowSelectable || rowDraggable\n            }\">\n                <ng-container *ngTemplateOutlet=\"iconTemplate; context: { $implicit: this }\"></ng-container>\n            </div>\n            <ng-container *ngIf=\"rowDraggable\">\n                <div class=\"igx-grid__drag-indicator\" [ngClass]=\"{\n                        'igx-grid__drag-indicator--header': !isRowSelectable\n                    }\" (pointerdown)='$event.preventDefault()' #headerDragContainer>\n                    <div style=\"visibility: hidden;\">\n                        <ng-container\n                            *ngTemplateOutlet=\"this.dragIndicatorIconTemplate ? this.dragIndicatorIconTemplate : this.dragIndicatorIconBase\">\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf=\"showRowSelectors\">\n                <div class=\"igx-grid__cbx-selection\" (click)=\"onHeaderSelectorClick($event)\" #headerSelectorContainer [ngClass]=\"{\n                        'igx-grid__cbx-selection--push': filteringService.isFilterRowVisible\n                    }\"  (pointerdown)='$event.preventDefault()'>\n                    <ng-template #headSelector\n                        *ngTemplateOutlet=\"\n                        this.headSelectorTemplate ? this.headSelectorTemplate : headSelectorBaseTemplate;\n                        context: { $implicit: {\n                                        selectedCount: this.selectionService.filteredSelectedRowIds.length,\n                                        totalCount: this.totalRowsCountAfterFilter,\n                                        selectAll: selectAllRows.bind(this),\n                                        deselectAll: deselectAllRows.bind(this) }}\">\n                    </ng-template>\n                </div>\n            </ng-container>\n            <ng-container *ngIf=\"pinnedColumns.length > 0 && isPinningToStart\">\n                <ng-template ngFor let-col [ngForOf]=\"pinnedColumns | igxTopLevel\">\n                    <igx-grid-header-group [column]=\"col\" [gridID]=\"id\" [style.min-width]=\"getHeaderGroupWidth(col)\"\n                        [style.flex-basis]=\"getHeaderGroupWidth(col)\"></igx-grid-header-group>\n                </ng-template>\n            </ng-container>\n            <ng-template igxGridFor let-col [igxGridForOf]=\"unpinnedColumns | igxTopLevel\"\n                [igxForScrollOrientation]=\"'horizontal'\" [igxForScrollContainer]=\"parentVirtDir\"\n                [igxForContainerSize]='unpinnedWidth' [igxForTrackBy]='trackColumnChanges'\n                [igxForSizePropName]='\"calcPixelWidth\"' #hContainer>\n                <igx-grid-header-group [column]=\"col\" [gridID]=\"id\" [style.min-width]=\"getHeaderGroupWidth(col)\"\n                    [style.flex-basis]=\"getHeaderGroupWidth(col)\"></igx-grid-header-group>\n            </ng-template>\n            <ng-container *ngIf=\"pinnedColumns.length > 0 && !isPinningToStart\">\n                <ng-template ngFor let-col [ngForOf]=\"pinnedColumns | igxTopLevel\">\n                    <igx-grid-header-group\n                        [column]=\"col\"\n                        [gridID]=\"id\"\n                        [style.min-width]=\"getHeaderGroupWidth(col)\"\n                        [style.flex-basis]=\"getHeaderGroupWidth(col)\"\n                        [style.left]=\"col.rightPinnedOffset\">\n                    </igx-grid-header-group>\n                </ng-template>\n            </ng-container>\n        </div>\n        <igx-grid-filtering-row #filteringRow [style.width.px]='calcWidth' *ngIf=\"filteringService.isFilterRowVisible\"\n            [column]=\"filteringService.filteredColumn\"></igx-grid-filtering-row>\n    </div>\n    <div #loadingOverlay>\n        <igx-circular-bar [indeterminate]=\"true\" *ngIf='shouldOverlayLoading'>\n        </igx-circular-bar>\n    </div>\n    <span *ngIf=\"hasMovableColumns && draggedColumn\" [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\"\n        id=\"right\" class=\"igx-grid__scroll-on-drag-right\"></span>\n    <div class=\"igx-grid__thead-thumb\" [hidden]='!hasVerticalScroll()' [style.width.px]=\"scrollSize\"></div>\n</div>\n\n<div igxGridBody (keydown.control.c)=\"copyHandler($event)\" (copy)=\"copyHandler($event)\" class=\"igx-grid__tbody\">\n    <div class=\"igx-grid__tbody-content\"  tabindex=\"0\" (focus)=\"navigation.focusTbody($event)\" [attr.aria-activedescendant]=\"activeDescendant\"\n     (keydown)=\"navigation.handleNavigation($event)\" (onDragStop)=\"selectionService.dragMode = $event\"\n        (onDragScroll)=\"dragScroll($event)\" [igxGridDragSelect]=\"selectionService.dragMode\" role=\"rowgroup\"\n        [style.height.px]='totalHeight' [style.width.px]='calcWidth' #tbody (scroll)='preventContainerScroll($event)'>\n        <span *ngIf=\"hasMovableColumns && draggedColumn && pinnedColumns.length <= 0\"\n            [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\" id=\"left\"\n            class=\"igx-grid__scroll-on-drag-left\"></span>\n        <span *ngIf=\"hasMovableColumns && draggedColumn && pinnedColumns.length > 0\"\n            [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\" id=\"left\"\n            class=\"igx-grid__scroll-on-drag-pinned\" [style.left.px]=\"pinnedWidth\"></span>\n        <ng-template #pinnedRecordsTemplate>\n            <ng-container *ngIf=\"data\n            | gridTransaction:id:pipeTrigger\n            | visibleColumns:hasVisibleColumns\n            | gridRowPinning:id:true:pipeTrigger\n            | gridFiltering:filteringExpressionsTree:filterStrategy:advancedFilteringExpressionsTree:id:pipeTrigger:filteringPipeTrigger:true\n            | gridSort:sortingExpressions:sortStrategy:id:pipeTrigger:true\n            | gridAddRow:true:pipeTrigger as pinnedData\">\n                <div #pinContainer *ngIf='pinnedData.length > 0' class='igx-grid__tr--pinned'\n                    [ngClass]=\"{ 'igx-grid__tr--pinned-bottom':  !isRowPinningToTop, 'igx-grid__tr--pinned-top': isRowPinningToTop }\"\n                    [style.width.px]='calcWidth'>\n                    <ng-container *ngFor=\"let rowData of pinnedData; let rowIndex = index\">\n                        <ng-container *ngTemplateOutlet=\"pinned_hierarchical_record_template; context: getContext(rowData, rowIndex, true)\">\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngTemplateOutlet=\"hasPinnedRecords && isRowPinningToTop ? pinnedRecordsTemplate : null\">\n        </ng-container>\n        <ng-template igxGridFor let-rowData let-rowIndex=\"index\" [igxGridForOf]=\"data\n        | gridTransaction:id:pipeTrigger\n        | visibleColumns:hasVisibleColumns\n        | gridFiltering:filteringExpressionsTree:filterStrategy:advancedFilteringExpressionsTree:id:pipeTrigger:filteringPipeTrigger\n        | gridSort:sortingExpressions:sortStrategy:id:pipeTrigger\n        | gridHierarchicalPaging:page:perPage:id:pipeTrigger\n        | gridHierarchical:expansionStates:id:primaryKey:childLayoutKeys:pipeTrigger\n        | gridRowPinning:id:false:pipeTrigger\n        | gridAddRow:false:pipeTrigger\"\n            [igxForScrollOrientation]=\"'vertical'\" [igxForScrollContainer]='verticalScroll'\n            [igxForContainerSize]='calcHeight' [igxForItemSize]=\"renderedRowHeight\" [igxForTrackBy]='trackChanges'\n            #verticalScrollContainer (onChunkPreload)=\"dataLoading($event)\">\n            <ng-template\n                [igxTemplateOutlet]='(isHierarchicalRecord(rowData) ? hierarchical_record_template : (isChildGridRecord(rowData) && isExpanded(rowData) ? child_record_template : hierarchical_record_template))'\n                [igxTemplateOutletContext]='getContext(rowData, rowIndex, false)' (onViewCreated)='viewCreatedHandler($event)'\n                (onViewMoved)='viewMovedHandler($event)' (onCachedViewLoaded)='cachedViewLoaded($event)'>\n            </ng-template>\n            <!-- <ng-container *igxTemplateOutlet=\"(isHierarchicalRecord(rowData) ? hierarchical_record_template : (isChildGridRecord(rowData) && isExpanded(rowData) ? child_record_template : hierarchical_record_template)); context: getContext(rowData)\"></ng-container> -->\n        </ng-template>\n        <ng-template #hierarchical_record_template let-rowIndex=\"index\" let-disabledRow=\"disabled\" let-rowData let-isAddRow=\"addRow\">\n            <igx-hierarchical-grid-row [gridID]=\"id\" [index]=\"rowIndex\" [disabled]=\"disabledRow\" [rowData]=\"rowData\" [addRow]=\"isAddRow\" #row>\n            </igx-hierarchical-grid-row>\n        </ng-template>\n\n        <ng-template #pinned_hierarchical_record_template let-rowIndex=\"index\" let-rowData let-isAddRow=\"addRow\">\n            <igx-hierarchical-grid-row [gridID]=\"id\" [index]=\"rowIndex\" [rowData]=\"rowData\" [addRow]=\"isAddRow\" #row #pinnedRow>\n            </igx-hierarchical-grid-row>\n        </ng-template>\n        <ng-template #child_record_template let-rowIndex=\"index\" let-rowData>\n            <div style=\"overflow:auto;width: 100%;\" [attr.data-rowindex]='rowIndex' (scroll)='onContainerScroll()'\n                [ngClass]=\"{\n                'igx-grid__tr-container': true,\n                'igx-grid__tr--highlighted':isRowHighlighted(rowData)\n            }\">\n                <igx-child-grid-row *ngFor=\"let layout of childLayoutList\" [parentGridID]=\"id\" [index]=\"rowIndex\"\n                    [rowData]=\"rowData\" [layout]='layout' #row>\n                </igx-child-grid-row>\n            </div>\n        </ng-template>\n        <ng-container *ngTemplateOutlet=\"hasPinnedRecords && !isRowPinningToTop ? pinnedRecordsTemplate : null\">\n        </ng-container>\n        <ng-container *ngTemplateOutlet=\"template\"></ng-container>\n        <span *ngIf=\"hasMovableColumns && draggedColumn\" [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\"\n            id=\"right\" class=\"igx-grid__scroll-on-drag-right\"></span>\n        <div class=\"igx-grid__row-editing-outlet\" igxOverlayOutlet #igxRowEditingOverlayOutlet></div>\n        <igc-trial-watermark *ngIf=\"!this.parent\"></igc-trial-watermark>\n    </div>\n    <span *ngIf=\"hasMovableColumns && draggedColumn\" [igxColumnMovingDrop]=\"headerContainer\" [attr.droppable]=\"true\"\n        id=\"right\" class=\"igx-grid__scroll-on-drag-right\"></span>\n    <div [hidden]='!hasVerticalScroll()' class=\"igx-grid__tbody-scrollbar\" [style.width.px]=\"scrollSize\" (pointerdown)=\"$event.preventDefault()\">\n        <div class=\"igx-grid__tbody-scrollbar-start\" [style.height.px]=' isRowPinningToTop ? pinnedRowHeight : 0'></div>\n        <div class=\"igx-grid__tbody-scrollbar-main\" [style.height.px]='calcHeight'>\n            <ng-template igxGridFor [igxGridForOf]='[]' #verticalScrollHolder></ng-template>\n        </div>\n        <div class=\"igx-grid__tbody-scrollbar-end\" [style.height.px]='!isRowPinningToTop ? pinnedRowHeight : 0'></div>\n    </div>\n    <div class=\"igx-grid__addrow-snackbar\">\n        <igx-snackbar #addRowSnackbar [actionText]=\"snackbarActionText\" [displayTime]='snackbarDisplayTime'>{{snackbarLabel}}</igx-snackbar>\n    </div>\n</div>\n\n\n<div class=\"igx-grid__tfoot\" tabindex=\"0\" (focus)=\"navigation.focusFirstCell(false)\" [attr.aria-activedescendant]=\"activeDescendant\"\n (keydown)=\"navigation.summaryNav($event)\"  role=\"rowgroup\" [style.height.px]='summariesHeight' #tfoot>\n    <igx-grid-summary-row [style.width.px]='calcWidth' [style.height.px]='summariesHeight'\n        *ngIf=\"hasSummarizedColumns && rootSummariesEnabled\" [gridID]=\"id\" role=\"row\"\n        [summaries]=\"id | igxGridSummaryDataPipe:summaryService.retriggerRootPipe\" [index]=\"dataView.length\"\n        class=\"igx-grid__summaries\" #summaryRow>\n    </igx-grid-summary-row>\n    <div class=\"igx-grid__tfoot-thumb\" [hidden]='!hasVerticalScroll()' [style.height.px]='summariesHeight'\n        [style.width.px]=\"scrollSize\"></div>\n</div>\n\n<div class=\"igx-grid__scroll\" [style.height.px]=\"scrollSize\" #scr [hidden]=\"isHorizontalScrollHidden\"  (pointerdown)=\"$event.preventDefault()\">\n    <div class=\"igx-grid__scroll-start\" [style.width.px]='isPinningToStart ? pinnedWidth : headerFeaturesWidth' [style.min-width.px]='isPinningToStart ? pinnedWidth : headerFeaturesWidth'></div>\n    <div class=\"igx-grid__scroll-main\" [style.width.px]='unpinnedWidth'>\n        <ng-template igxGridFor [igxGridForOf]='[]' #scrollContainer>\n        </ng-template>\n    </div>\n    <div class=\"igx-grid__scroll-end\" [style.float]='\"right\"' [style.width.px]='pinnedWidth' [style.min-width.px]='pinnedWidth' [hidden]=\"pinnedWidth === 0 || isPinningToStart\"></div>\n</div>\n\n<div class=\"igx-grid__footer\" #footer>\n    <ng-content select=\"igx-grid-footer\"></ng-content>\n    <ng-container *ngIf=\"paging && totalRecords\">\n        <ng-container\n            *ngTemplateOutlet=\"paginationTemplate ? paginationTemplate : defaultPaginator; context: {$implicit: this}\">\n        </ng-container>\n    </ng-container>\n</div>\n\n<ng-template #defaultPaginator>\n    <igx-paginator [overlaySettings]=\"paginatorSettings\" [displayDensity]=\"displayDensity\" [(page)]=\"page\" [totalRecords]=\"totalRecords\" [(perPage)]=\"perPage\">\n    </igx-paginator>\n</ng-template>\n\n<ng-template #emptyFilteredGrid>\n    <span class=\"igx-grid__tbody-message\">\n        <span>{{emptyFilteredGridMessage}}</span>\n        <span *ngIf='showAddButton'>\n            <ng-container *ngTemplateOutlet='addRowEmptyTemplate || defaultAddRowEmptyTemplate'></ng-container>\n        </span>\n    </span>\n</ng-template>\n\n<ng-template #defaultEmptyGrid>\n    <span class=\"igx-grid__tbody-message\">\n        <span>{{emptyGridMessage}}</span>\n        <span *ngIf='showAddButton'>\n            <ng-container *ngTemplateOutlet='addRowEmptyTemplate || defaultAddRowEmptyTemplate'></ng-container>\n        </span>\n    </span>\n</ng-template>\n\n<ng-template #defaultAddRowEmptyTemplate>\n    <button igxButton=\"raised\" igxRipple (click)='beginAddRowByIndex(null, -1)'>\n        {{resourceStrings.igx_grid_add_row_label}}\n    </button>\n</ng-template>\n\n<ng-template #defaultLoadingGrid>\n    <div class=\"igx-grid__loading\">\n        <igx-circular-bar [indeterminate]=\"true\">\n        </igx-circular-bar>\n    </div>\n</ng-template>\n\n<ng-template #defaultCollapsedTemplate>\n    <igx-icon role=\"button\" fontSet=\"material\">unfold_more</igx-icon>\n</ng-template>\n\n<ng-template #defaultExpandedTemplate>\n    <igx-icon role=\"button\" [isActive]='hasExpandedRecords() && hasExpandableChildren' fontSet=\"material\">unfold_less</igx-icon>\n</ng-template>\n\n<div *ngIf=\"rowEditable\" igxToggle>\n    <div [className]=\"bannerClass\">\n        <ng-container\n            *ngTemplateOutlet=\"rowEditContainer; context: { rowChangesCount: rowChangesCount, endEdit: endEdit.bind(this) }\">\n        </ng-container>\n    </div>\n</div>\n<ng-template #defaultRowEditText>\n    You have {{ rowChangesCount }} changes in this row\n</ng-template>\n<ng-template #defaultRowEditActions>\n    <button igxButton igxRowEditTabStop (click)=\"endRowEdit(false, $event)\">Cancel</button>\n    <button igxButton igxRowEditTabStop (click)=\"endRowEdit(true, $event)\">Done</button>\n</ng-template>\n<ng-template #defaultRowEditTemplate>\n    <div class=\"igx-banner__message\" *ngIf=\"!this.crudService.row?.isAddRow\">\n        <span class=\"igx-banner__text\">\n            <ng-container\n                *ngTemplateOutlet=\"rowEditText ? rowEditText : defaultRowEditText; context: { $implicit: rowChangesCount }\">\n            </ng-container>\n        </span>\n    </div>\n    <div class=\"igx-banner__actions\">\n        <div class=\"igx-banner__row\">\n            <ng-container\n                *ngTemplateOutlet=\"rowEditActions ? rowEditActions : defaultRowEditActions; context: { $implicit: endEdit.bind(this) }\">\n            </ng-container>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #dragIndicatorIconBase>\n    <igx-icon fontSet=\"material\">drag_indicator</igx-icon>\n</ng-template>\n\n<ng-template #headSelectorBaseTemplate igxHeadSelector let-context>\n    <div class=\"igx-grid__cbx-padding\">\n        <igx-checkbox\n            [tabindex]=\"-1\"\n            [readonly]=\"true\"\n            [checked]=\"context.selectedCount > 0 && context.totalCount === context.selectedCount\"\n            disableRipple=\"true\"\n            [ngStyle]=\"{'visibility': isMultiRowSelectionEnabled? 'visible' : 'hidden' }\"\n            [indeterminate]=\"context.selectedCount > 0 && context.selectedCount !== context.totalCount\"\n            [aria-label]=\"headSelectorBaseAriaLabel\"\n            #headerCheckbox>\n        </igx-checkbox>\n    </div>\n</ng-template>\n\n<igx-grid-column-resizer *ngIf=\"colResizingService.showResizer\"></igx-grid-column-resizer>\n<div class=\"igx-grid__loading-outlet\" #igxLoadingOverlayOutlet igxOverlayOutlet></div>\n<div class=\"igx-grid__outlet\" #igxFilteringOverlayOutlet igxOverlayOutlet (keydown)=\"gridOutletKeyboardHandler($event)\"></div>\n",
                providers: [
                    IgxGridSelectionService,
                    IgxGridCRUDService,
                    { provide: GridBaseAPIService, useClass: IgxHierarchicalGridAPIService },
                    { provide: IgxGridBaseDirective, useExisting: forwardRef(() => IgxHierarchicalGridComponent) },
                    IgxGridSummaryService,
                    IgxFilteringService,
                    IgxHierarchicalGridNavigationService,
                    IgxForOfSyncService,
                    IgxForOfScrollSyncService,
                    IgxRowIslandAPIService
                ]
            }]
    }], null, { id: [{
            type: HostBinding,
            args: ['attr.id']
        }, {
            type: Input
        }], data: [{
            type: Input
        }], expandChildren: [{
            type: Input
        }], childLayoutList: [{
            type: ContentChildren,
            args: [IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: false }]
        }], allLayoutList: [{
            type: ContentChildren,
            args: [IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: true }]
        }], hierarchicalRecordTemplate: [{
            type: ViewChild,
            args: ['hierarchical_record_template', { read: TemplateRef, static: true }]
        }], childTemplate: [{
            type: ViewChild,
            args: ['child_record_template', { read: TemplateRef, static: true }]
        }], headerHierarchyExpander: [{
            type: ViewChild,
            args: ['headerHierarchyExpander', { read: ElementRef, static: true }]
        }], templateOutlets: [{
            type: ViewChildren,
            args: [IgxTemplateOutletDirective, { read: IgxTemplateOutletDirective }]
        }], hierarchicalRows: [{
            type: ViewChildren,
            args: [IgxChildGridRowComponent, { read: IgxChildGridRowComponent }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,