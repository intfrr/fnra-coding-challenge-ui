import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * This enumeration is used to configure whether the drop position is set before or after
 * the target.
 */
import * as ɵngcc0 from '@angular/core';
export var DropPosition;
(function (DropPosition) {
    DropPosition[DropPosition["BeforeDropTarget"] = 0] = "BeforeDropTarget";
    DropPosition[DropPosition["AfterDropTarget"] = 1] = "AfterDropTarget";
})(DropPosition || (DropPosition = {}));
/**
 * @hidden
 * @internal
 */
export class IgxColumnMovingService {
    get column() {
        return this._column;
    }
    set column(val) {
        if (val) {
            this._column = val;
        }
    }
    get icon() {
        return this._icon;
    }
    set icon(val) {
        if (val) {
            this._icon = val;
        }
    }
}
IgxColumnMovingService.ɵfac = function IgxColumnMovingService_Factory(t) { return new (t || IgxColumnMovingService)(); };
IgxColumnMovingService.ɵprov = i0.ɵɵdefineInjectable({ factory: function IgxColumnMovingService_Factory() { return new IgxColumnMovingService(); }, token: IgxColumnMovingService, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxColumnMovingService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92aW5nLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9tb3ZpbmcvbW92aW5nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBQ0gsTUFBTSxDQUFOLElBQVksWUFHWDtBQUhELFdBQVksWUFBWTtBQUN2QixJQUFHLHVFQUFnQixDQUFBO0FBQUMsSUFDakIscUVBQWUsQ0FBQTtBQUNuQixDQUFDLEVBSFcsWUFBWSxLQUFaLFlBQVksUUFHdkI7QUFHRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBSUgsTUFBTSxPQUFPLHNCQUFzQjtBQUNuQyxJQU1JLElBQUksTUFBTTtBQUFLLFFBQ1gsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQzVCLElBQUksQ0FBQztBQUNMLElBQUksSUFBSSxNQUFNLENBQUMsR0FBdUI7QUFDdEMsUUFBUSxJQUFJLEdBQUcsRUFBRTtBQUNqQixZQUFZLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO0FBQy9CLFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxJQUNJLElBQUksSUFBSTtBQUFLLFFBQ1QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQzFCLElBQUksQ0FBQztBQUNMLElBQUksSUFBSSxJQUFJLENBQUMsR0FBUTtBQUNyQixRQUFRLElBQUksR0FBRyxFQUFFO0FBQ2pCLFlBQVksSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7QUFDN0IsU0FBUztBQUNULElBQUksQ0FBQztBQUNMO3lIQUFDO0FBQ0Q7a0RBNUJDLFVBQVUsU0FBQztNQUNSLFVBQVUsRUFBRSxNQUFNO2FBQ3JCOzs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5cbi8qKlxuICogVGhpcyBlbnVtZXJhdGlvbiBpcyB1c2VkIHRvIGNvbmZpZ3VyZSB3aGV0aGVyIHRoZSBkcm9wIHBvc2l0aW9uIGlzIHNldCBiZWZvcmUgb3IgYWZ0ZXJcbiAqIHRoZSB0YXJnZXQuXG4gKi9cbmV4cG9ydCBlbnVtIERyb3BQb3NpdGlvbiB7XG4gICAgQmVmb3JlRHJvcFRhcmdldCxcbiAgICBBZnRlckRyb3BUYXJnZXRcbn1cblxuXG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBJZ3hDb2x1bW5Nb3ZpbmdTZXJ2aWNlIHtcbiAgICBwcml2YXRlIF9pY29uOiBhbnk7XG4gICAgcHJpdmF0ZSBfY29sdW1uOiBJZ3hDb2x1bW5Db21wb25lbnQ7XG5cbiAgICBwdWJsaWMgY2FuY2VsRHJvcDogYm9vbGVhbjtcbiAgICBwdWJsaWMgaXNDb2x1bW5Nb3Zpbmc6IGJvb2xlYW47XG5cbiAgICBnZXQgY29sdW1uKCk6IElneENvbHVtbkNvbXBvbmVudCB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2x1bW47XG4gICAgfVxuICAgIHNldCBjb2x1bW4odmFsOiBJZ3hDb2x1bW5Db21wb25lbnQpIHtcbiAgICAgICAgaWYgKHZhbCkge1xuICAgICAgICAgICAgdGhpcy5fY29sdW1uID0gdmFsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IGljb24oKTogYW55IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ljb247XG4gICAgfVxuICAgIHNldCBpY29uKHZhbDogYW55KSB7XG4gICAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgICAgIHRoaXMuX2ljb24gPSB2YWw7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=