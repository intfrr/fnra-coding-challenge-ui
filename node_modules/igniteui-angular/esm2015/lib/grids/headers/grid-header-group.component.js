import { Component, HostBinding, Input, ViewChild, ViewChildren, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, HostListener } from '@angular/core';
import { IgxFilteringService } from '../filtering/grid-filtering.service';
import { GridBaseAPIService } from '../api.service';
import { IgxColumnResizingService } from '../resizing/resizing.service';
import { IgxGridHeaderComponent } from './grid-header.component';
import { IgxGridFilteringCellComponent } from '../filtering/base/grid-filtering-cell.component';
import { isIE } from '../../core/utils';
import { GridSelectionMode } from '../common/enums';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../api.service';
import * as ɵngcc2 from '../resizing/resizing.service';
import * as ɵngcc3 from '../filtering/grid-filtering.service';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../moving/moving.drag.directive';
import * as ɵngcc6 from '../moving/moving.drop.directive';
import * as ɵngcc7 from '../../icon/icon.component';
import * as ɵngcc8 from './grid-header.component';
import * as ɵngcc9 from '../filtering/base/grid-filtering-cell.component';
import * as ɵngcc10 from '../resizing/resize-handle.directive';

function IgxGridHeaderGroupComponent_ng_container_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
} }
function IgxGridHeaderGroupComponent_ng_container_0_ng_container_3_igx_grid_header_group_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-header-group", 9);
} if (rf & 2) {
    const child_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("column", child_r10)("gridID", child_r10.grid.id)("igxColumnMovingDrag", child_r10)("ghostHost", ctx_r11.grid.outlet.nativeElement)("igxColumnMovingDrop", child_r10);
    ɵngcc0.ɵɵattribute("droppable", true);
} }
function IgxGridHeaderGroupComponent_ng_container_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridHeaderGroupComponent_ng_container_0_ng_container_3_igx_grid_header_group_1_Template, 1, 6, "igx-grid-header-group", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const child_r10 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r10.hidden);
} }
function IgxGridHeaderGroupComponent_ng_container_0_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 10);
} }
const _c0 = function (a0, a1) { return { "igx-grid__th--pinned-last": a0, "igx-grid__th--pinned-first": a1 }; };
const _c1 = function (a0, a1, a2, a3) { return { "grid-template-rows": a0, "grid-template-columns": a1, "-ms-grid-rows": a2, "-ms-grid-columns": a3 }; };
function IgxGridHeaderGroupComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridHeaderGroupComponent_ng_container_0_span_1_Template, 1, 0, "span", 3);
    ɵngcc0.ɵɵelementStart(2, "div", 4);
    ɵngcc0.ɵɵtemplate(3, IgxGridHeaderGroupComponent_ng_container_0_ng_container_3_Template, 2, 1, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, IgxGridHeaderGroupComponent_ng_container_0_span_4_Template, 1, 0, "span", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.grid.hasMovableColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c0, ctx_r0.hasLastPinnedChildColumn, ctx_r0.hasFirstPinnedChildColumn))("ngStyle", ɵngcc0.ɵɵpureFunction4(8, _c1, ctx_r0.column.getGridTemplate(true, false), ctx_r0.column.getGridTemplate(false, false), ctx_r0.column.getGridTemplate(true, true), ctx_r0.column.getGridTemplate(false, true)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.column.children);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.grid.hasMovableColumns);
} }
function IgxGridHeaderGroupComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", ctx_r2.columnTitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.column.header);
} }
function IgxGridHeaderGroupComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-icon");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("draggable", false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.column.expanded ? "expand_more" : "chevron_right", " ");
} }
function IgxGridHeaderGroupComponent_ng_container_5_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
} }
function IgxGridHeaderGroupComponent_ng_container_5_ng_container_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c2 = function (a0, a1) { return { $implicit: a0, column: a1 }; };
function IgxGridHeaderGroupComponent_ng_container_5_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 15);
    ɵngcc0.ɵɵlistener("click", function IgxGridHeaderGroupComponent_ng_container_5_ng_container_3_Template_div_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.toggleExpandState($event); });
    ɵngcc0.ɵɵtemplate(2, IgxGridHeaderGroupComponent_ng_container_5_ng_container_3_ng_container_2_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r14.column.collapsibleIndicatorTemplate ? ctx_r14.column.collapsibleIndicatorTemplate : _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c2, ctx_r14.column, ctx_r14.column));
} }
function IgxGridHeaderGroupComponent_ng_container_5_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridHeaderGroupComponent_ng_container_5_ng_container_6_igx_grid_header_group_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-header-group", 17);
} if (rf & 2) {
    const child_r21 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("min-width", ctx_r22.grid.getHeaderGroupWidth(child_r21))("flex-basis", ctx_r22.grid.getHeaderGroupWidth(child_r21));
    ɵngcc0.ɵɵproperty("column", child_r21)("gridID", child_r21.grid.id);
} }
function IgxGridHeaderGroupComponent_ng_container_5_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridHeaderGroupComponent_ng_container_5_ng_container_6_igx_grid_header_group_1_Template, 1, 6, "igx-grid-header-group", 16);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const child_r21 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r21.hidden);
} }
function IgxGridHeaderGroupComponent_ng_container_5_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 10);
} }
const _c3 = function (a0, a1, a2, a3, a4, a5) { return { "igx-grid__th--pinned-last": a0, "igx-grid__th--pinned-first": a1, "igx-grid__th--collapsible": a2, "igx-grid__th--selectable": a3, "igx-grid__th--selected": a4, "igx-grid__th--active": a5 }; };
function IgxGridHeaderGroupComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridHeaderGroupComponent_ng_container_5_span_1_Template, 1, 0, "span", 3);
    ɵngcc0.ɵɵelementStart(2, "div", 12);
    ɵngcc0.ɵɵlistener("pointerdown", function IgxGridHeaderGroupComponent_ng_container_5_Template_div_pointerdown_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.pointerdown($event); })("click", function IgxGridHeaderGroupComponent_ng_container_5_Template_div_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26.groupClicked($event); })("pointerenter", function IgxGridHeaderGroupComponent_ng_container_5_Template_div_pointerenter_2_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.onPinterEnter(); })("pointerleave", function IgxGridHeaderGroupComponent_ng_container_5_Template_div_pointerleave_2_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28.onPointerLeave(); });
    ɵngcc0.ɵɵtemplate(3, IgxGridHeaderGroupComponent_ng_container_5_ng_container_3_Template, 3, 5, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(4, IgxGridHeaderGroupComponent_ng_container_5_ng_container_4_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 14);
    ɵngcc0.ɵɵtemplate(6, IgxGridHeaderGroupComponent_ng_container_5_ng_container_6_Template, 2, 1, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, IgxGridHeaderGroupComponent_ng_container_5_span_7_Template, 1, 0, "span", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.grid.hasMovableColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction6(14, _c3, ctx_r5.hasLastPinnedChildColumn, ctx_r5.hasFirstPinnedChildColumn, ctx_r5.column.collapsible, ctx_r5.selectable, ctx_r5.selected, ctx_r5.activeGroup))("igxColumnMovingDrag", ctx_r5.column)("ghostHost", ctx_r5.grid.outlet.nativeElement)("igxColumnMovingDrop", ctx_r5.column);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r5.column.header || ctx_r5.column.field)("aria-expanded", ctx_r5.column.expanded)("aria-selected", ctx_r5.column.selected)("droppable", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.column.collapsible);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r5.column.headerTemplate ? ctx_r5.column.headerTemplate : _r1)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(21, _c2, ctx_r5.column, ctx_r5.column));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.column.children);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.grid.hasMovableColumns);
} }
function IgxGridHeaderGroupComponent_ng_container_6_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
} }
function IgxGridHeaderGroupComponent_ng_container_6_igx_grid_filtering_cell_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "igx-grid-filtering-cell", 21);
} if (rf & 2) {
    const ctx_r30 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("column", ctx_r30.column);
    ɵngcc0.ɵɵattribute("draggable", false);
} }
function IgxGridHeaderGroupComponent_ng_container_6_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 22);
} if (rf & 2) {
    const ctx_r31 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("cursor", ctx_r31.colResizingService.resizeCursor);
    ɵngcc0.ɵɵproperty("igxResizeHandle", ctx_r31.column);
    ɵngcc0.ɵɵattribute("draggable", false);
} }
function IgxGridHeaderGroupComponent_ng_container_6_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 10);
} }
function IgxGridHeaderGroupComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    const _r34 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridHeaderGroupComponent_ng_container_6_span_1_Template, 1, 0, "span", 3);
    ɵngcc0.ɵɵelementStart(2, "igx-grid-header", 18);
    ɵngcc0.ɵɵlistener("pointerdown", function IgxGridHeaderGroupComponent_ng_container_6_Template_igx_grid_header_pointerdown_2_listener() { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.activate(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, IgxGridHeaderGroupComponent_ng_container_6_igx_grid_filtering_cell_3_Template, 1, 2, "igx-grid-filtering-cell", 19);
    ɵngcc0.ɵɵtemplate(4, IgxGridHeaderGroupComponent_ng_container_6_span_4_Template, 1, 4, "span", 20);
    ɵngcc0.ɵɵtemplate(5, IgxGridHeaderGroupComponent_ng_container_6_span_5_Template, 1, 0, "span", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.grid.hasMovableColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("igxColumnMovingDrag", ctx_r6.column)("ghostHost", ctx_r6.grid.outlet.nativeElement)("igxColumnMovingDrop", ctx_r6.column)("gridID", ctx_r6.column.grid.id)("column", ctx_r6.column);
    ɵngcc0.ɵɵattribute("droppable", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.grid.allowFiltering && ctx_r6.grid.filterMode == "quickFilter");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.column.columnGroup && ctx_r6.column.resizable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.grid.hasMovableColumns);
} }
const Z_INDEX = 9999;
/**
 * @hidden
 */
export class IgxGridHeaderGroupComponent {
    constructor(cdr, gridAPI, element, colResizingService, filteringService) {
        this.cdr = cdr;
        this.gridAPI = gridAPI;
        this.element = element;
        this.colResizingService = colResizingService;
        this.filteringService = filteringService;
    }
    get gridRowSpan() {
        return this.column.gridRowSpan;
    }
    get gridColumnSpan() {
        return this.column.gridColumnSpan;
    }
    get rowEnd() {
        return this.column.rowEnd;
    }
    get colEnd() {
        return this.column.colEnd;
    }
    get rowStart() {
        return this.column.rowStart;
    }
    get colStart() {
        return this.column.colStart;
    }
    get active() {
        const node = this.grid.navigation.activeNode;
        return node && !this.column.columnGroup ?
            node.row === -1 && node.column === this.column.visibleIndex && node.level === this.column.level : false;
    }
    get activeGroup() {
        const node = this.grid.navigation.activeNode;
        return node ? node.row === -1 && node.column === this.column.visibleIndex && node.level === this.column.level : false;
    }
    /**
     * Gets the width of the header group.
     * @memberof IgxGridHeaderGroupComponent
     */
    get width() {
        return this.grid.getHeaderGroupWidth(this.column);
    }
    /**
     * Gets the style classes of the header group.
     * @memberof IgxGridHeaderGroupComponent
     */
    get styleClasses() {
        const defaultClasses = [
            'igx-grid__thead-item',
            this.column.headerGroupClasses
        ];
        const classList = {
            'igx-grid__th--pinned': this.isPinned,
            'igx-grid__th--pinned-last': this.isLastPinned,
            'igx-grid__th--pinned-first': this.isFirstPinned,
            'igx-grid__drag-col-header': this.isHeaderDragged,
            'igx-grid__th--filtering': this.isFiltered
        };
        for (const className of Object.keys(classList)) {
            if (classList[className]) {
                defaultClasses.push(className);
            }
        }
        return defaultClasses.join(' ');
    }
    /**
     * @hidden
     */
    get zIndex() {
        if (!this.column.pinned) {
            return null;
        }
        return Z_INDEX - this.grid.pinnedColumns.indexOf(this.column);
    }
    /**
     * Gets the grid of the header group.
     * @memberof IgxGridHeaderGroupComponent
     */
    get grid() {
        return this.gridAPI.grid;
    }
    /**
     * Gets whether the header group belongs to a column that is filtered.
     * @memberof IgxGridHeaderGroupComponent
     */
    get isFiltered() {
        return this.filteringService.filteredColumn === this.column;
    }
    /**
     * Gets whether the header group is stored in the last column in the pinned area.
     * @memberof IgxGridHeaderGroupComponent
     */
    get isLastPinned() {
        return !this.grid.hasColumnLayouts ? this.column.isLastPinned : false;
    }
    /**
     * Gets whether the header group is stored in the first column of the right pinned area.
     */
    get isFirstPinned() {
        return !this.grid.hasColumnLayouts ? this.column.isFirstPinned : false;
    }
    get groupDisplayStyle() {
        return this.grid.hasColumnLayouts && this.column.children && !isIE() ? 'flex' : '';
    }
    /**
     * Gets whether the header group is stored in a pinned column.
     * @memberof IgxGridHeaderGroupComponent
     */
    get isPinned() {
        return this.column.pinned;
    }
    /**
     * Gets whether the header group belongs to a column that is moved.
     * @memberof IgxGridHeaderGroupComponent
     */
    get isHeaderDragged() {
        return this.grid.draggedColumn === this.column;
    }
    /**
     * @hidden
     */
    get hasLastPinnedChildColumn() {
        return this.column.allChildren.some(child => child.isLastPinned);
    }
    /**
     * @hidden
     */
    get hasFirstPinnedChildColumn() {
        return this.column.allChildren.some(child => child.isFirstPinned);
    }
    /**
     * @hidden
     */
    get selectable() {
        const selectableChildren = this.column.allChildren.filter(c => !c.hidden && c.selectable && !c.columnGroup);
        return this.grid.columnSelection !== GridSelectionMode.none &&
            this.column.applySelectableClass
            && !this.selected && selectableChildren.length > 0
            && !this.grid.filteringService.isFilterRowVisible;
    }
    /**
     * @hidden
     */
    get selected() {
        return this.column.selected;
    }
    /**
     * @hidden
     */
    get height() {
        return this.element.nativeElement.getBoundingClientRect().height;
    }
    /**
     * @hidden
     */
    get columnTitle() {
        return this.column.title || this.column.header;
    }
    /**
     * @hidden
     */
    groupClicked(event) {
        const columnsToSelect = this.column.allChildren.filter(c => !c.hidden && c.selectable && !c.columnGroup).map(c => c.field);
        if (this.grid.columnSelection !== GridSelectionMode.none
            && columnsToSelect.length > 0 && !this.grid.filteringService.isFilterRowVisible) {
            const clearSelection = this.grid.columnSelection === GridSelectionMode.single || !event.ctrlKey;
            const rangeSelection = this.grid.columnSelection === GridSelectionMode.multiple && event.shiftKey;
            if (!this.selected) {
                this.grid.selectionService.selectColumns(columnsToSelect, clearSelection, rangeSelection, event);
            }
            else {
                const selectedFields = this.grid.selectionService.getSelectedColumns();
                if ((selectedFields.length === columnsToSelect.length) && selectedFields.every(el => columnsToSelect.includes(el))
                    || !clearSelection) {
                    this.grid.selectionService.deselectColumns(columnsToSelect, event);
                }
                else {
                    this.grid.selectionService.selectColumns(columnsToSelect, clearSelection, rangeSelection, event);
                }
            }
        }
    }
    /**
     * @hidden
     */
    toggleExpandState(event) {
        event.stopPropagation();
        this.column.expanded = !this.column.expanded;
    }
    /**
     * @hidden
     */
    onMouseDown(event) {
        // hack for preventing text selection in IE and Edge while dragging the resizer
        event.preventDefault();
    }
    /**
     * @hidden
     */
    // @HostListener('pointerdown', ['$event'])
    pointerdown(event) {
        event.stopPropagation();
        this.activate();
        this.grid.theadRow.nativeElement.focus();
    }
    /*
     * This method is necessary due to some specifics related with implementation of column moving
     * @hidden
     */
    activate() {
        this.grid.navigation.setActiveNode(this.activeNode);
        this.grid.theadRow.nativeElement.focus();
    }
    ngDoCheck() {
        this.cdr.markForCheck();
    }
    /**
     * @hidden
     */
    onPinterEnter() {
        this.column.applySelectableClass = true;
    }
    /**
     * @hidden
     */
    onPointerLeave() {
        this.column.applySelectableClass = false;
    }
    get activeNode() {
        return { row: -1, column: this.column.visibleIndex, level: this.column.level,
            mchCache: { level: this.column.level, visibleIndex: this.column.visibleIndex },
            layout: this.column.columnLayoutChild ? {
                rowStart: this.column.rowStart,
                colStart: this.column.colStart,
                rowEnd: this.column.rowEnd,
                colEnd: this.column.colEnd,
                columnVisibleIndex: this.column.visibleIndex
            } : null };
    }
}
IgxGridHeaderGroupComponent.ɵfac = function IgxGridHeaderGroupComponent_Factory(t) { return new (t || IgxGridHeaderGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GridBaseAPIService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.IgxColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.IgxFilteringService)); };
IgxGridHeaderGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxGridHeaderGroupComponent, selectors: [["igx-grid-header-group"]], viewQuery: function IgxGridHeaderGroupComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(IgxGridHeaderComponent, true);
        ɵngcc0.ɵɵviewQuery(IgxGridFilteringCellComponent, true);
        ɵngcc0.ɵɵviewQuery(IgxGridHeaderGroupComponent, true, IgxGridHeaderGroupComponent);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterCell = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);
    } }, hostVars: 24, hostBindings: function IgxGridHeaderGroupComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mousedown", function IgxGridHeaderGroupComponent_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClasses);
        ɵngcc0.ɵɵstyleProp("-ms-grid-row-span", ctx.gridRowSpan)("-ms-grid-column-span", ctx.gridColumnSpan)("grid-row-end", ctx.rowEnd)("grid-column-end", ctx.colEnd)("-ms-grid-row", ctx.rowStart)("grid-row-start", ctx.rowStart)("-ms-grid-column", ctx.colStart)("grid-column-start", ctx.colStart)("z-index", ctx.zIndex)("display", ctx.groupDisplayStyle);
        ɵngcc0.ɵɵclassProp("igx-grid__th--active", ctx.active);
    } }, inputs: { column: "column", gridID: "gridID" }, decls: 7, vars: 3, consts: [[4, "ngIf"], ["defaultColumn", ""], ["defaultCollapseIndicator", ""], ["class", "igx-grid__th-drop-indicator-left", 4, "ngIf"], [1, "igx-grid__thead-group", "igx-grid__mrl-block", 3, "ngClass", "ngStyle"], [4, "ngFor", "ngForOf"], ["class", "igx-grid__th-drop-indicator-right", 4, "ngIf"], [1, "igx-grid__th-drop-indicator-left"], ["class", "igx-grid__thead-subgroup", 3, "column", "gridID", "igxColumnMovingDrag", "ghostHost", "igxColumnMovingDrop", 4, "ngIf"], [1, "igx-grid__thead-subgroup", 3, "column", "gridID", "igxColumnMovingDrag", "ghostHost", "igxColumnMovingDrop"], [1, "igx-grid__th-drop-indicator-right"], [1, "igx-grid__th-group-title", 3, "title"], ["role", "columnheader", 1, "igx-grid__thead-title", 3, "ngClass", "igxColumnMovingDrag", "ghostHost", "igxColumnMovingDrop", "pointerdown", "click", "pointerenter", "pointerleave"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "igx-grid__thead-group"], [1, "igx-grid__th-expander", 3, "click"], ["class", "igx-grid__thead-subgroup", 3, "column", "gridID", "min-width", "flex-basis", 4, "ngIf"], [1, "igx-grid__thead-subgroup", 3, "column", "gridID"], [3, "igxColumnMovingDrag", "ghostHost", "igxColumnMovingDrop", "gridID", "column", "pointerdown"], [3, "column", 4, "ngIf"], ["class", "igx-grid__th-resize-handle", 3, "igxResizeHandle", "cursor", 4, "ngIf"], [3, "column"], [1, "igx-grid__th-resize-handle", 3, "igxResizeHandle"]], template: function IgxGridHeaderGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxGridHeaderGroupComponent_ng_container_0_Template, 5, 13, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, IgxGridHeaderGroupComponent_ng_template_1_Template, 2, 2, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(3, IgxGridHeaderGroupComponent_ng_template_3_Template, 2, 2, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, IgxGridHeaderGroupComponent_ng_container_5_Template, 8, 24, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(6, IgxGridHeaderGroupComponent_ng_container_6_Template, 6, 10, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.grid.hasColumnLayouts && ctx.column.columnGroup);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.grid.hasColumnLayouts && ctx.column.columnGroup);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.column.columnGroup);
    } }, directives: [ɵngcc4.NgIf, ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc4.NgForOf, IgxGridHeaderGroupComponent, ɵngcc5.IgxColumnMovingDragDirective, ɵngcc6.IgxColumnMovingDropDirective, ɵngcc7.IgxIconComponent, ɵngcc4.NgTemplateOutlet, ɵngcc8.IgxGridHeaderComponent, ɵngcc9.IgxGridFilteringCellComponent, ɵngcc10.IgxResizeHandleDirective], encapsulation: 2, changeDetection: 0 });
IgxGridHeaderGroupComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: GridBaseAPIService },
    { type: ElementRef },
    { type: IgxColumnResizingService },
    { type: IgxFilteringService }
];
IgxGridHeaderGroupComponent.propDecorators = {
    gridRowSpan: [{ type: HostBinding, args: ['style.-ms-grid-row-span',] }],
    gridColumnSpan: [{ type: HostBinding, args: ['style.-ms-grid-column-span',] }],
    rowEnd: [{ type: HostBinding, args: ['style.grid-row-end',] }],
    colEnd: [{ type: HostBinding, args: ['style.grid-column-end',] }],
    rowStart: [{ type: HostBinding, args: ['style.-ms-grid-row',] }, { type: HostBinding, args: ['style.grid-row-start',] }],
    colStart: [{ type: HostBinding, args: ['style.-ms-grid-column',] }, { type: HostBinding, args: ['style.grid-column-start',] }],
    column: [{ type: Input }],
    gridID: [{ type: Input }],
    active: [{ type: HostBinding, args: ['class.igx-grid__th--active',] }],
    headerCell: [{ type: ViewChild, args: [IgxGridHeaderComponent,] }],
    filterCell: [{ type: ViewChild, args: [IgxGridFilteringCellComponent,] }],
    children: [{ type: ViewChildren, args: [forwardRef(() => IgxGridHeaderGroupComponent), { read: IgxGridHeaderGroupComponent },] }],
    styleClasses: [{ type: HostBinding, args: ['class',] }],
    zIndex: [{ type: HostBinding, args: ['style.z-index',] }],
    groupDisplayStyle: [{ type: HostBinding, args: ['style.display',] }],
    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxGridHeaderGroupComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                selector: 'igx-grid-header-group',
                template: "<ng-container *ngIf=\"grid.hasColumnLayouts && column.columnGroup\">\n    <span *ngIf=\"grid.hasMovableColumns\" class=\"igx-grid__th-drop-indicator-left\"></span>\n    <div class=\"igx-grid__thead-group igx-grid__mrl-block\"\n     [ngClass]=\"{\n         'igx-grid__th--pinned-last': hasLastPinnedChildColumn,\n         'igx-grid__th--pinned-first': hasFirstPinnedChildColumn\n        }\"\n     [ngStyle]=\"{'grid-template-rows':column.getGridTemplate(true, false),\n     'grid-template-columns':column.getGridTemplate(false, false),\n     '-ms-grid-rows':column.getGridTemplate(true, true),\n     '-ms-grid-columns':column.getGridTemplate(false, true)}\">\n        <ng-container *ngFor=\"let child of column.children\" >\n            <igx-grid-header-group *ngIf=\"!child.hidden\" class=\"igx-grid__thead-subgroup\"\n                [column]=\"child\"\n                [gridID]=\"child.grid.id\"\n                [igxColumnMovingDrag]=\"child\"\n                [ghostHost]=\"grid.outlet.nativeElement\"\n                [attr.droppable]=\"true\"\n                [igxColumnMovingDrop]=\"child\">\n            </igx-grid-header-group>\n        </ng-container>\n    </div>\n    <span *ngIf=\"grid.hasMovableColumns\" class=\"igx-grid__th-drop-indicator-right\"></span>\n</ng-container>\n\n\n<ng-template #defaultColumn>\n    <span class=\"igx-grid__th-group-title\" [title]=\"columnTitle\">{{column.header}}</span>\n</ng-template>\n\n<ng-template #defaultCollapseIndicator>\n    <igx-icon [attr.draggable]=\"false\" >\n            {{column.expanded ? 'expand_more' : 'chevron_right'}} </igx-icon>\n</ng-template>\n\n<ng-container *ngIf=\"!grid.hasColumnLayouts && column.columnGroup\">\n    <span *ngIf=\"grid.hasMovableColumns\" class=\"igx-grid__th-drop-indicator-left\"></span>\n    <div class=\"igx-grid__thead-title\"\n        role=\"columnheader\"\n        [attr.aria-label]=\"column.header || column.field\"\n        [attr.aria-expanded]=\"column.expanded\"\n        [attr.aria-selected]=\"column.selected\"\n        [ngClass]=\"{\n            'igx-grid__th--pinned-last': hasLastPinnedChildColumn,\n            'igx-grid__th--pinned-first': hasFirstPinnedChildColumn,\n            'igx-grid__th--collapsible': column.collapsible,\n            'igx-grid__th--selectable': selectable,\n            'igx-grid__th--selected': selected,\n            'igx-grid__th--active': activeGroup}\"\n        [igxColumnMovingDrag]=\"column\"\n        [ghostHost]=\"grid.outlet.nativeElement\"\n        [attr.droppable]=\"true\"\n        [igxColumnMovingDrop]=\"column\"\n        (pointerdown)=\"pointerdown($event)\"\n        (click)=\"groupClicked($event)\"\n        (pointerenter)=\"onPinterEnter()\"\n        (pointerleave)=\"onPointerLeave()\"\n        >\n        <ng-container *ngIf=\"column.collapsible\">\n            <div class=\"igx-grid__th-expander\" (click)=\"toggleExpandState($event)\">\n                <ng-container\n                    *ngTemplateOutlet=\"column.collapsibleIndicatorTemplate ? column.collapsibleIndicatorTemplate : defaultCollapseIndicator; context: {$implicit: column, column: column}\">\n                </ng-container>\n            </div>\n        </ng-container>\n        <ng-container *ngTemplateOutlet=\"column.headerTemplate ? column.headerTemplate : defaultColumn; context: { $implicit: column, column: column}\">\n        </ng-container>\n    </div>\n    <div class=\"igx-grid__thead-group\">\n        <ng-container *ngFor=\"let child of column.children\">\n            <igx-grid-header-group *ngIf=\"!child.hidden\" class=\"igx-grid__thead-subgroup\"\n                                [column]=\"child\"\n                                [gridID]=\"child.grid.id\"\n                                [style.min-width]=\"grid.getHeaderGroupWidth(child)\"\n                                [style.flex-basis]=\"grid.getHeaderGroupWidth(child)\">\n            </igx-grid-header-group>\n        </ng-container>\n    </div>\n    <span *ngIf=\"grid.hasMovableColumns\" class=\"igx-grid__th-drop-indicator-right\"></span>\n</ng-container>\n\n<ng-container *ngIf=\"!column.columnGroup\">\n    <span *ngIf=\"grid.hasMovableColumns\" class=\"igx-grid__th-drop-indicator-left\"></span>\n    <igx-grid-header [igxColumnMovingDrag]=\"column\" [ghostHost]=\"grid.outlet.nativeElement\" [attr.droppable]=\"true\" (pointerdown)=\"activate()\" [igxColumnMovingDrop]=\"column\" [gridID]=\"column.grid.id\" [column]=\"column\"></igx-grid-header>\n    <igx-grid-filtering-cell *ngIf=\"grid.allowFiltering && grid.filterMode == 'quickFilter'\" [column]=\"column\" [attr.draggable]=\"false\"></igx-grid-filtering-cell>\n    <span *ngIf=\"!column.columnGroup && column.resizable\" class=\"igx-grid__th-resize-handle\"\n        [igxResizeHandle]=\"column\"\n        [attr.draggable]=\"false\"\n        [style.cursor]=\"colResizingService.resizeCursor\">\n    </span>\n    <span *ngIf=\"grid.hasMovableColumns\" class=\"igx-grid__th-drop-indicator-right\"></span>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.GridBaseAPIService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.IgxColumnResizingService }, { type: ɵngcc3.IgxFilteringService }]; }, { gridRowSpan: [{
            type: HostBinding,
            args: ['style.-ms-grid-row-span']
        }], gridColumnSpan: [{
            type: HostBinding,
            args: ['style.-ms-grid-column-span']
        }], rowEnd: [{
            type: HostBinding,
            args: ['style.grid-row-end']
        }], colEnd: [{
            type: HostBinding,
            args: ['style.grid-column-end']
        }], rowStart: [{
            type: HostBinding,
            args: ['style.-ms-grid-row']
        }, {
            type: HostBinding,
            args: ['style.grid-row-start']
        }], colStart: [{
            type: HostBinding,
            args: ['style.-ms-grid-column']
        }, {
            type: HostBinding,
            args: ['style.grid-column-start']
        }], active: [{
            type: HostBinding,
            args: ['class.igx-grid__th--active']
        }], styleClasses: [{
            type: HostBinding,
            args: ['class']
        }], zIndex: [{
            type: HostBinding,
            args: ['style.z-index']
        }], groupDisplayStyle: [{
            type: HostBinding,
            args: ['style.display']
        }], 
    /**
     * @hidden
     */
    onMouseDown: [{
            type: HostListener,
            args: ['mousedown', ['$event']]
        }], column: [{
            type: Input
        }], gridID: [{
            type: Input
        }], headerCell: [{
            type: ViewChild,
            args: [IgxGridHeaderComponent]
        }], filterCell: [{
            type: ViewChild,
            args: [IgxGridFilteringCellComponent]
        }], children: [{
            type: ViewChildren,
            args: [forwardRef(() => IgxGridHeaderGroupComponent), { read: IgxGridHeaderGroupComponent }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,