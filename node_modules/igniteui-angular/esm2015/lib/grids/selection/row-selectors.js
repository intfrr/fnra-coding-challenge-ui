import { Directive, TemplateRef } from '@angular/core';
/**
 * @hidden
 * @internal
 */
import * as ɵngcc0 from '@angular/core';
export class IgxRowSelectorDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
IgxRowSelectorDirective.ɵfac = function IgxRowSelectorDirective_Factory(t) { return new (t || IgxRowSelectorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
IgxRowSelectorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxRowSelectorDirective, selectors: [["", "igxRowSelector", ""]] });
IgxRowSelectorDirective.ctorParameters = () => [
    { type: TemplateRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxRowSelectorDirective, [{
        type: Directive,
        args: [{
                selector: '[igxRowSelector]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
/**
 * @hidden
 * @internal
 */
export class IgxHeadSelectorDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
IgxHeadSelectorDirective.ɵfac = function IgxHeadSelectorDirective_Factory(t) { return new (t || IgxHeadSelectorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
IgxHeadSelectorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxHeadSelectorDirective, selectors: [["", "igxHeadSelector", ""]] });
IgxHeadSelectorDirective.ctorParameters = () => [
    { type: TemplateRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxHeadSelectorDirective, [{
        type: Directive,
        args: [{
                selector: '[igxHeadSelector]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LXNlbGVjdG9ycy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2dyaWRzL3NlbGVjdGlvbi9yb3ctc2VsZWN0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBSUgsTUFBTSxPQUFPLHVCQUF1QjtBQUNwQyxJQUFJLFlBQW1CLFdBQTZCO0FBQUksUUFBakMsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO0FBQUMsSUFBRyxDQUFDO0FBQ3pEO21EQUxDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsa0JBQWtCLGNBQy9CO29JQUNJO0FBQUM7QUFDVSxZQVZJLFdBQVc7QUFBRzs7Ozs7OzRFQUFFO0FBYXBDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFJSCxNQUFNLE9BQU8sd0JBQXdCO0FBQ3JDLElBQUksWUFBbUIsV0FBNkI7QUFBSSxRQUFqQyxnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7QUFBQyxJQUFHLENBQUM7QUFDekQ7b0RBTEMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxtQkFBbUIsY0FDaEM7dUlBQ0k7QUFBQztBQUNVLFlBckJJLFdBQVc7QUFBRzs7Ozs7OzRFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2lneFJvd1NlbGVjdG9yXSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4Um93U2VsZWN0b3JEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PikgeyB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2lneEhlYWRTZWxlY3Rvcl0nXG59KVxuZXhwb3J0IGNsYXNzIElneEhlYWRTZWxlY3RvckRpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7IH1cbn1cbiJdfQ==