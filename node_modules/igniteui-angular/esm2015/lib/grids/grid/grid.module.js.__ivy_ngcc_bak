import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { IgxGroupAreaDropDirective, IgxGroupByRowTemplateDirective, IgxRowExpandedIndicatorDirective, IgxRowCollapsedIndicatorDirective, IgxHeaderExpandIndicatorDirective, IgxHeaderCollapseIndicatorDirective, IgxGridDetailTemplateDirective } from './grid.directives';
import { IgxGridComponent } from './grid.component';
import { IgxGridPagingPipe, IgxGridGroupingPipe, IgxGridSortingPipe, IgxGridFilteringPipe } from './grid.pipes';
import { IgxGridGroupByRowComponent } from './groupby-row.component';
import { IgxGridRowComponent } from './grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxGridSummaryPipe } from './grid.summary.pipe';
import { IgxGridDetailsPipe } from './grid.details.pipe';
import { IgxGridExpandableCellComponent } from './expandable-cell.component';
/**
 * @hidden
 */
export class IgxGridModule {
}
IgxGridModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxGridComponent,
                    IgxGridRowComponent,
                    IgxGridGroupByRowComponent,
                    IgxGroupByRowTemplateDirective,
                    IgxGridDetailTemplateDirective,
                    IgxRowExpandedIndicatorDirective,
                    IgxRowCollapsedIndicatorDirective,
                    IgxHeaderExpandIndicatorDirective,
                    IgxHeaderCollapseIndicatorDirective,
                    IgxGroupAreaDropDirective,
                    IgxGridGroupingPipe,
                    IgxGridPagingPipe,
                    IgxGridSortingPipe,
                    IgxGridFilteringPipe,
                    IgxGridSummaryPipe,
                    IgxGridDetailsPipe,
                    IgxGridExpandableCellComponent
                ],
                exports: [
                    IgxGridComponent,
                    IgxGridExpandableCellComponent,
                    IgxGridGroupByRowComponent,
                    IgxGridRowComponent,
                    IgxGroupByRowTemplateDirective,
                    IgxGridDetailTemplateDirective,
                    IgxRowExpandedIndicatorDirective,
                    IgxRowCollapsedIndicatorDirective,
                    IgxHeaderExpandIndicatorDirective,
                    IgxHeaderCollapseIndicatorDirective,
                    IgxGroupAreaDropDirective,
                    IgxGridGroupingPipe,
                    IgxGridPagingPipe,
                    IgxGridSortingPipe,
                    IgxGridFilteringPipe,
                    IgxGridSummaryPipe,
                    IgxGridDetailsPipe,
                    IgxGridCommonModule
                ],
                imports: [
                    IgxGridCommonModule,
                ],
                schemas: [CUSTOM_ELEMENTS_SCHEMA]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvZ3JpZC9ncmlkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLHNCQUFzQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFDSCx5QkFBeUIsRUFDekIsOEJBQThCLEVBQzlCLGdDQUFnQyxFQUNoQyxpQ0FBaUMsRUFDakMsaUNBQWlDLEVBQ2pDLG1DQUFtQyxFQUNuQyw4QkFBOEIsRUFDakMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNwRCxPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLG1CQUFtQixFQUNuQixrQkFBa0IsRUFDbEIsb0JBQW9CLEVBQ3ZCLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzNELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzdFOztHQUVHO0FBOENILE1BQU0sT0FBTyxhQUFhOzs7WUE3Q3pCLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osZ0JBQWdCO29CQUNoQixtQkFBbUI7b0JBQ25CLDBCQUEwQjtvQkFDMUIsOEJBQThCO29CQUM5Qiw4QkFBOEI7b0JBQzlCLGdDQUFnQztvQkFDaEMsaUNBQWlDO29CQUNqQyxpQ0FBaUM7b0JBQ2pDLG1DQUFtQztvQkFDbkMseUJBQXlCO29CQUN6QixtQkFBbUI7b0JBQ25CLGlCQUFpQjtvQkFDakIsa0JBQWtCO29CQUNsQixvQkFBb0I7b0JBQ3BCLGtCQUFrQjtvQkFDbEIsa0JBQWtCO29CQUNsQiw4QkFBOEI7aUJBQy9CO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxnQkFBZ0I7b0JBQ2hCLDhCQUE4QjtvQkFDOUIsMEJBQTBCO29CQUMxQixtQkFBbUI7b0JBQ25CLDhCQUE4QjtvQkFDOUIsOEJBQThCO29CQUM5QixnQ0FBZ0M7b0JBQ2hDLGlDQUFpQztvQkFDakMsaUNBQWlDO29CQUNqQyxtQ0FBbUM7b0JBQ25DLHlCQUF5QjtvQkFDekIsbUJBQW1CO29CQUNuQixpQkFBaUI7b0JBQ2pCLGtCQUFrQjtvQkFDbEIsb0JBQW9CO29CQUNwQixrQkFBa0I7b0JBQ2xCLGtCQUFrQjtvQkFDbEIsbUJBQW1CO2lCQUNwQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsbUJBQW1CO2lCQUNwQjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzthQUNsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBDVVNUT01fRUxFTUVOVFNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIElneEdyb3VwQXJlYURyb3BEaXJlY3RpdmUsXG4gICAgSWd4R3JvdXBCeVJvd1RlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneFJvd0V4cGFuZGVkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneFJvd0NvbGxhcHNlZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJFeHBhbmRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4SGVhZGVyQ29sbGFwc2VJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4R3JpZERldGFpbFRlbXBsYXRlRGlyZWN0aXZlXG59IGZyb20gJy4vZ3JpZC5kaXJlY3RpdmVzJztcbmltcG9ydCB7IElneEdyaWRDb21wb25lbnQgfSBmcm9tICcuL2dyaWQuY29tcG9uZW50JztcbmltcG9ydCB7XG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZEdyb3VwaW5nUGlwZSxcbiAgICBJZ3hHcmlkU29ydGluZ1BpcGUsXG4gICAgSWd4R3JpZEZpbHRlcmluZ1BpcGVcbn0gZnJvbSAnLi9ncmlkLnBpcGVzJztcbmltcG9ydCB7IElneEdyaWRHcm91cEJ5Um93Q29tcG9uZW50IH0gZnJvbSAnLi9ncm91cGJ5LXJvdy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZFJvd0NvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9ncmlkLWNvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4R3JpZFN1bW1hcnlQaXBlIH0gZnJvbSAnLi9ncmlkLnN1bW1hcnkucGlwZSc7XG5pbXBvcnQgeyBJZ3hHcmlkRGV0YWlsc1BpcGUgfSBmcm9tICcuL2dyaWQuZGV0YWlscy5waXBlJztcbmltcG9ydCB7IElneEdyaWRFeHBhbmRhYmxlQ2VsbENvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5kYWJsZS1jZWxsLmNvbXBvbmVudCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgSWd4R3JpZENvbXBvbmVudCxcbiAgICBJZ3hHcmlkUm93Q29tcG9uZW50LFxuICAgIElneEdyaWRHcm91cEJ5Um93Q29tcG9uZW50LFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Um93RXhwYW5kZWRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4Um93Q29sbGFwc2VkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEhlYWRlckV4cGFuZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJDb2xsYXBzZUluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneEdyaWRTdW1tYXJ5UGlwZSxcbiAgICBJZ3hHcmlkRGV0YWlsc1BpcGUsXG4gICAgSWd4R3JpZEV4cGFuZGFibGVDZWxsQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBJZ3hHcmlkQ29tcG9uZW50LFxuICAgIElneEdyaWRFeHBhbmRhYmxlQ2VsbENvbXBvbmVudCxcbiAgICBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcmlkUm93Q29tcG9uZW50LFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Um93RXhwYW5kZWRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4Um93Q29sbGFwc2VkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEhlYWRlckV4cGFuZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJDb2xsYXBzZUluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneEdyaWRTdW1tYXJ5UGlwZSxcbiAgICBJZ3hHcmlkRGV0YWlsc1BpcGUsXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZSxcbiAgXSxcbiAgc2NoZW1hczogW0NVU1RPTV9FTEVNRU5UU19TQ0hFTUFdXG59KVxuZXhwb3J0IGNsYXNzIElneEdyaWRNb2R1bGUge31cbiJdfQ==