import { Component, forwardRef, ChangeDetectionStrategy, HostBinding } from '@angular/core';
import { IgxRowDirective } from '../row.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../row-drag.directive';
import * as ɵngcc3 from '../../directives/for-of/for_of.directive';
import * as ɵngcc4 from '../../checkbox/checkbox.component';
import * as ɵngcc5 from '../cell.component';
import * as ɵngcc6 from './expandable-cell.component';
import * as ɵngcc7 from '../common/pipes';

function IgxGridRowComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵlistener("animationend", function IgxGridRowComponent_ng_template_1_Template_div_animationend_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.animationEndHandler(); });
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_1_ng_container_1_Template, 1, 0, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    const _r3 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵclassProp("igx-grid__tr--add-animate", ctx_r2.animateAdd);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function IgxGridRowComponent_ng_template_3_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵlistener("pointerdown", function IgxGridRowComponent_ng_template_3_ng_container_0_Template_div_pointerdown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); return $event.preventDefault(); })("click", function IgxGridRowComponent_ng_template_3_ng_container_0_Template_div_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("igx-grid__row-indentation igx-grid__row-indentation--level-", ctx_r20.grid.groupingExpressions.length, "");
} }
function IgxGridRowComponent_ng_template_3_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 12);
    ɵngcc0.ɵɵlistener("click", function IgxGridRowComponent_ng_template_3_ng_container_1_Template_div_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); return $event.stopPropagation(); });
    ɵngcc0.ɵɵtemplate(2, IgxGridRowComponent_ng_template_3_ng_container_1_ng_container_2_Template, 1, 0, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r21.resolveDragIndicatorClasses);
    ɵngcc0.ɵɵproperty("igxRowDrag", ctx_r21)("ghostTemplate", ctx_r21.grid.getDragGhostCustomTemplate());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r21.grid.dragIndicatorIconTemplate ? ctx_r21.grid.dragIndicatorIconTemplate : ctx_r21.grid.dragIndicatorIconBase);
} }
function IgxGridRowComponent_ng_template_3_ng_container_2_2_ng_template_0_Template(rf, ctx) { }
function IgxGridRowComponent_ng_template_3_ng_container_2_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_3_ng_container_2_2_ng_template_0_Template, 0, 0, "ng-template");
} }
const _c0 = function (a0, a1, a2) { return { index: a0, rowID: a1, selected: a2 }; };
const _c1 = function (a0) { return { $implicit: a0 }; };
function IgxGridRowComponent_ng_template_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r34 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 13);
    ɵngcc0.ɵɵlistener("pointerdown", function IgxGridRowComponent_ng_template_3_ng_container_2_Template_div_pointerdown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); return $event.preventDefault(); })("click", function IgxGridRowComponent_ng_template_3_ng_container_2_Template_div_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.onRowSelectorClick($event); });
    ɵngcc0.ɵɵtemplate(2, IgxGridRowComponent_ng_template_3_ng_container_2_2_Template, 1, 0, undefined, 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    const _r7 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r22.grid.rowSelectorTemplate ? ctx_r22.grid.rowSelectorTemplate : _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(6, _c1, ɵngcc0.ɵɵpureFunction3(2, _c0, ctx_r22.viewIndex, ctx_r22.rowID, ctx_r22.selected)));
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_1_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, "ng-container", 14);
} if (rf & 2) {
    const col_r41 = ctx.$implicit;
    const ctx_r40 = ɵngcc0.ɵɵnextContext(4);
    const _r11 = ɵngcc0.ɵɵreference(12);
    const _r9 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r41.visibleIndex === 0 && ctx_r40.grid.hasDetails ? _r11 : _r9)("ngTemplateOutletContext", ctx_r40.getContext(col_r41, ctx_r40));
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_1_ng_template_1_Template, 1, 2, "ng-template", 17);
    ɵngcc0.ɵɵpipe(2, "igxNotGrouped");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r36 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r36.pinnedColumns));
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_3_ng_container_3_ng_template_2_ng_container_0_Template, 1, 0, "ng-container", 14);
} if (rf & 2) {
    const col_r43 = ctx.$implicit;
    const ctx_r38 = ɵngcc0.ɵɵnextContext(3);
    const _r11 = ɵngcc0.ɵɵreference(12);
    const _r9 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r43.visibleIndex === 0 && ctx_r38.grid.hasDetails ? _r11 : _r9)("ngTemplateOutletContext", ctx_r38.getContext(col_r43, ctx_r38));
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_5_ng_template_1_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_5_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_5_ng_template_1_ng_container_0_Template, 1, 0, "ng-container", 14);
} if (rf & 2) {
    const col_r46 = ctx.$implicit;
    const ctx_r45 = ɵngcc0.ɵɵnextContext(4);
    const _r11 = ɵngcc0.ɵɵreference(12);
    const _r9 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r46.visibleIndex === 0 && ctx_r45.grid.hasDetails ? _r11 : _r9)("ngTemplateOutletContext", ctx_r45.getContext(col_r46, ctx_r45));
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_5_ng_template_1_Template, 1, 2, "ng-template", 17);
    ɵngcc0.ɵɵpipe(2, "igxNotGrouped");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r39.pinnedColumns));
} }
function IgxGridRowComponent_ng_template_3_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_1_Template, 3, 3, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(2, IgxGridRowComponent_ng_template_3_ng_container_3_ng_template_2_Template, 1, 2, "ng-template", 15, 16, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵpipe(4, "igxNotGrouped");
    ɵngcc0.ɵɵtemplate(5, IgxGridRowComponent_ng_template_3_ng_container_3_ng_container_5_Template, 3, 3, "ng-container", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r23.pinnedColumns.length > 0 && ctx_r23.grid.isPinningToStart);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("igxGridForOf", ɵngcc0.ɵɵpipeBind1(4, 8, ctx_r23.unpinnedColumns))("igxForScrollContainer", ctx_r23.grid.parentVirtDir)("igxForScrollOrientation", "horizontal")("igxForContainerSize", ctx_r23.grid.unpinnedWidth)("igxForSizePropName", "calcPixelWidth")("igxForTrackBy", ctx_r23.grid.trackColumnChanges);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r23.pinnedColumns.length > 0 && !ctx_r23.grid.isPinningToStart);
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r48 = ɵngcc0.ɵɵnextContext(3);
    const _r5 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ctx_r48.getContextMRL(ctx_r48.pinnedColumns, ctx_r48));
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_template_2_ng_template_1_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_template_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_3_ng_container_4_ng_template_2_ng_template_1_ng_container_0_Template, 1, 0, "ng-container", 14);
} if (rf & 2) {
    const col_r56 = ctx.$implicit;
    const ctx_r55 = ɵngcc0.ɵɵnextContext(4);
    const _r15 = ɵngcc0.ɵɵreference(16);
    const _r13 = ɵngcc0.ɵɵreference(14);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r56.visibleIndex === 0 && ctx_r55.grid.hasDetails ? _r15 : _r13)("ngTemplateOutletContext", ctx_r55.getContext(col_r56, ctx_r55));
} }
const _c2 = function (a0, a1, a2, a3) { return { "grid-template-rows": a0, "grid-template-columns": a1, "-ms-grid-rows": a2, "-ms-grid-columns": a3 }; };
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_4_ng_template_2_ng_template_1_Template, 1, 2, "ng-template", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r53 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction4(2, _c2, col_r53.getGridTemplate(true, false), col_r53.getGridTemplate(false, false), col_r53.getGridTemplate(true, true), col_r53.getGridTemplate(false, true)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", col_r53.children);
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_5_ng_container_1_Template, 1, 0, "ng-container", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r51 = ɵngcc0.ɵɵnextContext(3);
    const _r5 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ctx_r51.getContextMRL(ctx_r51.pinnedColumns, ctx_r51));
} }
function IgxGridRowComponent_ng_template_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_1_Template, 2, 2, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(2, IgxGridRowComponent_ng_template_3_ng_container_4_ng_template_2_Template, 2, 7, "ng-template", 15, 16, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵpipe(4, "igxTopLevel");
    ɵngcc0.ɵɵtemplate(5, IgxGridRowComponent_ng_template_3_ng_container_4_ng_container_5_Template, 2, 2, "ng-container", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.pinnedColumns.length > 0 && ctx_r24.grid.isPinningToStart);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("igxGridForOf", ɵngcc0.ɵɵpipeBind1(4, 8, ctx_r24.unpinnedColumns))("igxForScrollContainer", ctx_r24.grid.parentVirtDir)("igxForScrollOrientation", "horizontal")("igxForContainerSize", ctx_r24.grid.unpinnedWidth)("igxForSizePropName", "calcPixelWidth")("igxForTrackBy", ctx_r24.grid.trackColumnChanges);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.pinnedColumns.length > 0 && !ctx_r24.grid.isPinningToStart);
} }
function IgxGridRowComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_3_ng_container_0_Template, 2, 3, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_3_ng_container_1_Template, 3, 5, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(2, IgxGridRowComponent_ng_template_3_ng_container_2_Template, 3, 8, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(3, IgxGridRowComponent_ng_template_3_ng_container_3_Template, 6, 10, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(4, IgxGridRowComponent_ng_template_3_ng_container_4_Template, 6, 10, "ng-container", 10);
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.grid.groupingExpressions.length > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.rowDraggable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.showRowSelectors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.grid.hasColumnLayouts);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.grid.hasColumnLayouts);
} }
function IgxGridRowComponent_ng_template_5_div_0_ng_template_1_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function IgxGridRowComponent_ng_template_5_div_0_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_5_div_0_ng_template_1_ng_container_0_Template, 1, 0, "ng-container", 14);
} if (rf & 2) {
    const col_r63 = ctx.$implicit;
    const ctx_r62 = ɵngcc0.ɵɵnextContext(3);
    const _r15 = ɵngcc0.ɵɵreference(16);
    const _r13 = ɵngcc0.ɵɵreference(14);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r63.visibleIndex === 0 && ctx_r62.grid.hasDetails ? _r15 : _r13)("ngTemplateOutletContext", ctx_r62.getContext(col_r63, ctx_r62));
} }
const _c3 = function (a0, a1, a2, a3, a4) { return { "grid-template-rows": a0, "grid-template-columns": a1, "z-index": a2, "-ms-grid-rows": a3, "-ms-grid-columns": a4 }; };
function IgxGridRowComponent_ng_template_5_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_5_div_0_ng_template_1_Template, 1, 2, "ng-template", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r61 = ctx.$implicit;
    const ctx_r60 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("left", ctx_r60.mrlRightPinnedOffset);
    ɵngcc0.ɵɵclassProp("igx-grid__td--pinned-last", col_r61.hasLastPinnedChildColumn)("igx-grid__td--pinned-first", col_r61.hasFirstPinnedChildColumn);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction5(8, _c3, col_r61.getGridTemplate(true, false), col_r61.getGridTemplate(false, false), col_r61.pinned ? 1 : null, col_r61.getGridTemplate(true, true), col_r61.getGridTemplate(false, true)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", col_r61.children);
} }
function IgxGridRowComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_template_5_div_0_Template, 2, 14, "div", 19);
    ɵngcc0.ɵɵpipe(1, "igxTopLevel");
} if (rf & 2) {
    const pinnedColumns_r59 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(1, 1, pinnedColumns_r59));
} }
function IgxGridRowComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 20);
    ɵngcc0.ɵɵelement(1, "igx-checkbox", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("tabindex", -1)("checked", ctx_r8.selected)("readonly", true)("disabled", ctx_r8.deleted)("disableTransitions", ctx_r8.grid.disableTransitions)("aria-label", ctx_r8.rowCheckboxAriaLabel);
} }
const _c4 = function (a0, a1, a2, a3, a4, a5, a6) { return [a0, a1, a2, a3, a4, a5, a6]; };
const _c5 = function (a0, a1, a2, a3, a4, a5) { return [a0, a1, a2, a3, a4, a5]; };
function IgxGridRowComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-grid-cell", 22, 23);
    ɵngcc0.ɵɵpipe(2, "transactionState");
    ɵngcc0.ɵɵpipe(3, "igxStringReplace");
    ɵngcc0.ɵɵpipe(4, "igxCellStyleClasses");
    ɵngcc0.ɵɵpipe(5, "igxCellStyles");
    ɵngcc0.ɵɵpipe(6, "dataMapper");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r65 = ctx.$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("min-height", ctx_r10.cellHeight, "px")("min-width", col_r65.width)("max-width", col_r65.width)("flex-basis", col_r65.width)("left", col_r65.rightPinnedOffset);
    ɵngcc0.ɵɵclassProp("igx-grid__td--edited", ɵngcc0.ɵɵpipeBindV(2, 36, ɵngcc0.ɵɵpureFunction7(66, _c4, ctx_r10.rowID, col_r65.field, ctx_r10.grid.rowEditable, ctx_r10.grid.transactions, ctx_r10.grid.pipeTrigger, ctx_r10.grid.crudService.cell, ctx_r10.grid.crudService.row)))("igx-grid__td--pinned", col_r65.pinned)("igx-grid__td--number", col_r65.dataType === "number")("igx-grid__td--bool", col_r65.dataType === "boolean");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBindV(4, 48, ɵngcc0.ɵɵpureFunction6(74, _c5, col_r65.cellClasses, ctx_r10.rowData[col_r65.field], ctx_r10.rowData, col_r65.field, ctx_r10.viewIndex, ctx_r10.grid.pipeTrigger)))("ngStyle", ɵngcc0.ɵɵpipeBindV(5, 55, ɵngcc0.ɵɵpureFunction6(81, _c5, col_r65.cellStyles, ctx_r10.rowData[col_r65.field], ctx_r10.rowData, col_r65.field, ctx_r10.viewIndex, ctx_r10.grid.pipeTrigger)))("editMode", col_r65.editable && ctx_r10.crudService.targetInEdit(ctx_r10.index, col_r65.index))("column", col_r65)("formatter", col_r65.formatter)("row", ctx_r10)("lastPinned", col_r65.columnLayoutChild ? null : col_r65.isLastPinned)("firstPinned", col_r65.columnLayoutChild ? null : col_r65.isFirstPinned)("rowData", ctx_r10.rowData)("width", col_r65.getCellWidth())("visibleColumnIndex", col_r65.visibleIndex)("value", ɵngcc0.ɵɵpipeBind3(6, 62, ctx_r10.rowData, col_r65.field, ctx_r10.grid.pipeTrigger))("cellTemplate", col_r65.bodyTemplate)("lastSearchInfo", ctx_r10.grid.lastSearchInfo)("active", ctx_r10.isCellActive(col_r65.visibleIndex))("cellSelectionMode", ctx_r10.grid.cellSelection)("displayPinnedChip", ctx_r10.shouldDisplayPinnedChip(col_r65.visibleIndex));
    ɵngcc0.ɵɵattribute("aria-describedby", ɵngcc0.ɵɵpipeBind3(3, 44, ctx_r10.gridID + "_" + col_r65.field, ".", "_"));
} }
function IgxGridRowComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-expandable-grid-cell", 24, 23);
    ɵngcc0.ɵɵpipe(2, "transactionState");
    ɵngcc0.ɵɵpipe(3, "igxStringReplace");
    ɵngcc0.ɵɵpipe(4, "igxCellStyleClasses");
    ɵngcc0.ɵɵpipe(5, "igxCellStyles");
    ɵngcc0.ɵɵpipe(6, "dataMapper");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r67 = ctx.$implicit;
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("min-height", ctx_r12.cellHeight, "px")("min-width", col_r67.width)("max-width", col_r67.width)("flex-basis", col_r67.width);
    ɵngcc0.ɵɵclassProp("igx-grid__td--pinned", col_r67.pinned)("igx-grid__td--edited", ɵngcc0.ɵɵpipeBindV(2, 32, ɵngcc0.ɵɵpureFunction7(62, _c4, ctx_r12.rowID, col_r67.field, ctx_r12.grid.rowEditable, ctx_r12.grid.transactions, ctx_r12.grid.pipeTrigger, ctx_r12.grid.crudService.cell, ctx_r12.grid.crudService.row)))("igx-grid__td--number", col_r67.dataType === "number" && col_r67.visibleIndex !== 0);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBindV(4, 44, ɵngcc0.ɵɵpureFunction6(70, _c5, col_r67.cellClasses, ctx_r12.rowData[col_r67.field], ctx_r12.rowData, col_r67.field, ctx_r12.viewIndex, ctx_r12.grid.pipeTrigger)))("ngStyle", ɵngcc0.ɵɵpipeBindV(5, 51, ɵngcc0.ɵɵpureFunction6(77, _c5, col_r67.cellStyles, ctx_r12.rowData[col_r67.field], ctx_r12.rowData, col_r67.field, ctx_r12.viewIndex, ctx_r12.grid.pipeTrigger)))("expanded", ctx_r12.expanded)("editMode", col_r67.editable && ctx_r12.crudService.targetInEdit(ctx_r12.index, col_r67.index))("column", col_r67)("formatter", col_r67.formatter)("row", ctx_r12)("lastPinned", col_r67.columnLayoutChild ? null : col_r67.isLastPinned)("rowData", ctx_r12.rowData)("width", col_r67.getCellWidth())("visibleColumnIndex", col_r67.visibleIndex)("value", ɵngcc0.ɵɵpipeBind3(6, 58, ctx_r12.rowData, col_r67.field, ctx_r12.grid.pipeTrigger))("cellTemplate", col_r67.bodyTemplate)("lastSearchInfo", ctx_r12.grid.lastSearchInfo)("active", ctx_r12.isCellActive(col_r67.visibleIndex))("cellSelectionMode", ctx_r12.grid.cellSelection)("displayPinnedChip", ctx_r12.shouldDisplayPinnedChip(col_r67.visibleIndex));
    ɵngcc0.ɵɵattribute("aria-describedby", ɵngcc0.ɵɵpipeBind3(3, 40, ctx_r12.gridID + "_" + col_r67.field, ".", "_"));
} }
function IgxGridRowComponent_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-grid-cell", 25, 23);
    ɵngcc0.ɵɵpipe(2, "transactionState");
    ɵngcc0.ɵɵpipe(3, "igxStringReplace");
    ɵngcc0.ɵɵpipe(4, "igxCellStyleClasses");
    ɵngcc0.ɵɵpipe(5, "igxCellStyles");
    ɵngcc0.ɵɵpipe(6, "dataMapper");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r69 = ctx.$implicit;
    const ctx_r14 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("-ms-grid-row-span", col_r69.gridRowSpan)("-ms-grid-column-span", col_r69.gridColumnSpan)("grid-row-end", col_r69.rowEnd)("grid-column-end", col_r69.colEnd)("-ms-grid-row", col_r69.rowStart)("grid-row-start", col_r69.rowStart)("-ms-grid-column", col_r69.colStart)("grid-column-start", col_r69.colStart)("min-height", ctx_r14.cellHeight, "px");
    ɵngcc0.ɵɵclassProp("igx-grid__td--edited", ɵngcc0.ɵɵpipeBindV(2, 41, ɵngcc0.ɵɵpureFunction7(71, _c4, ctx_r14.rowID, col_r69.field, ctx_r14.grid.rowEditable, ctx_r14.grid.transactions, ctx_r14.grid.pipeTrigger, ctx_r14.grid.crudService.cell, ctx_r14.grid.crudService.row)))("igx-grid__td--pinned", col_r69.pinned)("igx-grid__td--number", col_r69.dataType === "number");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBindV(4, 53, ɵngcc0.ɵɵpureFunction6(79, _c5, col_r69.cellClasses, ctx_r14.rowData[col_r69.field], ctx_r14.rowData, col_r69.field, ctx_r14.viewIndex, ctx_r14.grid.pipeTrigger)))("ngStyle", ɵngcc0.ɵɵpipeBindV(5, 60, ɵngcc0.ɵɵpureFunction6(86, _c5, col_r69.cellStyles, ctx_r14.rowData[col_r69.field], ctx_r14.rowData, col_r69.field, ctx_r14.viewIndex, ctx_r14.grid.pipeTrigger)))("editMode", col_r69.editable && ctx_r14.crudService.targetInEdit(ctx_r14.index, col_r69.index))("column", col_r69)("lastPinned", col_r69.columnLayoutChild ? null : col_r69.isLastPinned)("firstPinned", col_r69.columnLayoutChild ? null : col_r69.isFirstPinned)("formatter", col_r69.formatter)("row", ctx_r14)("rowData", ctx_r14.rowData)("visibleColumnIndex", col_r69.visibleIndex)("value", ɵngcc0.ɵɵpipeBind3(6, 67, ctx_r14.rowData, col_r69.field, ctx_r14.grid.pipeTrigger))("cellTemplate", col_r69.bodyTemplate)("lastSearchInfo", ctx_r14.grid.lastSearchInfo)("active", ctx_r14.isCellActive(col_r69.visibleIndex))("cellSelectionMode", ctx_r14.grid.cellSelection)("displayPinnedChip", ctx_r14.shouldDisplayPinnedChip(col_r69.visibleIndex));
    ɵngcc0.ɵɵattribute("aria-describedby", ɵngcc0.ɵɵpipeBind3(3, 49, ctx_r14.gridID + "_" + col_r69.field, ".", "_"));
} }
function IgxGridRowComponent_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-expandable-grid-cell", 26, 23);
    ɵngcc0.ɵɵpipe(2, "transactionState");
    ɵngcc0.ɵɵpipe(3, "igxStringReplace");
    ɵngcc0.ɵɵpipe(4, "igxCellStyleClasses");
    ɵngcc0.ɵɵpipe(5, "igxCellStyles");
    ɵngcc0.ɵɵpipe(6, "dataMapper");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r71 = ctx.$implicit;
    const ctx_r16 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("-ms-grid-row-span", col_r71.gridRowSpan)("-ms-grid-column-span", col_r71.gridColumnSpan)("grid-row-end", col_r71.rowEnd)("grid-column-end", col_r71.colEnd)("-ms-grid-row", col_r71.rowStart)("grid-row-start", col_r71.rowStart)("-ms-grid-column", col_r71.colStart)("grid-column-start", col_r71.colStart)("min-height", ctx_r16.cellHeight, "px");
    ɵngcc0.ɵɵclassProp("igx-grid__td--edited", ɵngcc0.ɵɵpipeBindV(2, 41, ɵngcc0.ɵɵpureFunction7(71, _c4, ctx_r16.rowID, col_r71.field, ctx_r16.grid.rowEditable, ctx_r16.grid.transactions, ctx_r16.grid.pipeTrigger, ctx_r16.grid.crudService.cell, ctx_r16.grid.crudService.row)))("igx-grid__td--pinned", col_r71.pinned)("igx-grid__td--number", col_r71.dataType === "number" && col_r71.visibleIndex !== 0);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBindV(4, 53, ɵngcc0.ɵɵpureFunction6(79, _c5, col_r71.cellClasses, ctx_r16.rowData[col_r71.field], ctx_r16.rowData, col_r71.field, ctx_r16.viewIndex, ctx_r16.grid.pipeTrigger)))("ngStyle", ɵngcc0.ɵɵpipeBindV(5, 60, ɵngcc0.ɵɵpureFunction6(86, _c5, col_r71.cellStyles, ctx_r16.rowData[col_r71.field], ctx_r16.rowData, col_r71.field, ctx_r16.viewIndex, ctx_r16.grid.pipeTrigger)))("expanded", ctx_r16.expanded)("editMode", col_r71.editable && ctx_r16.crudService.targetInEdit(ctx_r16.index, col_r71.index))("column", col_r71)("lastPinned", col_r71.columnLayoutChild ? null : col_r71.isLastPinned)("formatter", col_r71.formatter)("row", ctx_r16)("rowData", ctx_r16.rowData)("visibleColumnIndex", col_r71.visibleIndex)("value", ɵngcc0.ɵɵpipeBind3(6, 67, ctx_r16.rowData, col_r71.field, ctx_r16.grid.pipeTrigger))("cellTemplate", col_r71.bodyTemplate)("lastSearchInfo", ctx_r16.grid.lastSearchInfo)("active", ctx_r16.isCellActive(col_r71.visibleIndex))("cellSelectionMode", ctx_r16.grid.cellSelection)("displayPinnedChip", ctx_r16.shouldDisplayPinnedChip(col_r71.visibleIndex));
    ɵngcc0.ɵɵattribute("aria-describedby", ɵngcc0.ɵɵpipeBind3(3, 49, ctx_r16.gridID + "_" + col_r71.field, ".", "_"));
} }
export class IgxGridRowComponent extends IgxRowDirective {
    get hasColumnLayouts() {
        return this.grid.hasColumnLayouts;
    }
    getContext(col, row) {
        return {
            $implicit: col,
            row: row
        };
    }
    get mrlRightPinnedOffset() {
        return !this.grid.isPinningToStart ?
            -this.grid.pinnedWidth - this.grid.headerFeaturesWidth + 'px' :
            null;
    }
    getContextMRL(pinnedCols, row) {
        return {
            $implicit: pinnedCols,
            row: row
        };
    }
    get expanded() {
        return this.gridAPI.get_row_expansion_state(this.rowData);
    }
}
IgxGridRowComponent.ɵfac = function IgxGridRowComponent_Factory(t) { return ɵIgxGridRowComponent_BaseFactory(t || IgxGridRowComponent); };
IgxGridRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxGridRowComponent, selectors: [["igx-grid-row"]], hostVars: 2, hostBindings: function IgxGridRowComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("igx-grid__tr--mrl", ctx.hasColumnLayouts);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: IgxRowDirective, useExisting: forwardRef(() => IgxGridRowComponent) }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 17, vars: 1, consts: [[4, "ngTemplateOutlet"], ["addTemp", ""], ["defaultTemp", ""], ["mrlPinnedTemplate", ""], ["rowSelectorBaseTemplate", ""], ["cellTemplate", ""], ["expandableCellTemplate", ""], ["mrlCellTemplate", ""], ["mrlExpandableCellTemplate", ""], [1, "igx-grid__tr--inner", 3, "animationend"], [4, "ngIf"], [3, "pointerdown", "click"], [3, "igxRowDrag", "ghostTemplate", "click"], [1, "igx-grid__cbx-selection", 3, "pointerdown", "click"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["igxGridFor", "", 3, "igxGridForOf", "igxForScrollContainer", "igxForScrollOrientation", "igxForContainerSize", "igxForSizePropName", "igxForTrackBy"], ["igxDirRef", ""], ["ngFor", "", 3, "ngForOf"], [1, "igx-grid__mrl-block", 3, "ngStyle"], ["class", "igx-grid__mrl-block", 3, "igx-grid__td--pinned-last", "igx-grid__td--pinned-first", "left", "ngStyle", 4, "ngFor", "ngForOf"], [1, "igx-grid__cbx-padding"], ["disableRipple", "true", 3, "tabindex", "checked", "readonly", "disabled", "disableTransitions", "aria-label"], [1, "igx-grid__td", "igx-grid__td--fw", 3, "ngClass", "ngStyle", "editMode", "column", "formatter", "row", "lastPinned", "firstPinned", "rowData", "width", "visibleColumnIndex", "value", "cellTemplate", "lastSearchInfo", "active", "cellSelectionMode", "displayPinnedChip"], ["cell", ""], [1, "igx-grid__td", "igx-grid__td--fw", "igx-grid__td--tree-cell", 3, "ngClass", "ngStyle", "expanded", "editMode", "column", "formatter", "row", "lastPinned", "rowData", "width", "visibleColumnIndex", "value", "cellTemplate", "lastSearchInfo", "active", "cellSelectionMode", "displayPinnedChip"], [1, "igx-grid__td", "igx-grid__td--fw", 3, "ngClass", "ngStyle", "editMode", "column", "lastPinned", "firstPinned", "formatter", "row", "rowData", "visibleColumnIndex", "value", "cellTemplate", "lastSearchInfo", "active", "cellSelectionMode", "displayPinnedChip"], [1, "igx-grid__td", "igx-grid__td--fw", "igx-grid__td--tree-cell", 3, "ngClass", "ngStyle", "expanded", "editMode", "column", "lastPinned", "formatter", "row", "rowData", "visibleColumnIndex", "value", "cellTemplate", "lastSearchInfo", "active", "cellSelectionMode", "displayPinnedChip"]], template: function IgxGridRowComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxGridRowComponent_ng_container_0_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, IgxGridRowComponent_ng_template_1_Template, 2, 3, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(3, IgxGridRowComponent_ng_template_3_Template, 5, 5, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, IgxGridRowComponent_ng_template_5_Template, 2, 3, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(7, IgxGridRowComponent_ng_template_7_Template, 2, 6, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(9, IgxGridRowComponent_ng_template_9_Template, 7, 88, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(11, IgxGridRowComponent_ng_template_11_Template, 7, 84, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(13, IgxGridRowComponent_ng_template_13_Template, 7, 93, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(15, IgxGridRowComponent_ng_template_15_Template, 7, 93, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        const _r3 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.addRow ? _r1 : _r3);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc2.IgxRowDragDirective, ɵngcc3.IgxGridForOfDirective, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc4.IgxCheckboxComponent, ɵngcc5.IgxGridCellComponent, ɵngcc1.NgClass, ɵngcc6.IgxGridExpandableCellComponent], pipes: [ɵngcc7.IgxGridNotGroupedPipe, ɵngcc7.IgxGridTopLevelColumns, ɵngcc7.IgxGridTransactionStatePipe, ɵngcc7.IgxStringReplacePipe, ɵngcc7.IgxGridCellStyleClassesPipe, ɵngcc7.IgxGridCellStylesPipe, ɵngcc7.IgxGridDataMapperPipe], encapsulation: 2, changeDetection: 0 });
IgxGridRowComponent.propDecorators = {
    hasColumnLayouts: [{ type: HostBinding, args: ['class.igx-grid__tr--mrl',] }]
};
const ɵIgxGridRowComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IgxGridRowComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxGridRowComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                selector: 'igx-grid-row',
                template: "\n <ng-container *ngTemplateOutlet='addRow ? addTemp : defaultTemp'></ng-container>\n\n<ng-template #addTemp>\n    <div class='igx-grid__tr--inner' [class.igx-grid__tr--add-animate]='animateAdd' (animationend)='animationEndHandler()'>\n        <ng-container *ngTemplateOutlet='defaultTemp'></ng-container>\n    </div>\n</ng-template>\n<ng-template #defaultTemp>\n<ng-container *ngIf=\"grid.groupingExpressions.length > 0\">\n    <div class=\"igx-grid__row-indentation igx-grid__row-indentation--level-{{grid.groupingExpressions.length}}\" (pointerdown)=\"$event.preventDefault()\" (click)=\"$event.stopPropagation()\"></div>\n</ng-container>\n<ng-container *ngIf=\"rowDraggable\">\n    <div [class]=\"resolveDragIndicatorClasses\" [igxRowDrag]=\"this\" (click)=\"$event.stopPropagation()\" [ghostTemplate]=\"this.grid.getDragGhostCustomTemplate()\">\n        <ng-container *ngTemplateOutlet=\"this.grid.dragIndicatorIconTemplate ? this.grid.dragIndicatorIconTemplate : this.grid.dragIndicatorIconBase\"></ng-container>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"this.showRowSelectors\">\n    <div class=\"igx-grid__cbx-selection\" (pointerdown)=\"$event.preventDefault()\" (click)=\"onRowSelectorClick($event)\">\n         <ng-template *ngTemplateOutlet=\"\n            this.grid.rowSelectorTemplate ? this.grid.rowSelectorTemplate : rowSelectorBaseTemplate;\n            context: { $implicit: { index: viewIndex, rowID: rowID, selected: selected }}\">\n        </ng-template>\n    </div>\n</ng-container>\n\n<ng-container *ngIf=\"!grid.hasColumnLayouts\">\n    <ng-container *ngIf=\"pinnedColumns.length > 0 && grid.isPinningToStart\">\n        <ng-template ngFor let-col [ngForOf]=\"pinnedColumns | igxNotGrouped\">\n                <ng-container *ngTemplateOutlet=\"col.visibleIndex === 0 && grid.hasDetails ? expandableCellTemplate : cellTemplate; context: getContext(col, this)\"></ng-container>\n        </ng-template>\n    </ng-container>\n    <ng-template igxGridFor let-col [igxGridForOf]=\"unpinnedColumns | igxNotGrouped\" [igxForScrollContainer]=\"grid.parentVirtDir\" [igxForScrollOrientation]=\"'horizontal'\" [igxForContainerSize]='grid.unpinnedWidth' [igxForSizePropName]='\"calcPixelWidth\"' [igxForTrackBy]='grid.trackColumnChanges' #igxDirRef>\n        <ng-container *ngTemplateOutlet=\"col.visibleIndex === 0 && grid.hasDetails ? expandableCellTemplate : cellTemplate; context: getContext(col, this)\"></ng-container>\n    </ng-template>\n    <ng-container *ngIf=\"pinnedColumns.length > 0 && !grid.isPinningToStart\">\n        <ng-template ngFor let-col [ngForOf]=\"pinnedColumns | igxNotGrouped\">\n                <ng-container *ngTemplateOutlet=\"col.visibleIndex === 0 && grid.hasDetails ? expandableCellTemplate : cellTemplate; context: getContext(col, this)\"></ng-container>\n        </ng-template>\n    </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"grid.hasColumnLayouts\">\n    <ng-container *ngIf=\"pinnedColumns.length > 0 && grid.isPinningToStart\">\n        <ng-container *ngTemplateOutlet=\"mrlPinnedTemplate; context: getContextMRL(pinnedColumns, this)\"></ng-container>\n    </ng-container>\n    <ng-template igxGridFor let-col [igxGridForOf]=\"unpinnedColumns | igxTopLevel\" [igxForScrollContainer]=\"grid.parentVirtDir\" let-colIndex=\"index\" [igxForScrollOrientation]=\"'horizontal'\" [igxForContainerSize]='grid.unpinnedWidth' [igxForSizePropName]='\"calcPixelWidth\"' [igxForTrackBy]='grid.trackColumnChanges' #igxDirRef>\n        <div class=\"igx-grid__mrl-block\" [ngStyle]=\"{\n            'grid-template-rows':col.getGridTemplate(true, false),\n            'grid-template-columns':col.getGridTemplate(false, false),\n            '-ms-grid-rows':col.getGridTemplate(true, true),\n            '-ms-grid-columns':col.getGridTemplate(false, true)\n        }\">\n            <ng-template ngFor let-col [ngForOf]=\"col.children\">\n                    <ng-container *ngTemplateOutlet=\"col.visibleIndex === 0 && grid.hasDetails ? mrlExpandableCellTemplate : mrlCellTemplate; context: getContext(col, this)\"></ng-container>\n            </ng-template>\n        </div>\n    </ng-template>\n\n    <ng-container *ngIf=\"pinnedColumns.length > 0 && !grid.isPinningToStart\">\n        <ng-container *ngTemplateOutlet=\"mrlPinnedTemplate; context: getContextMRL(pinnedColumns, this)\"></ng-container>\n    </ng-container>\n</ng-container>\n</ng-template>\n\n<ng-template #mrlPinnedTemplate let-pinnedColumns>\n    <div *ngFor=\"let col of pinnedColumns | igxTopLevel\" class=\"igx-grid__mrl-block\"\n    [class.igx-grid__td--pinned-last]=\"col.hasLastPinnedChildColumn\"\n    [class.igx-grid__td--pinned-first]=\"col.hasFirstPinnedChildColumn\"\n    [style.left]=\"mrlRightPinnedOffset\"\n    [ngStyle]=\"{\n        'grid-template-rows':col.getGridTemplate(true, false),\n        'grid-template-columns':col.getGridTemplate(false, false),\n        'z-index': col.pinned ? 1 : null,\n        '-ms-grid-rows':col.getGridTemplate(true, true),\n        '-ms-grid-columns':col.getGridTemplate(false, true)\n    }\">\n        <ng-template ngFor let-col [ngForOf]=\"col.children\">\n                <ng-container *ngTemplateOutlet=\"col.visibleIndex === 0 && grid.hasDetails? mrlExpandableCellTemplate : mrlCellTemplate; context: getContext(col, this)\"></ng-container>\n        </ng-template>\n    </div>\n</ng-template>\n\n<ng-template #rowSelectorBaseTemplate>\n    <div class=\"igx-grid__cbx-padding\">\n        <igx-checkbox\n            [tabindex]=\"-1\"\n            [checked]=\"selected\"\n            [readonly]=\"true\"\n            [disabled]=\"deleted\"\n            disableRipple=\"true\"\n            [disableTransitions]=\"grid.disableTransitions\"\n            [aria-label]=\"rowCheckboxAriaLabel\">\n        </igx-checkbox>\n    </div>\n</ng-template>\n\n<ng-template #cellTemplate let-col>\n        <igx-grid-cell\n        class=\"igx-grid__td igx-grid__td--fw\"\n        [class.igx-grid__td--edited]=\"rowID | transactionState:col.field:grid.rowEditable:grid.transactions:grid.pipeTrigger:grid.crudService.cell:grid.crudService.row\"\n        [attr.aria-describedby]=\"gridID + '_' + col.field | igxStringReplace:'.':'_'\"\n        [class.igx-grid__td--pinned]=\"col.pinned\"\n        [class.igx-grid__td--number]=\"col.dataType === 'number'\"\n        [class.igx-grid__td--bool]=\"col.dataType === 'boolean'\"\n        [ngClass]=\"col.cellClasses | igxCellStyleClasses:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [ngStyle]=\"col.cellStyles | igxCellStyles:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [editMode]=\"col.editable && crudService.targetInEdit(index, col.index)\"\n        [column]=\"col\"\n        [formatter]=\"col.formatter\"\n        [row]=\"this\"\n        [lastPinned]=\"col.columnLayoutChild ? null : col.isLastPinned\"\n        [firstPinned]=\"col.columnLayoutChild ? null : col.isFirstPinned\"\n        [style.min-height.px]=\"cellHeight\"\n        [rowData]=\"rowData\"\n        [style.min-width]=\"col.width\"\n        [style.max-width]=\"col.width\"\n        [style.flex-basis]=\"col.width\"\n        [style.left]=\"col.rightPinnedOffset\"\n        [width]=\"col.getCellWidth()\"\n        [visibleColumnIndex]=\"col.visibleIndex\"\n        [value]=\"rowData | dataMapper:col.field:grid.pipeTrigger\"\n        [cellTemplate]=\"col.bodyTemplate\"\n        [lastSearchInfo]=\"grid.lastSearchInfo\"\n        [active]=\"isCellActive(col.visibleIndex)\"\n        [cellSelectionMode]=\"grid.cellSelection\"\n        [displayPinnedChip]=\"shouldDisplayPinnedChip(col.visibleIndex)\"\n        #cell>\n    </igx-grid-cell>\n</ng-template>\n\n<ng-template #expandableCellTemplate let-col>\n    <igx-expandable-grid-cell\n        [class.igx-grid__td--pinned]=\"col.pinned\"\n        [attr.aria-describedby]=\"gridID + '_' + col.field | igxStringReplace:'.':'_'\"\n        class=\"igx-grid__td igx-grid__td--fw igx-grid__td--tree-cell\"\n        [class.igx-grid__td--edited]=\"rowID | transactionState:col.field:grid.rowEditable:grid.transactions:grid.pipeTrigger:grid.crudService.cell:grid.crudService.row\"\n        [class.igx-grid__td--number]=\"col.dataType === 'number' && col.visibleIndex !== 0\"\n        [ngClass]=\"col.cellClasses | igxCellStyleClasses:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [ngStyle]=\"col.cellStyles | igxCellStyles:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [expanded]=\"expanded\"\n        [editMode]=\"col.editable && crudService.targetInEdit(index, col.index)\"\n        [column]=\"col\"\n        [formatter]=\"col.formatter\"\n        [row]=\"this\"\n        [lastPinned]=\"col.columnLayoutChild ? null : col.isLastPinned\"\n        [style.min-height.px]=\"cellHeight\"\n        [rowData]=\"rowData\"\n        [style.min-width]=\"col.width\"\n        [style.max-width]=\"col.width\"\n        [style.flex-basis]=\"col.width\"\n        [width]=\"col.getCellWidth()\"\n        [visibleColumnIndex]=\"col.visibleIndex\"\n        [value]=\"rowData | dataMapper:col.field:grid.pipeTrigger\"\n        [cellTemplate]=\"col.bodyTemplate\"\n        [lastSearchInfo]=\"grid.lastSearchInfo\"\n        [active]=\"isCellActive(col.visibleIndex)\"\n        [cellSelectionMode]=\"grid.cellSelection\"\n        [displayPinnedChip]=\"shouldDisplayPinnedChip(col.visibleIndex)\"\n        #cell>\n    </igx-expandable-grid-cell>\n</ng-template>\n\n<ng-template #mrlCellTemplate let-col>\n    <igx-grid-cell\n        class=\"igx-grid__td igx-grid__td--fw\"\n        [class.igx-grid__td--edited]=\"rowID | transactionState:col.field:grid.rowEditable:grid.transactions:grid.pipeTrigger:grid.crudService.cell:grid.crudService.row\"\n        [attr.aria-describedby]=\"gridID + '_' + col.field | igxStringReplace:'.':'_'\"\n        [class.igx-grid__td--pinned]=\"col.pinned\"\n        [class.igx-grid__td--number]=\"col.dataType === 'number'\"\n        [ngClass]=\"col.cellClasses | igxCellStyleClasses:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [ngStyle]=\"col.cellStyles | igxCellStyles:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [editMode]=\"col.editable && crudService.targetInEdit(index, col.index)\"\n        [column]=\"col\"\n        [style.-ms-grid-row-span]=\"col.gridRowSpan\"\n        [style.-ms-grid-column-span]=\"col.gridColumnSpan\"\n        [style.grid-row-end]=\"col.rowEnd\"\n        [style.grid-column-end]=\"col.colEnd\"\n        [style.-ms-grid-row]=\"col.rowStart\"\n        [style.grid-row-start]=\"col.rowStart\"\n        [style.-ms-grid-column]=\"col.colStart\"\n        [style.grid-column-start]=\"col.colStart\"\n        [lastPinned]=\"col.columnLayoutChild ? null : col.isLastPinned\"\n        [firstPinned]=\"col.columnLayoutChild ? null : col.isFirstPinned\"\n        [formatter]=\"col.formatter\"\n        [row]=\"this\"\n        [style.min-height.px]=\"cellHeight\"\n        [rowData]=\"rowData\"\n        [visibleColumnIndex]=\"col.visibleIndex\"\n        [value]=\"rowData | dataMapper:col.field:grid.pipeTrigger\"\n        [cellTemplate]=\"col.bodyTemplate\"\n        [lastSearchInfo]=\"grid.lastSearchInfo\"\n        [active]=\"isCellActive(col.visibleIndex)\"\n        [cellSelectionMode]=\"grid.cellSelection\"\n        [displayPinnedChip]=\"shouldDisplayPinnedChip(col.visibleIndex)\"\n        #cell>\n    </igx-grid-cell>\n</ng-template>\n\n<ng-template #mrlExpandableCellTemplate let-col>\n    <igx-expandable-grid-cell\n        class=\"igx-grid__td igx-grid__td--fw igx-grid__td--tree-cell\"\n        [class.igx-grid__td--edited]=\"rowID | transactionState:col.field:grid.rowEditable:grid.transactions:grid.pipeTrigger:grid.crudService.cell:grid.crudService.row\"\n        [attr.aria-describedby]=\"gridID + '_' + col.field | igxStringReplace:'.':'_'\"\n        [class.igx-grid__td--pinned]=\"col.pinned\"\n        [class.igx-grid__td--number]=\"col.dataType === 'number' && col.visibleIndex !== 0\"\n        [ngClass]=\"col.cellClasses | igxCellStyleClasses:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [ngStyle]=\"col.cellStyles | igxCellStyles:rowData[col.field]:rowData:col.field:viewIndex:grid.pipeTrigger\"\n        [expanded]=\"expanded\"\n        [editMode]=\"col.editable && crudService.targetInEdit(index, col.index)\"\n        [column]=\"col\"\n        [style.-ms-grid-row-span]=\"col.gridRowSpan\"\n        [style.-ms-grid-column-span]=\"col.gridColumnSpan\"\n        [style.grid-row-end]=\"col.rowEnd\"\n        [style.grid-column-end]=\"col.colEnd\"\n        [style.-ms-grid-row]=\"col.rowStart\"\n        [style.grid-row-start]=\"col.rowStart\"\n        [style.-ms-grid-column]=\"col.colStart\"\n        [style.grid-column-start]=\"col.colStart\"\n        [lastPinned]=\"col.columnLayoutChild ? null : col.isLastPinned\"\n        [formatter]=\"col.formatter\"\n        [row]=\"this\"\n        [style.min-height.px]=\"cellHeight\"\n        [rowData]=\"rowData\"\n        [visibleColumnIndex]=\"col.visibleIndex\"\n        [value]=\"rowData | dataMapper:col.field:grid.pipeTrigger\"\n        [cellTemplate]=\"col.bodyTemplate\"\n        [lastSearchInfo]=\"grid.lastSearchInfo\"\n        [active]=\"isCellActive(col.visibleIndex)\"\n        [cellSelectionMode]=\"grid.cellSelection\"\n        [displayPinnedChip]=\"shouldDisplayPinnedChip(col.visibleIndex)\"\n        #cell>\n    </igx-expandable-grid-cell>\n</ng-template>\n",
                providers: [{ provide: IgxRowDirective, useExisting: forwardRef(() => IgxGridRowComponent) }]
            }]
    }], null, { hasColumnLayouts: [{
            type: HostBinding,
            args: ['class.igx-grid__tr--mrl']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1yb3cuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvZ3JpZC9ncmlkLXJvdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsdUJBQXVCLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNuRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsZUFBaUM7QUFDMUUsSUFDSSxJQUNJLGdCQUFnQjtBQUFLLFFBQ3JCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztBQUMxQyxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVUsQ0FBQyxHQUFHLEVBQUUsR0FBRztBQUN2QixRQUFRLE9BQU87QUFDZixZQUFZLFNBQVMsRUFBRSxHQUFHO0FBQzFCLFlBQVksR0FBRyxFQUFFLEdBQUc7QUFDcEIsU0FBUyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUFJLG9CQUFvQjtBQUFLLFFBQ3pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDNUMsWUFBWSxDQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDNUUsWUFBWSxJQUFJLENBQUM7QUFDakIsSUFBSSxDQUFDO0FBQ0wsSUFDSSxhQUFhLENBQUMsVUFBVSxFQUFFLEdBQUc7QUFDakMsUUFBUSxPQUFPO0FBQ2YsWUFBWSxTQUFTLEVBQUUsVUFBVTtBQUNqQyxZQUFZLEdBQUcsRUFBRSxHQUFHO0FBQ3BCLFNBQVMsQ0FBQztBQUNWLElBQUksQ0FBQztBQUNMLElBQ0ksSUFBSSxRQUFRO0FBQ2hCLFFBQVEsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNsRSxJQUFJLENBQUM7QUFDTDsrQ0FyQ0MsU0FBUyxTQUFDLGtCQUNQLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1NBQy9DLG1CQUFtQixFQUFFLEtBQUssa0JBQzFCLFFBQVEsRUFBRSxjQUFjLGtCQUN4Qjs7Ozs7Ozs7Ozs7Ozs7Ozt1aEJBR0M7QUFBQztBQUF1QywrQkFFeEMsV0FBVyxTQUFDLHlCQUF5QjtBQUN0Qzs7Ozs7Ozs7bXpRQU53QyxrQkFDeEMsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsbUJBQW1CLENBQUMsRUFBRSxDQUFDLGNBQ2hHOzs7Ozs7b0JBSUs7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hSb3dEaXJlY3RpdmUgfSBmcm9tICcuLi9yb3cuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gICAgc2VsZWN0b3I6ICdpZ3gtZ3JpZC1yb3cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ncmlkLXJvdy5jb21wb25lbnQuaHRtbCcsXG4gICAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBJZ3hSb3dEaXJlY3RpdmUsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IElneEdyaWRSb3dDb21wb25lbnQpIH1dXG59KVxuZXhwb3J0IGNsYXNzIElneEdyaWRSb3dDb21wb25lbnQgZXh0ZW5kcyBJZ3hSb3dEaXJlY3RpdmU8SWd4R3JpZENvbXBvbmVudD4ge1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZ3JpZF9fdHItLW1ybCcpXG4gICAgZ2V0IGhhc0NvbHVtbkxheW91dHMoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyaWQuaGFzQ29sdW1uTGF5b3V0cztcbiAgICB9XG5cbiAgICBnZXRDb250ZXh0KGNvbCwgcm93KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkaW1wbGljaXQ6IGNvbCxcbiAgICAgICAgICAgIHJvdzogcm93XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZ2V0IG1ybFJpZ2h0UGlubmVkT2Zmc2V0KCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiAhdGhpcy5ncmlkLmlzUGlubmluZ1RvU3RhcnQgP1xuICAgICAgICAgICAgLSB0aGlzLmdyaWQucGlubmVkV2lkdGggLSB0aGlzLmdyaWQuaGVhZGVyRmVhdHVyZXNXaWR0aCArICdweCcgOlxuICAgICAgICAgICAgbnVsbDtcbiAgICB9XG5cbiAgICBnZXRDb250ZXh0TVJMKHBpbm5lZENvbHMsIHJvdykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgJGltcGxpY2l0OiBwaW5uZWRDb2xzLFxuICAgICAgICAgICAgcm93OiByb3dcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBnZXQgZXhwYW5kZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyaWRBUEkuZ2V0X3Jvd19leHBhbnNpb25fc3RhdGUodGhpcy5yb3dEYXRhKTtcbiAgICB9XG59XG4iXX0=