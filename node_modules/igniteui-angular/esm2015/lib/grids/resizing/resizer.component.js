import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';
import { IgxColumnResizingService } from './resizing.service';
import { IgxColumnResizerDirective } from './resizer.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './resizing.service';
import * as ɵngcc2 from './resizer.directive';
export class IgxGridColumnResizerComponent {
    constructor(colResizingService) {
        this.colResizingService = colResizingService;
    }
}
IgxGridColumnResizerComponent.ɵfac = function IgxGridColumnResizerComponent_Factory(t) { return new (t || IgxGridColumnResizerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IgxColumnResizingService)); };
IgxGridColumnResizerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxGridColumnResizerComponent, selectors: [["igx-grid-column-resizer"]], viewQuery: function IgxGridColumnResizerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(IgxColumnResizerDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resizer = _t.first);
    } }, decls: 1, vars: 6, consts: [["igxResizer", "", 1, "igx-grid__th-resize-line", 3, "restrictHResizeMax", "restrictHResizeMin", "resizeEnd"]], template: function IgxGridColumnResizerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resizeEnd", function IgxGridColumnResizerComponent_Template_div_resizeEnd_0_listener($event) { return ctx.colResizingService.resizeColumn($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("left", -99999, "px")("height", ctx.colResizingService.resizerHeight, "px");
        ɵngcc0.ɵɵproperty("restrictHResizeMax", ctx.colResizingService.restrictResizeMax)("restrictHResizeMin", ctx.colResizingService.restrictResizeMin);
    } }, directives: [ɵngcc2.IgxColumnResizerDirective], encapsulation: 2, changeDetection: 0 });
IgxGridColumnResizerComponent.ctorParameters = () => [
    { type: IgxColumnResizingService }
];
IgxGridColumnResizerComponent.propDecorators = {
    resizer: [{ type: ViewChild, args: [IgxColumnResizerDirective, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxGridColumnResizerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                selector: 'igx-grid-column-resizer',
                template: "<div class=\"igx-grid__th-resize-line\"\n    [style.left.px]=\"-99999\" igxResizer\n    [style.height.px]=\"colResizingService.resizerHeight\"\n    [restrictHResizeMax]=\"colResizingService.restrictResizeMax\"\n    [restrictHResizeMin]=\"colResizingService.restrictResizeMin\"\n    (resizeEnd)=\"colResizingService.resizeColumn($event)\">\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.IgxColumnResizingService }]; }, { resizer: [{
            type: ViewChild,
            args: [IgxColumnResizerDirective, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9yZXNpemluZy9yZXNpemVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQVFoRSxNQUFNLE9BQU8sNkJBQTZCO0FBQzFDLElBQUksWUFBbUIsa0JBQTRDO0FBQUksUUFBaEQsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUEwQjtBQUFDLElBQUcsQ0FBQztBQUN4RTt5REFSQyxTQUFTLFNBQUMsa0JBQ1AsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sa0JBQy9DLG1CQUFtQixFQUFFLEtBQUs7RUFDMUIsUUFBUSxFQUFFLHlCQUF5QixrQkFDbkM7Ozs7O0VBQXVDLGNBQzFDOzs7Ozs7O2lHQUNJO0FBQUM7QUFDVSxZQVZQLHdCQUF3QjtBQUFHO0FBQUc7QUFDZCxzQkFXcEIsU0FBUyxTQUFDLHlCQUF5QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtBQUN0RDs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneENvbHVtblJlc2l6aW5nU2VydmljZSB9IGZyb20gJy4vcmVzaXppbmcuc2VydmljZSc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5SZXNpemVyRGlyZWN0aXZlIH0gZnJvbSAnLi9yZXNpemVyLmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICAgIHNlbGVjdG9yOiAnaWd4LWdyaWQtY29sdW1uLXJlc2l6ZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9yZXNpemVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkQ29sdW1uUmVzaXplckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHVibGljIGNvbFJlc2l6aW5nU2VydmljZTogSWd4Q29sdW1uUmVzaXppbmdTZXJ2aWNlKSB7IH1cblxuICAgIEBWaWV3Q2hpbGQoSWd4Q29sdW1uUmVzaXplckRpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgICBwdWJsaWMgcmVzaXplcjogSWd4Q29sdW1uUmVzaXplckRpcmVjdGl2ZTtcbn1cbiJdfQ==