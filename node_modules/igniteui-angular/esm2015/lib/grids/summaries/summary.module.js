import { NgModule } from '@angular/core';
import { IgxSummaryCellComponent } from './summary-cell.component';
import { IgxSummaryRowComponent } from './summary-row.component';
import { IgxSummaryDataPipe } from './grid-root-summary.pipe';
import { IgxGridSharedModules } from '../common/shared.module';
import { IgxGridPipesModule } from '../common/grid-pipes.module';
import * as ɵngcc0 from '@angular/core';
export class IgxGridSummaryModule {
}
IgxGridSummaryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxGridSummaryModule });
IgxGridSummaryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxGridSummaryModule_Factory(t) { return new (t || IgxGridSummaryModule)(); }, imports: [[
            IgxGridPipesModule,
            IgxGridSharedModules
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxGridSummaryModule, { declarations: function () { return [IgxSummaryCellComponent,
        IgxSummaryRowComponent,
        IgxSummaryDataPipe]; }, imports: function () { return [IgxGridPipesModule,
        IgxGridSharedModules]; }, exports: function () { return [IgxSummaryCellComponent,
        IgxSummaryRowComponent,
        IgxSummaryDataPipe]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxGridSummaryModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxSummaryCellComponent,
                    IgxSummaryRowComponent,
                    IgxSummaryDataPipe
                ],
                imports: [
                    IgxGridPipesModule,
                    IgxGridSharedModules
                ],
                exports: [
                    IgxSummaryCellComponent,
                    IgxSummaryRowComponent,
                    IgxSummaryDataPipe
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9zdW1tYXJpZXMvc3VtbWFyeS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFtQmpFLE1BQU0sT0FBTyxvQkFBb0I7QUFBRztnREFoQm5DLFFBQVEsU0FBQyxrQkFDTjtVQUFZLEVBQUUsc0JBQ1YsdUJBQXVCLHNCQUN2QixzQkFBc0Isc0JBQ3RCLGtCQUFrQixrQkFDckI7Y0FDRCxPQUFPLEVBQUU7YUFDTCxrQkFBa0I7O0tBQ2xCLG9CQUFvQixrQkFDdkIsa0JBQ0QsT0FBTyxFQUFFLHNCQUNMLHVCQUF1QixzQkFDdkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtRQUNyQixjQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4U3VtbWFyeUNlbGxDb21wb25lbnQgfSBmcm9tICcuL3N1bW1hcnktY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4U3VtbWFyeVJvd0NvbXBvbmVudCB9IGZyb20gJy4vc3VtbWFyeS1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IElneFN1bW1hcnlEYXRhUGlwZSB9IGZyb20gJy4vZ3JpZC1yb290LXN1bW1hcnkucGlwZSc7XG5pbXBvcnQgeyBJZ3hHcmlkU2hhcmVkTW9kdWxlcyB9IGZyb20gJy4uL2NvbW1vbi9zaGFyZWQubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRQaXBlc01vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9ncmlkLXBpcGVzLm1vZHVsZSc7XG5cblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgSWd4U3VtbWFyeUNlbGxDb21wb25lbnQsXG4gICAgICAgIElneFN1bW1hcnlSb3dDb21wb25lbnQsXG4gICAgICAgIElneFN1bW1hcnlEYXRhUGlwZVxuICAgIF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBJZ3hHcmlkUGlwZXNNb2R1bGUsXG4gICAgICAgIElneEdyaWRTaGFyZWRNb2R1bGVzXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIElneFN1bW1hcnlDZWxsQ29tcG9uZW50LFxuICAgICAgICBJZ3hTdW1tYXJ5Um93Q29tcG9uZW50LFxuICAgICAgICBJZ3hTdW1tYXJ5RGF0YVBpcGVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIElneEdyaWRTdW1tYXJ5TW9kdWxlIHt9XG4iXX0=