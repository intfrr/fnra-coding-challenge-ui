import { Pipe } from '@angular/core';
import { GridBaseAPIService } from '../api.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../api.service';
export class IgxSummaryDataPipe {
    constructor(gridAPI) {
        this.gridAPI = gridAPI;
    }
    transform(id, trigger = 0) {
        const summaryService = this.gridAPI.grid.summaryService;
        return summaryService.calculateSummaries(summaryService.rootSummaryID, this.gridAPI.get_summary_data());
    }
}
IgxSummaryDataPipe.ɵfac = function IgxSummaryDataPipe_Factory(t) { return new (t || IgxSummaryDataPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GridBaseAPIService)); };
IgxSummaryDataPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "igxGridSummaryDataPipe", type: IgxSummaryDataPipe, pure: true });
IgxSummaryDataPipe.ctorParameters = () => [
    { type: GridBaseAPIService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxSummaryDataPipe, [{
        type: Pipe,
        args: [{
                name: 'igxGridSummaryDataPipe',
                pure: true
            }]
    }], function () { return [{ type: ɵngcc1.GridBaseAPIService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1yb290LXN1bW1hcnkucGlwZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2dyaWRzL3N1bW1hcmllcy9ncmlkLXJvb3Qtc3VtbWFyeS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7QUFRcEQsTUFBTSxPQUFPLGtCQUFrQjtBQUFHLElBRTlCLFlBQW9CLE9BQTREO0FBQUksUUFBaEUsWUFBTyxHQUFQLE9BQU8sQ0FBcUQ7QUFBQyxJQUFHLENBQUM7QUFDekYsSUFDSSxTQUFTLENBQUMsRUFBVSxFQUFFLFVBQWtCLENBQUM7QUFDN0MsUUFBUSxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7QUFDaEUsUUFBUSxPQUFPLGNBQWMsQ0FBQyxrQkFBa0IsQ0FDcEMsY0FBYyxDQUFDLGFBQWEsRUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxDQUNsQyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0w7OENBZkMsSUFBSSxTQUFDLGtCQUNGLElBQUksRUFBRSx3QkFBd0Isa0JBQzlCLElBQUksRUFBRSxJQUFJLGNBQ2I7eUhBQ0k7QUFBQztBQUE0QyxZQVJ6QyxrQkFBa0I7QUFBRzs7Ozs7OzttRkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR3JpZEJhc2VBUElTZXJ2aWNlIH0gZnJvbSAnLi4vYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4R3JpZEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuLi9ncmlkLWJhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IEdyaWRUeXBlIH0gZnJvbSAnLi4vY29tbW9uL2dyaWQuaW50ZXJmYWNlJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdpZ3hHcmlkU3VtbWFyeURhdGFQaXBlJyxcbiAgICBwdXJlOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIElneFN1bW1hcnlEYXRhUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBncmlkQVBJOiBHcmlkQmFzZUFQSVNlcnZpY2U8SWd4R3JpZEJhc2VEaXJlY3RpdmUgJiBHcmlkVHlwZT4pIHsgfVxuXG4gICAgdHJhbnNmb3JtKGlkOiBzdHJpbmcsIHRyaWdnZXI6IG51bWJlciA9IDApIHtcbiAgICAgICAgY29uc3Qgc3VtbWFyeVNlcnZpY2UgPSB0aGlzLmdyaWRBUEkuZ3JpZC5zdW1tYXJ5U2VydmljZTtcbiAgICAgICAgcmV0dXJuIHN1bW1hcnlTZXJ2aWNlLmNhbGN1bGF0ZVN1bW1hcmllcyhcbiAgICAgICAgICAgIHN1bW1hcnlTZXJ2aWNlLnJvb3RTdW1tYXJ5SUQsXG4gICAgICAgICAgICB0aGlzLmdyaWRBUEkuZ2V0X3N1bW1hcnlfZGF0YSgpXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19