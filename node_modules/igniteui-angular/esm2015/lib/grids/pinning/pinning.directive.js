import { Directive } from '@angular/core';
import { ColumnChooserItemBaseDirective } from '../column-chooser-item-base';
import * as ɵngcc0 from '@angular/core';
export class IgxColumnPinningItemDirective extends ColumnChooserItemBaseDirective {
    constructor() {
        super('pinned');
    }
    /**
     * Returns whether a column could be pinned.
     * It's not possible to pin a column if there is not enough space for the unpinned area.
     * ```typescript
     * const columnItem: IgxColumnPinningItemDirective;
     * this.columnItem.pinnable;
     * ```
     */
    get pinnable() {
        return this.column.pinnable;
    }
    /**
     * Returns whether a column have pinning enabled
     */
    get pinningDisabled() {
        return this.column.disablePinning;
    }
}
IgxColumnPinningItemDirective.ɵfac = function IgxColumnPinningItemDirective_Factory(t) { return new (t || IgxColumnPinningItemDirective)(); };
IgxColumnPinningItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IgxColumnPinningItemDirective, selectors: [["", "igxColumnPinningItem", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
IgxColumnPinningItemDirective.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxColumnPinningItemDirective, [{
        type: Directive,
        args: [{
                selector: '[igxColumnPinningItem]'
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlubmluZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9waW5uaW5nL3Bpbm5pbmcuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBTTdFLE1BQU0sT0FBTyw2QkFBOEIsU0FBUSw4QkFBOEI7QUFDakYsSUFDSTtBQUNKLFFBQVEsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3hCLElBQUksQ0FBQztBQUNMLElBQ0k7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsSUFBSSxJQUFJLFFBQVE7QUFDaEIsUUFBUSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO0FBQ3BDLElBQUksQ0FBQztBQUNMLElBQUk7QUFDSjtBQUNBLE9BQU87QUFDUCxJQUFJLElBQVcsZUFBZTtBQUM5QixRQUFRLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUM7QUFDMUMsSUFBSSxDQUFDO0FBQ0w7eURBMUJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsd0JBQXdCLGNBQ3JDO3FNQUNJO0FBQUM7Ozs7OztnREFBd0Q7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29sdW1uQ2hvb3Nlckl0ZW1CYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi4vY29sdW1uLWNob29zZXItaXRlbS1iYXNlJztcblxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hDb2x1bW5QaW5uaW5nSXRlbV0nXG59KVxuZXhwb3J0IGNsYXNzIElneENvbHVtblBpbm5pbmdJdGVtRGlyZWN0aXZlIGV4dGVuZHMgQ29sdW1uQ2hvb3Nlckl0ZW1CYXNlRGlyZWN0aXZlIHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigncGlubmVkJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB3aGV0aGVyIGEgY29sdW1uIGNvdWxkIGJlIHBpbm5lZC5cbiAgICAgKiBJdCdzIG5vdCBwb3NzaWJsZSB0byBwaW4gYSBjb2x1bW4gaWYgdGhlcmUgaXMgbm90IGVub3VnaCBzcGFjZSBmb3IgdGhlIHVucGlubmVkIGFyZWEuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IGNvbHVtbkl0ZW06IElneENvbHVtblBpbm5pbmdJdGVtRGlyZWN0aXZlO1xuICAgICAqIHRoaXMuY29sdW1uSXRlbS5waW5uYWJsZTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBnZXQgcGlubmFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5waW5uYWJsZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB3aGV0aGVyIGEgY29sdW1uIGhhdmUgcGlubmluZyBlbmFibGVkXG4gICAgICovXG4gICAgcHVibGljIGdldCBwaW5uaW5nRGlzYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5kaXNhYmxlUGlubmluZztcbiAgICB9XG59XG4iXX0=