import { Component, Input, HostBinding } from '@angular/core';
import { TicksOrientation, TickLabelsOrientation } from '../slider.common';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function IgxTicksComponent_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c0 = function (a0) { return { "igx-slider__ticks-group--tall": a0 }; };
const _c1 = function (a0) { return { "igx-slider__tick-label--hidden": a0 }; };
function IgxTicksComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "span", 4);
    ɵngcc0.ɵɵtemplate(3, IgxTicksComponent_div_0_ng_container_3_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const idx_r4 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx_r0.isPrimary(idx_r4)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c1, !ctx_r0.hiddenTickLabels(idx_r4)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.tickLabelTemplateRef ? ctx_r0.tickLabelTemplateRef : _r1)("ngTemplateOutletContext", ctx_r0.context(idx_r4));
} }
function IgxTicksComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const value_r6 = ctx.$implicit;
    ɵngcc0.ɵɵtextInterpolate1(" ", value_r6, "\n");
} }
const _c2 = function () { return []; };
export class IgxTicksComponent {
    constructor() {
        /**
         * @hidden
         */
        this.ticksClass = true;
    }
    /**
     * @hidden
     */
    get ticksTopClass() {
        return this.ticksOrientation === TicksOrientation.Top;
    }
    /**
     * @hidden
     */
    get hasPrimaryClass() {
        return this.primaryTicks > 0;
    }
    /**
     * @hidden
     */
    get labelsTopToBottomClass() {
        return this.tickLabelsOrientation === TickLabelsOrientation.TopToBottom;
    }
    /**
     * @hidden
     */
    get labelsBottomToTopClass() {
        return this.tickLabelsOrientation === TickLabelsOrientation.BottomToTop;
    }
    /**
     * Returns the template context corresponding to
     * {@link IgxTickLabelTemplateDirective}
     *
     * ```typescript
     * return {
     *  $implicit //returns the value per each tick label.
     *  isPrimery //returns if the tick is primary.
     *  labels // returns the {@link labels} collection.
     *  index // returns the index per each tick of the whole sequence.
     * }
     * ```
     *
     * @param idx the index per each tick label.
     */
    context(idx) {
        return {
            $implicit: this.tickLabel(idx),
            isPrimary: this.isPrimary(idx),
            labels: this.labels,
            index: idx
        };
    }
    /**
     * @hidden
     */
    get ticksLength() {
        return this.primaryTicks > 0 ?
            ((this.primaryTicks - 1) * this.secondaryTicks) + this.primaryTicks :
            this.secondaryTicks > 0 ? this.secondaryTicks : 0;
    }
    hiddenTickLabels(idx) {
        return this.isPrimary(idx) ? this.primaryTickLabels : this.secondaryTickLabels;
    }
    /**
     * @hidden
     */
    isPrimary(idx) {
        return this.primaryTicks <= 0 ? false :
            idx % (this.secondaryTicks + 1) === 0;
    }
    /**
     * @hidden
     */
    tickLabel(idx) {
        if (this.labelsViewEnabled) {
            return this.labels[idx];
        }
        const labelStep = (Math.max(this.minValue, this.maxValue) - Math.min(this.minValue, this.maxValue)) / (this.ticksLength - 1);
        const labelVal = labelStep * idx;
        return (this.minValue + labelVal).toFixed(2);
    }
}
IgxTicksComponent.ɵfac = function IgxTicksComponent_Factory(t) { return new (t || IgxTicksComponent)(); };
IgxTicksComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxTicksComponent, selectors: [["igx-ticks"]], hostVars: 10, hostBindings: function IgxTicksComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("igx-slider__ticks", ctx.ticksClass)("igx-slider__ticks--top", ctx.ticksTopClass)("igx-slider__ticks--tall", ctx.hasPrimaryClass)("igx-slider__tick-labels--top-bottom", ctx.labelsTopToBottomClass)("igx-slider__tick-labels--bottom-top", ctx.labelsBottomToTopClass);
    } }, inputs: { primaryTicks: "primaryTicks", secondaryTicks: "secondaryTicks", primaryTickLabels: "primaryTickLabels", secondaryTickLabels: "secondaryTickLabels", ticksOrientation: "ticksOrientation", tickLabelsOrientation: "tickLabelsOrientation", maxValue: "maxValue", minValue: "minValue", labelsViewEnabled: "labelsViewEnabled", labels: "labels", tickLabelTemplateRef: "tickLabelTemplateRef" }, decls: 3, vars: 2, consts: [["class", "igx-slider__ticks-group", 3, "ngClass", 4, "ngFor", "ngForOf"], ["tickLabelDefaultTemplate", ""], [1, "igx-slider__ticks-group", 3, "ngClass"], [1, "igx-slider__ticks-tick"], [1, "igx-slider__ticks-label", 3, "ngClass"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function IgxTicksComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxTicksComponent_div_0_Template, 4, 8, "div", 0);
        ɵngcc0.ɵɵtemplate(1, IgxTicksComponent_ng_template_1_Template, 1, 1, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction0(1, _c2).constructor(ctx.ticksLength));
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
IgxTicksComponent.propDecorators = {
    primaryTicks: [{ type: Input }],
    secondaryTicks: [{ type: Input }],
    primaryTickLabels: [{ type: Input }],
    secondaryTickLabels: [{ type: Input }],
    ticksOrientation: [{ type: Input }],
    tickLabelsOrientation: [{ type: Input }],
    maxValue: [{ type: Input }],
    minValue: [{ type: Input }],
    labelsViewEnabled: [{ type: Input }],
    labels: [{ type: Input }],
    tickLabelTemplateRef: [{ type: Input }],
    ticksClass: [{ type: HostBinding, args: ['class.igx-slider__ticks',] }],
    ticksTopClass: [{ type: HostBinding, args: ['class.igx-slider__ticks--top',] }],
    hasPrimaryClass: [{ type: HostBinding, args: ['class.igx-slider__ticks--tall',] }],
    labelsTopToBottomClass: [{ type: HostBinding, args: ['class.igx-slider__tick-labels--top-bottom',] }],
    labelsBottomToTopClass: [{ type: HostBinding, args: ['class.igx-slider__tick-labels--bottom-top',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxTicksComponent, [{
        type: Component,
        args: [{
                selector: 'igx-ticks',
                template: "<div class=\"igx-slider__ticks-group\" *ngFor=\"let n of [].constructor(ticksLength); let idx=index\" [ngClass]=\"{ 'igx-slider__ticks-group--tall': isPrimary(idx)}\">\n    <div class=\"igx-slider__ticks-tick\">\n        <span class=\"igx-slider__ticks-label\" [ngClass]=\"{ 'igx-slider__tick-label--hidden': !hiddenTickLabels(idx)}\">\n            <ng-container *ngTemplateOutlet=\"tickLabelTemplateRef ? tickLabelTemplateRef : tickLabelDefaultTemplate; context: context(idx)\"></ng-container>\n        </span>\n    </div>\n</div>\n\n<ng-template #tickLabelDefaultTemplate let-value>\n    {{ value }}\n</ng-template>\n"
            }]
    }], function () { return []; }, { ticksClass: [{
            type: HostBinding,
            args: ['class.igx-slider__ticks']
        }], ticksTopClass: [{
            type: HostBinding,
            args: ['class.igx-slider__ticks--top']
        }], hasPrimaryClass: [{
            type: HostBinding,
            args: ['class.igx-slider__ticks--tall']
        }], labelsTopToBottomClass: [{
            type: HostBinding,
            args: ['class.igx-slider__tick-labels--top-bottom']
        }], labelsBottomToTopClass: [{
            type: HostBinding,
            args: ['class.igx-slider__tick-labels--bottom-top']
        }], primaryTicks: [{
            type: Input
        }], secondaryTicks: [{
            type: Input
        }], primaryTickLabels: [{
            type: Input
        }], secondaryTickLabels: [{
            type: Input
        }], ticksOrientation: [{
            type: Input
        }], tickLabelsOrientation: [{
            type: Input
        }], maxValue: [{
            type: Input
        }], minValue: [{
            type: Input
        }], labelsViewEnabled: [{
            type: Input
        }], labels: [{
            type: Input
        }], tickLabelTemplateRef: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,