import { NgModule } from '@angular/core';
import { IgxDateRangePickerComponent } from './date-range-picker.component';
import { IgxCalendarModule } from '../calendar/public_api';
import { IgxToggleModule } from '../directives/toggle/toggle.directive';
import { CommonModule } from '@angular/common';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxInputGroupModule } from '../input-group/public_api';
import { IgxIconModule } from '../icon/public_api';
import { IgxDateRangeStartComponent, IgxDateRangeEndComponent, DateRangePickerFormatPipe, IgxPickerToggleComponent, IgxDateRangeSeparatorDirective, IgxDateRangeInputsBaseComponent } from './date-range-picker-inputs.common';
import { IgxDateTimeEditorModule } from '../directives/date-time-editor/public_api';
/**
 * @hidden
 */
export class IgxDateRangePickerModule {
}
IgxDateRangePickerModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxDateRangePickerComponent,
                    IgxDateRangeStartComponent,
                    IgxDateRangeEndComponent,
                    IgxDateRangeInputsBaseComponent,
                    DateRangePickerFormatPipe,
                    IgxPickerToggleComponent,
                    IgxDateRangeSeparatorDirective
                ],
                imports: [
                    CommonModule,
                    IgxIconModule,
                    IgxButtonModule,
                    IgxToggleModule,
                    IgxCalendarModule,
                    IgxInputGroupModule,
                    IgxDateTimeEditorModule
                ],
                exports: [
                    IgxDateRangePickerComponent,
                    IgxDateRangeStartComponent,
                    IgxDateRangeEndComponent,
                    IgxDateRangeSeparatorDirective,
                    IgxDateTimeEditorModule,
                    IgxPickerToggleComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1yYW5nZS1waWNrZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2RhdGUtcmFuZ2UtcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzVFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzNELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQ0gsMEJBQTBCLEVBQUUsd0JBQXdCLEVBQ3BELHlCQUF5QixFQUN6Qix3QkFBd0IsRUFDeEIsOEJBQThCLEVBQzlCLCtCQUErQixFQUNsQyxNQUFNLG1DQUFtQyxDQUFDO0FBQzNDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBRXBGOztHQUVHO0FBNkJILE1BQU0sT0FBTyx3QkFBd0I7OztZQTVCcEMsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDViwyQkFBMkI7b0JBQzNCLDBCQUEwQjtvQkFDMUIsd0JBQXdCO29CQUN4QiwrQkFBK0I7b0JBQy9CLHlCQUF5QjtvQkFDekIsd0JBQXdCO29CQUN4Qiw4QkFBOEI7aUJBQ2pDO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLGFBQWE7b0JBQ2IsZUFBZTtvQkFDZixlQUFlO29CQUNmLGlCQUFpQjtvQkFDakIsbUJBQW1CO29CQUNuQix1QkFBdUI7aUJBQzFCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCwyQkFBMkI7b0JBQzNCLDBCQUEwQjtvQkFDMUIsd0JBQXdCO29CQUN4Qiw4QkFBOEI7b0JBQzlCLHVCQUF1QjtvQkFDdkIsd0JBQXdCO2lCQUMzQjthQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneERhdGVSYW5nZVBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS1yYW5nZS1waWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IElneENhbGVuZGFyTW9kdWxlIH0gZnJvbSAnLi4vY2FsZW5kYXIvcHVibGljX2FwaSc7XG5pbXBvcnQgeyBJZ3hUb2dnbGVNb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL3RvZ2dsZS90b2dnbGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBJZ3hCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2J1dHRvbi9idXR0b24uZGlyZWN0aXZlJztcbmltcG9ydCB7IElneElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICcuLi9pbnB1dC1ncm91cC9wdWJsaWNfYXBpJztcbmltcG9ydCB7IElneEljb25Nb2R1bGUgfSBmcm9tICcuLi9pY29uL3B1YmxpY19hcGknO1xuaW1wb3J0IHtcbiAgICBJZ3hEYXRlUmFuZ2VTdGFydENvbXBvbmVudCwgSWd4RGF0ZVJhbmdlRW5kQ29tcG9uZW50LFxuICAgIERhdGVSYW5nZVBpY2tlckZvcm1hdFBpcGUsXG4gICAgSWd4UGlja2VyVG9nZ2xlQ29tcG9uZW50LFxuICAgIElneERhdGVSYW5nZVNlcGFyYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hEYXRlUmFuZ2VJbnB1dHNCYXNlQ29tcG9uZW50XG59IGZyb20gJy4vZGF0ZS1yYW5nZS1waWNrZXItaW5wdXRzLmNvbW1vbic7XG5pbXBvcnQgeyBJZ3hEYXRlVGltZUVkaXRvck1vZHVsZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvZGF0ZS10aW1lLWVkaXRvci9wdWJsaWNfYXBpJztcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIElneERhdGVSYW5nZVBpY2tlckNvbXBvbmVudCxcbiAgICAgICAgSWd4RGF0ZVJhbmdlU3RhcnRDb21wb25lbnQsXG4gICAgICAgIElneERhdGVSYW5nZUVuZENvbXBvbmVudCxcbiAgICAgICAgSWd4RGF0ZVJhbmdlSW5wdXRzQmFzZUNvbXBvbmVudCxcbiAgICAgICAgRGF0ZVJhbmdlUGlja2VyRm9ybWF0UGlwZSxcbiAgICAgICAgSWd4UGlja2VyVG9nZ2xlQ29tcG9uZW50LFxuICAgICAgICBJZ3hEYXRlUmFuZ2VTZXBhcmF0b3JEaXJlY3RpdmVcbiAgICBdLFxuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBJZ3hJY29uTW9kdWxlLFxuICAgICAgICBJZ3hCdXR0b25Nb2R1bGUsXG4gICAgICAgIElneFRvZ2dsZU1vZHVsZSxcbiAgICAgICAgSWd4Q2FsZW5kYXJNb2R1bGUsXG4gICAgICAgIElneElucHV0R3JvdXBNb2R1bGUsXG4gICAgICAgIElneERhdGVUaW1lRWRpdG9yTW9kdWxlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIElneERhdGVSYW5nZVBpY2tlckNvbXBvbmVudCxcbiAgICAgICAgSWd4RGF0ZVJhbmdlU3RhcnRDb21wb25lbnQsXG4gICAgICAgIElneERhdGVSYW5nZUVuZENvbXBvbmVudCxcbiAgICAgICAgSWd4RGF0ZVJhbmdlU2VwYXJhdG9yRGlyZWN0aXZlLFxuICAgICAgICBJZ3hEYXRlVGltZUVkaXRvck1vZHVsZSxcbiAgICAgICAgSWd4UGlja2VyVG9nZ2xlQ29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hEYXRlUmFuZ2VQaWNrZXJNb2R1bGUgeyB9XG4iXX0=