import { Component, Input, TemplateRef, ViewChild, Output, EventEmitter } from '@angular/core';
export class IgxGridActionButtonComponent {
    constructor() {
        /**
         * Event emitted when action button is clicked.
         * @example
         * ```html
         *  <igx-grid-action-button (onActionClick)="startEdit($event)"></igx-grid-action-button>
         * ```
         */
        this.onActionClick = new EventEmitter();
        /**
         * Whether button action is rendered in menu and should container text label.
         */
        this.asMenuItem = false;
    }
    /** @hidden @internal */
    get containerClass() {
        return 'igx-action-strip__menu-button ' + (this.classNames || '');
    }
    /**
     * @hidden
     * @internal
     */
    handleClick(event) {
        this.onActionClick.emit(event);
    }
    /**
     * @hidden @internal
     */
    preventEvent(event) {
        if (event) {
            event.stopPropagation();
            event.preventDefault();
        }
    }
}
IgxGridActionButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'igx-grid-action-button',
                template: "<ng-container *ngIf=\"!asMenuItem\">\n\n    <ng-container *ngIf=\"!asMenuItem\">\n        <button igxButton=\"icon\" igxRipple (click)=\"handleClick($event)\" (mousedown)=\"preventEvent($event)\">\n            <igx-icon *ngIf=\"iconSet\" [fontSet]=\"iconSet\" [name]=\"iconName\">{{iconName}}</igx-icon>\n            <igx-icon *ngIf=\"!iconSet\" >{{iconName}}</igx-icon>\n        </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"asMenuItem\">\n        <div #container [className]='containerClass'>\n            <igx-icon *ngIf=\"iconSet\" [fontSet]=\"iconSet\" [name]=\"iconName\">{{iconName}}</igx-icon>\n            <igx-icon *ngIf=\"!iconSet\" >{{iconName}}</igx-icon>\n            <label *ngIf='asMenuItem' igxLabel>{{labelText}}</label>\n        </div>\n    </ng-container>\n</ng-container>\n"
            },] }
];
IgxGridActionButtonComponent.propDecorators = {
    container: [{ type: ViewChild, args: ['container',] }],
    onActionClick: [{ type: Output }],
    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],
    asMenuItem: [{ type: Input }],
    iconName: [{ type: Input }],
    classNames: [{ type: Input }],
    iconSet: [{ type: Input }],
    labelText: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1hY3Rpb24tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9hY3Rpb24tc3RyaXAvZ3JpZC1hY3Rpb25zL2dyaWQtYWN0aW9uLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFjLE1BQU0sZUFBZSxDQUFDO0FBTTNHLE1BQU0sT0FBTyw0QkFBNEI7SUFMekM7UUFVSTs7Ozs7O1dBTUc7UUFFSCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFTLENBQUM7UUFVMUM7O1dBRUc7UUFFSSxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBZ0Q5QixDQUFDO0lBbENHLHdCQUF3QjtJQUN4QixJQUFJLGNBQWM7UUFDZCxPQUFPLGdDQUFnQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBY0Q7OztPQUdHO0lBQ0ksV0FBVyxDQUFDLEtBQUs7UUFDckIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUFDLEtBQUs7UUFDckIsSUFBSSxLQUFLLEVBQUU7WUFDUCxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDeEIsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzFCO0lBQ0wsQ0FBQzs7O1lBL0VKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxvekJBQWdEO2FBQ25EOzs7d0JBSUksU0FBUyxTQUFDLFdBQVc7NEJBVXJCLE1BQU07MEJBUU4sU0FBUyxTQUFDLFdBQVc7eUJBTXJCLEtBQUs7dUJBTUwsS0FBSzt5QkFNTCxLQUFLO3NCQVdMLEtBQUs7d0JBTUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC1ncmlkLWFjdGlvbi1idXR0b24nLFxuICAgIHRlbXBsYXRlVXJsOiAnZ3JpZC1hY3Rpb24tYnV0dG9uLmNvbXBvbmVudC5odG1sJ1xufSlcblxuZXhwb3J0IGNsYXNzIElneEdyaWRBY3Rpb25CdXR0b25Db21wb25lbnQge1xuXG4gICAgQFZpZXdDaGlsZCgnY29udGFpbmVyJylcbiAgICBwdWJsaWMgY29udGFpbmVyOiBFbGVtZW50UmVmO1xuXG4gICAgLyoqXG4gICAgICogRXZlbnQgZW1pdHRlZCB3aGVuIGFjdGlvbiBidXR0b24gaXMgY2xpY2tlZC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGh0bWxcbiAgICAgKiAgPGlneC1ncmlkLWFjdGlvbi1idXR0b24gKG9uQWN0aW9uQ2xpY2spPVwic3RhcnRFZGl0KCRldmVudClcIj48L2lneC1ncmlkLWFjdGlvbi1idXR0b24+XG4gICAgICogYGBgXG4gICAgICovXG4gICAgQE91dHB1dCgpXG4gICAgb25BY3Rpb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8RXZlbnQ+KCk7XG5cbiAgICAvKipcbiAgICAgKiBSZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgdGVtcGxhdGUuXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYpXG4gICAgcHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgLyoqXG4gICAgICogV2hldGhlciBidXR0b24gYWN0aW9uIGlzIHJlbmRlcmVkIGluIG1lbnUgYW5kIHNob3VsZCBjb250YWluZXIgdGV4dCBsYWJlbC5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBhc01lbnVJdGVtID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBOYW1lIG9mIHRoZSBpY29uIHRvIGRpc3BsYXkgaW4gdGhlIGJ1dHRvbi5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpY29uTmFtZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQWRkaXRpb25hbCBNZW51IGl0ZW0gY29udGFpbmVyIGVsZW1lbnQgY2xhc3Nlcy5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBjbGFzc05hbWVzOiBzdHJpbmc7XG5cbiAgICAvKiogQGhpZGRlbiBAaW50ZXJuYWwgKi9cbiAgICBnZXQgY29udGFpbmVyQ2xhc3MoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuICdpZ3gtYWN0aW9uLXN0cmlwX19tZW51LWJ1dHRvbiAnICsgKHRoaXMuY2xhc3NOYW1lcyB8fCAnJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGljb24gc2V0LiBVc2VkIGluIGNhc2UgdGhlIGljb24gaXMgZnJvbSBhIGRpZmZlcmVudCBpY29uIHNldC5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpY29uU2V0OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBvZiB0aGUgbGFiZWwuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgbGFiZWxUZXh0OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgcHVibGljIGhhbmRsZUNsaWNrKGV2ZW50KSB7XG4gICAgICAgdGhpcy5vbkFjdGlvbkNsaWNrLmVtaXQoZXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW4gQGludGVybmFsXG4gICAgICovXG4gICAgcHVibGljIHByZXZlbnRFdmVudChldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==